key,developer,initial_state_time,to,initial_state,fieldtype,field,from,created,customer,priority,issuetype,projectkey,category,summary,description,resolutiondate,status,tester,lead_time_hours,lead_time_days,score
CC-2577,av,2022-03-10T13:35:42.151-0300,11608,In Technical Analysis,jira,status,11607,2022-01-12T11:04:41.000-0300,CSD,Média,Performance,CC,MELHORIAS,[Performance] Log da informação que hoje é gravada no CORPO_MENSAGEM_FILA,"* Alterar código para não gravar corpo_mensagem_fila na CC_REL_LANCAMENTO_EXTERNO
 ** Incluir geração de log na aplicação com o corpo da mensagem
 ** disponibilizar script de limpeza do corpo_mensagem_fila

 

Noticia sobre a limpeza dos dados :
[https://suporte.matera.com/support/solutions/articles/35000195125]

 ",2022-03-25T19:00:48.000-0300,Fechado,ap,96,12,24
CC-2544,ra,2022-01-25T10:16:28.583-0300,11608,In Technical Analysis,jira,status,11607,2022-01-04T09:40:32.000-0300,MOJP,Alta,Falha,CC,CORRECAO-ERROS,Tarifa de Pacote não exibida na tela FRMTARDIF,"Na tela de tarifas diferenciadas por conta (FRMTARDIF) ao informar uma tarifa que está vinculada ao pacote, o sistema informa que a tarifa não existe.

!image-2022-01-04-09-36-44-390.png|thumbnail!

Este cenário ocorre, pois no jira CC-1658 foi criado uma view para filtrar somente as tarifas que não são do pacote. No entanto, o JP sempre usou está funcionalidade, onde ele aplica uma porcentagem para cobrar um valor maior de seus clientes.
h1. *Contexto*

 Verificamos que a avaliação/tratamento do Jira CC-1658 foi realizada de forma incompleta e por isso o tratamento dado não foi o correto. 

Para correção iremos:
 * retirar a restrição da tela de cadastro de tarifas diferencias para as tarifas de pacote de tarifas,
 * incluir uma verificação na tela de cadastro de tarifas diferenciadas para impedir cadastro de tarifas diferenciadas em contas cujo campo % Tarifas do cadastro de conta corrente for diferente de 100%. 
 ** Foram realizados testes sobre o cadastro do % Tarifas e o cadastro de tarifas diferenciadas e conforme evidências (CC-2544 - Evidencias tramento % Tarifas no cadastro da conta) verificamos que quando informado um valor diferente de 100% no cadastro de contas o sistema considera este valor, ignorando a tarifa diferenciada. Desta forma para evitar um cadastro indevido iremos retornar uma mensagem de erro neste cenário: ""Essa conta possui, no cadastro de contas, campo ""% Tarifas"" diferente de 100."" 

h1. *Passo pra reproduzir*
 - Criar um pacote de tarifas e adicionar uma tarifa no campo Tipo Tarifa;
 - Acessar a tela Tarifas Diferenciadas De Conta (FRMTARDIF);
 - Clicar em Novo, informar Agencia e Conta, no campo Tarifa, informar a mesmo valor do Tipo Tarifa do pacote;

h1. *Resultado atual*

Sistema exibe a mensagem ""Tarifa Inexistente""
h1. *Resultado esperado*

A tarifa deveria ser preenchida normalmente.
h1. *Solução Técnica*
h1. *Versão*

11.8.5",2022-01-27T16:02:10.000-0300,Fechado,as,24,3,6
CC-2581,rp,2022-02-11T16:21:30.154-0300,11608,In Technical Analysis,jira,status,11607,2022-01-12T14:05:22.000-0300,BP,Média,Falha,CC,CORRECAO-ERROS,f481263 - Swagger com divergência,"Foi verificado que no swagger da API ""/v3/contas/transferencias"" o campo documento presente em ""Dados do Crédito"" e ""Dados do Débito"" está com uma declaração de que seu tipo é int64, o que permitiria um valor numérico até 9223372036854775807, sendo que a precisão do campo Documento na cc_lancamento é de 12 posições.",2022-02-23T13:29:21.000-0300,Fechado,as,72,9,18
TS-450,as,2022-03-29T08:23:05.635-0300,11608,In Technical Analysis,jira,status,11607,2022-02-25T17:43:02.000-0300,H6LOC,Urgente,Tarefa,TS,ADMINISTRATIVA,484156 - erro de integração SDTES => Standin,"Cliente relata problemas com a Integração SDTES / StandIn.

O problema ocorre no SDTES, onde a configuração de uma fila específica esta dando erro, aparentemente falta o parâmetro:

java.lang.NullPointerException: value of jms.queue

""service"":""LIQUIDACAO-FINANCEIRA""

 

Solicitamos apoio para realização de testes para verificar o funcionamento nas versões atuais.

 

Fluxo do processo gerado a partir do tratamento do TS-109:

[https://wiki.matera.com/wiki/Liquida%C3%A7%C3%A3o_Financeira_(documenta%C3%A7%C3%A3o_t%C3%A9cnica)#Integra.C3.A7.C3.A3o_com_o_stand_in]

 ",2022-03-29T08:24:06.000-0300,Fechado,as,0.01676805555820465,1,1
CC-2782,ra,2022-03-15T08:36:09.235-0300,11608,In Technical Analysis,jira,status,11607,2022-03-11T13:28:55.000-0300,H6LOC,Média,Falha,CC,CORRECAO-ERROS,F485889 - 3290 - Pix sem numero do Banco,"Conforme reportado pelo cliente no chamado 477862, mesmo após a implementação da correção que realizava o parse da Contraparte nas transações de Pix, ainda haviam registros gerados no 3290 onde existia falta de informações da contraparte.
No chamado 485889, analisando a montagem da view e dados enviados de exemplo, identificamos que o uso da function sBcBuscaIdBanco na view vcc_movimentacao_cc não retorna os dados dos ISPB's cujo os números iniciais sejam zero.

Exemplo do caso apresentado: 
ISPB 00360305 - Caixa Econômica Federal
 !image-2022-03-11-13-13-50-582.png|thumbnail! 

Analisando a function, o campo esperado pela mesma para tratamento é do tipo varchar e assim, entendemos que para garantirmos a consulta e retorno corretos, o adequado é o tratamento com LPAD do Campo.

 !image-2022-03-11-13-20-58-119.png|thumbnail! 
",2022-03-25T19:00:23.000-0300,Fechado,as,72,9,18
CC-2744,ra,2022-03-07T16:29:28.642-0300,11608,In Technical Analysis,jira,status,11607,2022-02-23T08:59:34.000-0300,H6LOC,Média,Falha,CC,CORRECAO-ERROS,[Calculo de Encargos] Ajuste em configuração de dias da fórmula,"Foi identificado que as fórmulas 9 e 10 estão fazendo pro-rata quando ocorre virada de mês em um final de semana ou feriado.

Analisando o código (sCcValorFatorTaxa), foi verificado que estas fórmulas não utilizam o parametro ""pDiasOntemHoje"", que corresponde ao numero de dias corridos entre o dia do cálculo e o próximo dia útil. Isso significa que o calculo desta fórmula é para 1 dia apenas, e neste caso, não deve ser feito calculo de pro-rata na ocorrencia de virada de mês em final de semana ou feriado.

Para ajustar o comportamento, e necessário atualizar tabela de configuração para que estas fórmulas possuem ""nuemro_dias_formulas"" = 22 (que indica que o cálculo é por dias úteis)

Esta atualização deverá ser feita por script pois o campo não está disponível no frontend.

 ",2022-03-16T19:44:52.000-0300,Fechado,as,64,8,16
CC-2733,ra,2022-03-09T10:24:48.296-0300,11608,In Technical Analysis,jira,status,11607,2022-02-21T14:45:40.000-0300,NCBA,Alta,Falha,CC,CORRECAO-ERROS,Relatório de risco que está dando erro ao tentar extraí-lo,"Erro ao gerar o relatório Menu Contas > Classificação de Risco > Relatório de Dívida Por Conta >

 

Erro :


ERROR - Handing exception: java.sql.SQLException: ORA-01791: not a SELECTed expression

 

!image-2022-02-21-14-41-55-256.png!",2022-03-16T19:44:57.000-0300,Fechado,as,48,6,12
CC-2785,gr,2022-03-11T14:40:34.219-0300,11608,In Technical Analysis,jira,status,11607,2022-03-11T14:14:38.000-0300,H6LOC,Alta,Falha,CC,CORRECAO-ERROS,Erro no tratamento da releaseHolds para valores decimais em contas de pagamento,Necessário ajustar o tratamento do valor decimal na chamada da releaseHolds pois em função de conversão de JSON está entrando num fluxo de bloqueio resultado num erro de validação de saldo.,2022-03-16T19:45:06.000-0300,Fechado,cc,32,4,8
CC-2816,ev,2022-03-21T08:37:35.996-0300,11608,In Technical Analysis,jira,status,11607,2022-03-18T11:56:15.000-0300,CSD,Média,Tarefa,CC,ADMINISTRATIVA,Levantamento das configurações para geração do Cnab240 no servidor,"Realizar um levantamento para verificar como gerar o Cnab no servidor.
Temos o registros dos seguintes passos:
 *  É possível configurar o processo no fechamento do período ou na abertura de dia No processo automático deve ser informado um caminho do servidor, conforme rotina abaixo. Existe tela para esta configuração ou apenas via dml?

select config.rotina, config.caminho_cnab, config.ind_gera_servidor into vsRotina, vsCaminhoArq, vsIndGeraServidor from cc_configuracao_cnab config;
 * Processo automático é executado pela rotina pCcArquivoCnab.GeraArquivo, onde a procedure principal que gera os dados sCcGeraCnab240 seria passada via parâmetro a partir da leitura da tabela de configuração acima (cc_configuracao_cnab).",2022-03-30T15:29:44.000-0300,Fechado,ev,64,8,16
FS247-26,rp,2022-02-09T08:12:18.186-0300,11608,In Technical Analysis,jira,status,11607,2022-01-21T15:16:11.000-0300,CSD,Alta,Vulnerabilidade de Segurança,FS247,ADMINISTRATIVA,Vulnerabilidade Log4 v1.x,"Mitigação de componente Vulneravel Log4J para Fs247


Recentemente foram identificados em seu sistema o componente vulneravel do Log4j de nivel critico para o sistema Fs247.

O time de Desenvolvimento Seguro recomenda estas instruções para mitigação da Vulnerabilidade:

-Substituir a biblioteca Log4J 1.x pela biblioteca Logback 1.2.10+ ou Latest Stable
OU
-Substituir a biblioteca Log4J 1.2 pela biblioteca Log4J 2.17+ ou Latest Stable

Portanto é preciso que o time resolva esta vulnerabilidade.

Conforme Politica de Gestão de Vulnerabilidade de Software disponivel em :
 - https://wiki.matera.com/wiki/PoliticaGestaoVulnerabilidadesSoftware

O prazo para solução é de 10 dias corridos a partir da data da abertura do cartão.

Duvidas entre em contato com: core.devseguro@matera.com ou me chame no chat.",2022-02-09T09:48:00.000-0300,Fechado,rp,1.594948333369361,1,1
CC-2561,et,2022-01-19T09:43:47.554-0300,11608,In Technical Analysis,jira,status,11607,2022-01-06T18:14:33.000-0300,CSD,Média,Legislação,CC,MELHORIAS,[PIX_TROCO] Inclusão de campo de composição do valor associado ao lançamento,"h1. Contexto

Alterar os serviços de lançamento para receber/retornar um novo campo com a composição dos valores do lançamento que deverá ser utilizado na apresentação do extrato do cliente.

Verificar se no estorno e exclusão serão impactados por este novo atributo.
h1. Versões

11.14.0, 12.7.0 e 13.1.0
h1. Especificação de negócio
h2. *Serviços de lançamento*

Alterar os serviços de lançamento para inclusão do campo de informações adicionais contendo a definição do campo composição de valor. 
 * Serviços:
 ** POST /v2/contas/\{agencia}/\{conta}/lancamentos
 ** POST /v2/lancamentos
 ** POST /v4/lancamentos
 ** Remover o serviço POST /v3/lancamentos do Conta Corrente. 

Esta alteração deve ser tratada em todos os fluxos de integração entre o Standin e o Conta Corrente: síncrono, assíncrono, assíncrono incondicional; assim como os processos de replicação de lançamentos.
 * Regras: 
 ** Definição: atributo informacoesAdicionais,opcional, que para tratamento do Pix Troco deverá ser enviado a composicaoValor conforme especificação no swagger no Jira CC-2504 .
 ** Regra composicaoValor:
 *** Criação de uma propriedade para ativar/desativar a validação do campo composicaoValor. Criação do parâmetro  ""lancamento.validaComposicaoValor"" com valor default = S
 *** A validação do somatório dos itens que compõem o valor do lançamento deve ser realizada sempre entretanto o comportamento do sistema irá variar conforme propriedade lancamento.validaComposicaoValor.
 **** lancamento.validaComposicaoValor=S
 ***** Lancamento com composicao OK. Persistir o lançamento registrando na cc_lanc_informacoes_adicionais.ind_composicao_valor_valida = S
 ***** Lancamento com composicao NOK. O lançamento não será persistido e deverá ser retornado no code 400 uma nova mensagem de erro: ""O valor do lançamento é diferente da composição informada.""
 **** lancamento.validaComposicaoValor=N
 ***** Lancamento com composicao OK. Persistir o lançamento registrando na cc_lanc_informacoes_adicionais.ind_composicao_valor_valida = S
 ***** Lancamento com composicao NOK.Persistir o lançamento registrando na cc_lanc_informacoes_adicionais.ind_composicao_valor_valida = N
 ** Detalhe do fluxo assíncrono incondicional 
 *** o comportamento da validação deve ser igual ao descrito quando lancamento.validaComposicaoValor=N.
 **  Exemplo do novo atributo:

{code:java}
      ""informacoesAdicionais"": {
        ""composicaoValor"": {
          ""itens"": [
            {
              ""codigo"": ""PIX_PURCHASE"",
              ""valor"": 739.39
            },
            {
              ""codigo"": ""PIX_CHANGE"",
              ""valor"": 50
            }
          ]
        }
      }
{code}
h2. Replicação para Standin

Replicar o novo atributo informacoesAdicionais para o Standin:
{code:java}
  ""informacoesAdicionais"": {
        ""composicaoValor"": {
          ""itens"": [
            {
              ""codigo"": ""PIX_PURCHASE"",
              ""valor"": 739.39
            },
            {
              ""codigo"": ""PIX_CHANGE"",
              ""valor"": 50
            }
          ]
        }
      }
{code}
 
h2. Serviços de extrato priorizados

Alterar os serviços abaixo para incluir o campo InformacoesAdicionais (additionalInformation) no response, swagger no Jira CC-2504.

O campo InformacoesAdicionais deve ser apresentando nestes serviços independente das informações estarem válidas ou não (não considerar a flag CC_LANC_INFORMACOES_ADICIONAIS.ind_composicao_valor_valido)
 * GET /v1/contas/\{agencia}/\{conta}/extrato
 * GET /v1/entries

 
h1. Especificação técnica

 
h1. Estimativa de horas (Dev/Teste)

 ",2022-03-04T16:41:51.000-0300,Fechado,dro,240,30,60
CC-2745,gr,2022-02-23T14:28:44.419-0300,11608,In Technical Analysis,jira,status,11607,2022-02-23T11:01:26.000-0300,OL,Média,Falha,CC,CORRECAO-ERROS,F484649 - Duplicação de lançamentos no Standin,"Durante a implantação do Standin na OLX foi identificado que no fluxo de lançamento assíncrono incondicional, a mensagem retornada pelo conta está passando incorretamente as tags ""idSistemaExternoLancamentoBloqueio"" e ""sistemaExternoLancamentoBloqueio"". 
Conforme verificado pelo Rafael Paes em conjunto com o Martin, essa mensagem é entendida pelo Standin como sendo um novo lançamento e faz com que, quando a mesma é processada, gere um novo lançamento no Standin, duplicando o bloqueio que já existe.
",2022-03-04T14:35:33.000-0300,Fechado,as,40,5,10
TS-421,cal,2022-02-24T09:26:31.314-0300,11608,In Technical Analysis,jira,status,11607,2022-01-31T12:13:34.000-0300,NGACOB,Alta,Falha,TS,CORRECAO-ERROS,Não estão sendo integradas as liquidações de impostos após card TS-356,"h1. Data para ficar pronto (planejada): 08/04
h1. *Contexto*

Bom dia,

Após a liberação do card TS-356 não esta sendo realizado a contabilização das liquidações de impostos, exemplo roteiro 230(CETIP/SELIC) e 100(Remunerador), pois houve uma mudança na procedure 
 sTsContabilizaDia onde esta deixou de busca a coluna id_direcao da tabela 
 ts_hist_liqdc e passou a buscar da tabela ts_lanc_fluxo_caixa, com isto não é encontrado a conta contábil para realizar a contabilização, já que as liquidações destes roteiros na tabela ts_lanc_fluxo_caixa constam como 'E' na coluna ind_direcao. Como não é encontrado nenhuma conta contábil o sistema não realiza a contabilização das mesmas.

 
 Qualquer dúvida estou a disposição.
  
 Dionatha Ribeiro
h1. *Passo pra reproduzir*
 * Substituir as datas do script em anexo utilizando como base as datas do seu provisionamento. Substituir por D+1, D+0, D+0 e d+10, respectivamente.

                                                  !image-2022-03-11-08-19-55-611.png|width=341,height=72!
 * Rodar todo o script de uma vez e commitar.
 * Em Cadastro > Lançamentos Contábeis cadastrar um novo com número 111 e descrição IMPOSTO.
 * Em Cadastro > Históricos cadastrar um novo com histórico doc como 111, descrição IMPOSTO. Selecionar o lançamento contábil 111 e marcar a caixa Integra no C/C.
 * Em Cadastro > Contas Contábeis selecionar o lançamento Imposto(111), liquidação SELIC, direção ENTRADA, clicar no botão conta débito e selecionar uma conta. Repetir o mesmo processo e adicionar, também, uma conta contábil com direção SAÍDA.
 * Verificar ""SELECT * FROM TS_FLUXO_RECOLHIMENTO_IMPOSTO T where t.id_liqdc = 17184530; "" e verificar a DT_ENTRADA.
 * Virar dias até chegar em DT_ENTRADA + 2.
 * Verificar  ""SELECT C.ID_DIRECAO , T.* FROM TS_CONTBDE_DIARIA T, TS_CONTA_CONTABIL C WHERE T.ID_CONTA_CONTABIL = C.ID_CONTA_CONTABIL AND T.DT_ENTRADA = '13/06/2011';"" substituindo a data pela DT_ENTRADA do passo anterior.

h1. *Resultado atual*

Após realizar todo esse processo, o último select não retorna resultados. Atestando a não contabilização de impostos.
h1. *Resultado esperado*

Ter um registro gerado no último select realizado.
h1. *Solução Técnica*

Em sTsContabilizaDia voltar a utilizar ts_hist_liqdc para trazer o id_direcao.

Em sTsInsereRetencaoImposto aproximadamente na linha 184 substituir vDtLiqdc por vDtRecolhimento.
h1. *Versão*

11.0.X",2022-04-08T17:21:22.000-0300,Fechado,ap,232,29,58
CC-2955,rp,2022-05-11T08:36:03.453-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-04-20T16:04:48.000-0300,H6LOC,Alta,Falha,CC,CORRECAO-ERROS,F487792 - Isenção indevida de Juros no N Dias,"h1.*Contexto*

Conforme análise realizada em conjunto com [~feola] e [~asf], identificamos que ao realizar uma alteração em Conta Garantida que possua isenção de juros (funcionalidade de N dias sem juros), o Conta está realizando a isenção indevida de encargos do período.

O processo de isenção ocorre quando o contrato da conta é alterado e é realizada a chamada da procedure sCcAlteraCcGarantida, conforme print abaixo:

!image-2022-04-20-15-21-51-902.png!


h1.*Passo pra reproduzir*

Conta do tipo garantida;
Possui dias de isenção configurado;

Cadastrar uma conta do tipo garantida com N Dias;
Inserir um contrato de crédito;
Utilizar o limite para gerar encargos;
Virar dois dias (para contabilizar os encargos);
Validar no extrato interno os encargos;
Realizar a alteração no contrato de crédito;
Visualizar o extrato novamente;
O valor do encargos deve ser diferente (menor) do que total computado na cc_detalhamento_sem_juros

h1.*Resultado atual*

Isenção indevida de encargos de N dias na alteração do Contrato 

h1.*Resultado esperado* 

Não isentar encargos de N dias na alteração do Contrato 
 
h2. Análise técnica

O desenvolvimento que gerou o erro está descrito na pendência: [https://cas2.matera.com/project/chamado/chamado.xhtml?id=333132]

Como a pendência descreve o que o erro ocorre na desativação de conta,  a alteração descrita acima deve ser removida da procedure sCcAlteraCcGarantida e deve ser incluida na procedure sCcDesativacaoCc antes da chamada da sCcValidaDesativacao.

Desta forma, caso a conta possua encargos de N dias sem juros que deverão ser ""perdoados"", estes encargos serão zerados antes de chamar a procedure sCcValidaDesativacao, que estoura o erro ""CC-22"" quando a conta possui encargo pendente.

1 - Alterações na ""sCcAlteraCcGarantida""

Remover variável:
{code:sql}
vNDiasNegMesCorr             cc_cc.num_dias_neg_mes_corr%TYPE;
{code}
Remover bloco de código:
{code:sql}
    --Valida se a conta tem N dias de isen��o e se o n�mero de dias negativo � menor ou igual a n�mero m�ximo de dias de isen��o e    chama a proc sCcTransfereJurosACobrarNDias para verifica��o de encargos pendentes   
    if vMaxDiasSemJuros > 0 then
      --
      pCcContaGarantida.BuscaNumDiasNegMes(pinIdCc => pIdcc, pidtData => null, ponNumDiasNegMesCorr => vNDiasNegMesCorr);
      --
      if vNDiasNegMesCorr <= vMaxDiasSemJuros then    
        --
        pSdLog.Info('SDCONTA2', 'sCcTransfereJurosACobrarNDias', 'sCcTransfereJurosACobrarNDias' || '(' ||
                    'pIdCc => '        || pIdCc                          ||
                    ', pNDias => '     || vNDiasNegMesCorr               ||
                    ', pDataFinal => ' || vDataDme2                      || ')');
        --
        sCcTransfereJurosACobrarNDias(pIdCc => pIdCc, pNDias => vNDiasNegMesCorr, pDataFinal => vDataDme2 );
        --
      end if;
      --
    end if;{code}
 

2 - Alterações na ""sCcDesativaCc""

 Incluir as variáveis:

{code:sql}
  vMaxDiasSemJuros           cc_conta_garantida.max_dias_sem_juros%type;
  vNDiasNegMesCorr           cc_cc.num_dias_neg_mes_corr%TYPE;
  vDataDme1                  date;
  vDataDme2                  date;

  vDataDme1 := sBcRoundDiaUtil( vDataReferencia -1, -1 );
  vDataDme2 := sBcRoundDiaUtil( vDataDme1 -1, -1 );
{code}

Antes da chamada da ""sCcValidaDesativacao"" incluir o bloco de código retirado da ""sCcAlteraCcGarantida"" assim como o carregamento das váriavel de vMaxDiasSemJuros:


{code:sql}
  -- Busca o maximo de dias de isencao que a conta tem configurada.
  --
  vMaxDiasSemJuros := pCcContaGarantida.RetornaMaxDiasSemJuros (
                      pinIdCc                        => pIdCc,
                      piDtData                       => vDataReferencia,
                      piIndVerificaContEncerradoDme1 => 'N'
                      );
  --
  -- Valida se a conta tem N dias de isencao e se o numero de dias negativo for menor ou igual ao numero maximo de dias de isencao e chama a proc sCcTransfereJurosACobrarNDias para verificacao de encargos pendentes
  --
  if vMaxDiasSemJuros > 0 then
    --
    pCcContaGarantida.BuscaNumDiasNegMes(pinIdCc => pIdcc, pidtData => null, ponNumDiasNegMesCorr => vNDiasNegMesCorr);
    --
    if vNDiasNegMesCorr <= vMaxDiasSemJuros then    
      --
      pSdLog.Info('SDCONTA2', 'sCcTransfereJurosACobrarNDias', 'sCcTransfereJurosACobrarNDias' || '(' ||
                  'pIdCc => '        || pIdCc                          ||
                  ', pNDias => '     || vNDiasNegMesCorr               ||
                  ', pDataFinal => ' || vDataDme2                      || ')');
      --
      sCcTransfereJurosACobrarNDias(pIdCc => pIdCc, pNDias => vNDiasNegMesCorr, pDataFinal => vDataDme2 );
      --
    end if;
    --
  end if;
{code}

*{color:#DE350B}3 - Validar os DBTests que envolvem as procedures ""sCcAlteraCcGarantida"" e ""sCcDesativaCc""{color}*

h2. Cenários de teste

*Importante:* Todos os testes abaixo consideram que as criações estão sendo feitas no inicio do mês, pois, caso haja virada de mês no meio da execução de teste, as condições citadas não serão mantidas.
h3. Desativação de conta com configurações de encargos no contrato

 

2 - Conta possui configuração de encargos no contrato e conta ficou negativa com *a mesma quantidade de dias* que o valor configurado em ""max dias sem juros"" e possui encargos pendentes calculados
 * Criar conta corrente garantida (CC1)
 * Cadastrar contrato de crédito
 * configurar taxa de encargos (ex. 8% pre-fixada) no contrato
 * configurar max dias sem juros com 5 dias (aqui, deve ser observada a data da base pois na ocorrência de um final de semana ou feriado pode ser que a conta ultrapasse o número de dia
 * incluir débito de modo que a conta fique negativa
 * virar 6 dias (conta estará negativa há 4 dias)
 * Visualizar extrato: será exibido valor de encargos calculados
 * Visualizar relatório de saldo efetivo e realizar crédito para D-1 de modo que a conta fique positiva
 * Encomendar IOF pendente para D-1
 * Não haverá encargos pendente para encomendar
 * Solicitar a desativação da conta: a conta será desativada e todos os encargos calculados serão perdoados

3 - Conta possui configuração de encargos no contrato e conta ficou negativa *mais dias* que o valor configurado em ""max dias sem juros"" e possui encargos pendentes calculados
 * Criar conta corrente garantida (CC1)
 * Cadastrar contrato de crédito
 * configurar taxa de encargos (ex. 8% pre-fixada) no contrato
 * configurar max dias sem juros com 5 dias 
 * incluir débito de modo que a conta fique negativa
 * virar 10 dias 
 * Visualizar extrato: será exibido valor de encargos calculados
 * Visualizar relatório de saldo efetivo e realizar crédito de modo que a conta fique positiva
 * Encomendar IOF pendente
 * Solicitar a desativação da conta: a conta não será desativada e será emitido erro informando que a conta possui encargos pendentes
 * Realizar encomenda dos encargos para D-1
 * Solicitar a desativação da conta: a conta será desativada

4 - Conta possui configuração de encargos no contrato e não conta ficou negativa no mês
 * Criar conta corrente garantida (CC1)
 * Cadastrar contrato de crédito
 * configurar taxa de encargos (ex. 8% pre-fixada) no contrato
 * configurar max dias sem juros com 5 dias 
 * virar 10 dias 
 * Visualizar extrato: não haverá valor de encargos calculados
 * Solicitar a desativação da conta: a conta será desativada

h3. Desativação de conta com configurações de encargos no tipo de conta

1 - Conta possui configuração de encargos no tipo de conta e conta ficou negativa *menos* dias de que o valor configurado em ""max dias sem juros"" e possui encargos pendentes calculados
 * Criar tipo de conta T1 com taxa de juros maior que zero (8% pre-fixada) e Num dias isenção igual a 10
 * Criar conta corrente garantida (CC1) associada ao tipo de conta T1
 * Cadastrar contrato de crédito
 * não configurar taxa de encargos no contrato
 * incluir débito de modo que a conta fique negativa
 * virar 3 dias
 * Visualizar extrato: será exibido valor de encargos calculados
 * Visualizar relatório de saldo efetivo e creditar conta corrente de modo que a conta fique positiva
 * Encomendar IOF pendente
 * Não haverá encargos pendente para encomendar
 * Solicitar a desativação da conta: a conta será desativada e todos os encargos calculados serão perdoados

2 - Conta possui configuração de encargos no tipo de conta e conta ficou negativa com *a mesma quantidade de dias* que o valor configurado em ""max dias sem juros"" e possui encargos pendentes calculados
 * Criar tipo de conta T1 com taxa de juros maior que zero (8% pre-fixada) e Num dias isenção igual a 5
 * Criar conta corrente garantida (CC1) associada ao tipo de conta T1
 * Cadastrar contrato de crédito
 * Não configurar taxa de encargos no contrato
 * incluir débito de modo que a conta fique negativa
 * virar 6 dias (conta estará negativa há 4 dias)
 * Visualizar extrato: será exibido valor de encargos calculados
 * Visualizar relatório de saldo efetivo e realizar crédito para D-1 de modo que a conta fique positiva
 * Encomendar IOF pendente para D-1
 * Não haverá encargos pendente para encomendar
 * Solicitar a desativação da conta: a conta será desativada e todos os encargos calculados serão perdoados

3 - Conta possui configuração de encargos no tiop de conta e conta ficou negativa *mais dias* que o valor configurado em ""max dias sem juros"" e possui encargos pendentes calculados
 * Criar tipo de conta T1 com taxa de juros maior que zero (8% pre-fixada) e Num dias isenção igual a 5
 * Criar conta corrente garantida (CC1) associada ao tipo de conta T1
 * Cadastrar contrato de crédito
 * Não configurar taxa de encargos no contrato
 * Incluir débito de modo que a conta fique negativa
 * virar 10 dias 
 * Visualizar extrato: será exibido valor de encargos calculados
 * Visualizar relatório de saldo efetivo e realizar crédito de modo que a conta fique positiva
 * Encomendar IOF pendente
 * Solicitar a desativação da conta: a conta não será desativada e será emitido erro informando que a conta possui encargos pendentes
 * Realizar encomenda dos encargos para D-1
 * Solicitar a desativação da conta: a conta será desativada

4 - Conta possui configuração de encargos no tipo de conta e não conta ficou negativa no mês
 * Criar tipo de conta T1 com taxa de juros maior que zero (8% pre-fixada) e Num dias isenção igual a 10
 * Criar conta corrente garantida (CC1) associada ao tipo T1
 * Cadastrar contrato de crédito
 * Não configurar taxa de encargos no contrato
 * virar 10 dias 
 * Visualizar extrato: não haverá valor de encargos calculados
 * Solicitar a desativação da conta: a conta será desativada

 
h3. Alteração de limite de conta com configurações de encargos no contrato

1 - Conta possui configuração de encargos no contrato e conta ficou negativa *menos* dias de que o valor configurado em ""max dias sem juros"" e possui encargos pendentes calculados
 * Criar conta corrente garantida (CC1)
 * Cadastrar contrato de crédito
 * configurar taxa de encargos (ex. 8% pre-fixada) no contrato
 * configurar max dias sem juros com 10 dias
 * incluir débito de modo que a conta fique negativa
 * virar 3 dias
 * Visualizar extrato: será exibido valor de encargos calculados
 * Aumentar o limite da conta garantida
 * Visualizar extrato: será exibido valor de encargos calculados no passo anterior
 * Virar o dia
 * Visualizar extrato: será exibido valor de encargos calculados no passo anterior somado a mais um dia de cálculo.  O valor apresentado corresponderá à soma dos valores calculados diariamente e que podem ser visualizados no relatório de detalhamento de encargos N sem juros

 

2 - Conta possui configuração de encargos no contrato e conta ficou negativa *mais* dias de que o valor configurado em ""max dias sem juros"" e possui encargos pendentes calculados
 * Criar conta corrente garantida (CC1)
 * Cadastrar contrato de crédito
 * configurar taxa de encargos (ex. 8% pre-fixada) no contrato
 * configurar max dias sem juros com 5 dias
 * incluir débito de modo que a conta fique negativa
 * virar 10 dias
 * Visualizar extrato: será exibido valor de encargos calculados
 * Aumentar o limite da conta garantida
 * Visualizar extrato: será exibido valor de encargos calculados no passo anterior
 * Virar o dia
 * Visualizar extrato: será exibido valor de encargos calculados no passo anterior somado a mais um dia de cálculo.  O valor apresentado corresponderá à soma dos valores calculados diariamente e que podem ser visualizados no relatório de detalhamento de encargos N sem juros




",2022-06-17T17:24:49.000-0300,Resolved (Pilot),ap,216,27,54
CC-2858,as,2022-04-04T15:02:55.810-0300,11608,In Technical Analysis,jira,status,11607,2022-03-29T08:35:22.000-0300,CSD,Média,Tarefa,CC,MANUAL,Levantamento BofA RISK ,"O Cliente BofA nos requisitou responder a planilha com duvidas relativas a utilização de memória, tokens de sessão etc para nossos aplicativos fornecidos a eles
 
[https://docs.google.com/spreadsheets/d/1ZjhlWjpM4xjEcQDylN-fp31Ijt-cgAj3MTGvDIWNNtI/edit#gid=0]
 
Idealmente vamos precisar dessas respostas até sexta feira (01/Abr) para ter tempo hábil para revisar as respostas junto ao time da Custom do BofA
 
Além disso, dentro do possível, seria de extrema importância responder *a partir de qual versão* uma determinada funcionalidade segura foi implementada (ex: Troca do Matera_Token pelo OAuth2)
 
 ",2022-04-04T15:05:26.000-0300,Fechado,as,0.04171944446033902,1,1
CC-2928,lj,2022-04-13T19:28:10.708-0300,11608,In Technical Analysis,jira,status,11607,2022-04-11T07:51:55.000-0300,CSD,Média,Falha,CC,CORRECAO-ERROS,[MED/JUD] Exclusão de lançamentos,"Ao realizar a exclusão de um lançamento ou transferência, caso exista algum monitoramento ativo JUD/MED, o novo valor disponível deverá ser utilizado para realização do bloqueio de saldo associado ao monitoramento e seguindo as regras atuais de priorização e valores .

Serviços de exclusão:
 * DELETE /v2/lancamentos
 * DELETE /v1/contas/transferencias/\{idTransferencia}

h1. Resultado atual

Quando excluímos um lançamento ou transferência, o saldo não é capturado pelo monitoramento. Isso só ocorre após realizar um lançamento qualquer.
h1. Resultado esperado

Ao realizar a exclusão de um lançamento ou a exclusão de uma transferência, caso a conta possua algum monitoramento ativo, deve se validar e bloquear o saldo disponível na conta.
h1. Solução Técnica

O método desenvolvido no card CC-2129 ({{verificaMonitoramentos}}) para verificar se a conta possui algum monitoramento deve ser incluído na classe RemoveLancamentoBusiness nas linhas 98 e 126 para monitorar as exclusões de lançamentos e na classe TransferenciaBusiness na linha 460 para monitorar as exclusões de transferência.

  
h1. Versão

11.9.x em diante",2022-04-30T12:28:32.000-0300,Fechado,cc,88,11,22
CC-2929,as,2022-04-13T10:07:59.661-0300,11608,In Technical Analysis,jira,status,11607,2022-04-11T08:10:29.000-0300,CSD,Média,Tarefa,CC,DEFIC FUNCIONAL,Levantamento campos relatórios de saldo e extratos para DTW,"Realizar o levantamento dos campos apresentados nos relatórios de saldo e extrato do Conta corrente para que seja utilizado como base no B&st.

Relatórios:
 * Contas > Relatórios > Saldo das Contas > Saldos
 * Lançamentos > Relatórios > Extratos > Interno
 * Lançamentos > Relatórios > Extratos > Periódico
 * Lançamentos > Relatórios > Extratos > Correntista > Extrato periódico

Serviço:
 * GET /v2/contas/extrato

 

*Levantamento*:
 * Campos de filtro
 * Campos apresentados
 * Origem dos campos apresentados

 ",2022-06-02T09:28:03.000-0300,Fechado,as,280,35,70
CC-2708,as,2022-03-07T18:15:38.833-0300,11608,In Technical Analysis,jira,status,11607,2022-02-15T16:17:10.000-0300,H6LOC,Média,Performance,CC,MELHORIAS,[Performance] Melhoria plano de execução na replicação de saldos,"*pCcTrataReplicacaoLancamento.ReplicacaoLancamentoSaldo*

 

Hoje o seguinte cursor é executado:

 
{code:sql}
select lanc.id_lancamento,
       hist.tipo_lancamento
from   cc_historico    hist,
       cc_lancamento   lanc
where lanc.historico         = hist.id_historico and
      hist.id_historico      = 99                and
      lanc.data_lancamento   = vDataDme2         and
      lanc.cc in ( select cc
                   from  cc_historico,
                         cc_lancamento
                   where data_lancamento  = vDataDme2    and
                         historico        = id_historico and
                         tipo_lancamento in ( 'D', 'C' ) ) 
 {code}
se os saldos já foram inseridos na cc_lancamento, poderia retirar o subselect:
{code:sql}
select lanc.id_lancamento,
       hist.tipo_lancamento
from   cc_historico    hist,
       cc_lancamento   lanc
where lanc.historico         = hist.id_historico and
      hist.id_historico      = 99                and
      lanc.data_lancamento   = vDataDme2 
 {code}
 
 * Foi validado com Martin se há problemas em enviar 2x um lançamento de saldo para o Stand In, pois a consulta acima irá enviar o lançametno de saldo ZERADO para as contas cadastradas em D-1 (foi respondido em 26/01 que tem idempotencia, então não gera problema)
 * Avaliar essa situação em base de alto volume (Saldo duplicado zerado na data do cadastro)
 ** no  cadastro da conta, o lançametno de saldo zerado é enviado pra a fila?
 * Tempo de execução no C6 em 04/01:  138 minutos

 

Este mesmo objeto também deve ser alterado para fazer commits parciais e buscar os registros com BULK/Forall . A implementação do bulk foi feita de forma emergencial no objeto ([^sCcReplicaLancSaldoAssincrono_v2.sql])

 

Criar fila específica para replicação dos lançamentos de saldo ('SDBANCO.QCC_SALDO_EXPORTACAO')  . Na chamada da inclusão na fila (procedure ""lInsereFila""), validar se o tipo de operação é ""pCcConstantes.cntsTipoOperacaoSaldo"", caso seja, deve incluir na fila 'SDBANCO.QCC_SALDO_EXPORTACAO'.

 

Fluxo de exportação Conta - Stand in: [https://drive.google.com/drive/u/0/folders/1eaY3tJGAczsPqEsiNVwA_Cv9vGbvgpwF]

 

 ",2022-03-31T20:23:40.000-0300,Fechado,cc,152,19,38
CC-2819,gr,2022-03-19T16:33:35.347-0300,11608,In Technical Analysis,jira,status,11607,2022-03-19T09:21:28.000-0300,CSD,Alta,Falha,CC,CORRECAO-ERROS,Erro no tratamento da releaseHolds valor decimal menor que zero bloqueado em contas de pagamento ,"Necessário ajustar o tratamento do valor decimal na chamada da releaseHolds nos cenários em que o valor bloqueado no monitoramento é menor que zero.

Pelos testes realizados parece ser alguma configuração no servidor porque o resultado do sum varia de ambiente sendo "".99"" ou "",99"":

select sum(bm.valor)
 into vnTotalBloqueado
 from vcc_bloqueios_monitorados bm
 where bm.id_cc = pinIdCc
 and bm.correlation_id = pisCorrelationId
 and bm.sub_sistema = pisSubSistema;

 

Objeto em anexo enviado ao C6.

Versão 11.7.0-carbon.62.8

 ",2022-03-31T20:22:39.000-0300,Fechado,cc,72,9,18
CC-2937,av,2022-05-16T10:37:35.635-0300,11608,In Technical Analysis,jira,status,11607,2022-04-13T20:04:53.000-0300,CSD,Média,Legislação,CC,LEGISLACAO,Controle de limites de contas pagamento,"h1. *Contexto*

A partir da análise da resolução  RESOLUÇÃO Nº 96, consideramos que as regras de controle de limites envolvendo as contas pagamento precisam ser alteradas para atendimento a nova regra. 

[https://www.bcb.gov.br/estabilidadefinanceira/exibenormativo?tipo=Resolu%C3%A7%C3%A3o%20BCB&numero=96]

 

Art. 4º § 2º:

""É admitida a abertura de conta de pagamento com base em processo de qualificação simplificado, desde que estabelecidos limites adequados e compatíveis de saldo e de aportes de recursos para sua movimentação.""

Segundo a interpretação os limites adequados devem ser definidos pelo banco e a apuração deles deve considerar a conta que está recebendo o aporte ou sendo movimentada.

 
h2. *Categoria PAGAMENTO (PAGTO. LIMITADA e PAGAMENTO COMUM)*
 * Retirar os pontos do sistema onde as verificações consideram o somatórios de valores aportados por CPF/CNPJ. A partir da legislação as verificações devem ser realizadas para cada conta de forma individual.
 * Tratamento sobre limites operacionais:
 ** Lançamentos estornados: não devem ser considerados tanto nos ""limite máximo saldo"" quanto nos ""limite máximo de crédito"". No caso do  ""limite máximo saldo"" o crédito pode ser referente a uma transação que tenha ocorrido numa referência anterior e não faria sentido impedir este estorno. No caso do ""limite máximo de crédito"" por deve ser considerado pois não trata-se de aporte.
 ** Créditos bloqueados: como o valor foi considerado no recebimento do crédito no momento do desbloqueio ele não deve ser considerado nas validações.
 ** Resgate de investimento: como o valor foi considerado no recebimento do crédito no momento do resgate ele não deve ser considerado nas validações. 

 * Alterar no serviço de validação de recebimento de crédito: (POST /v1/accounts/\{branch}/\{account}/entry/validation): considerar o controle de limite operacional na validação da api em vez do tratamento atual pelos limites de conta pagamento.
 * Alterar processo de replicação de cadastro para o Standin
 * Alterar processo de sincronização de dados entre Conta e Standin ( view ivcc_api_standin_sinc_conta)

h2. *Categoria PAGTO. LIMITADA*
 * Alterar no cadastro dos limites passando a ser controlada pelo limite operacional associado a categoria da conta.
 ** É necessário alterar as regras da categoria PAGTO. LIMITADA de forma que ao cadastrar um tipo de conta desta categoria seja aberta a opção da configuração dos limites operacionais (imagem abaixo)
 ** Para o caso de pagamento limitada é necessário informar obrigatoriamente um valor para os limites operacionais.
 ** Remover os campos da configuração atual (Configurações do sistema, imagem abaixo) para a categoria PAGTO. LIMITADA. Gerar delta para setar nos limites operacionais da categoria PAGTO. LIMITADA os valores configurador nos limites de conta de conta pagamento
 ** Avaliar o serviço GET /v1/contas/ \{agencia}/\{conta}/saldo-conta-pagamento-limitada pois deverá considerar a nova origem da configuração dos limites (operacionais) assim como retirada da validação dos aportes por CPF/CNPJ.

!image-2022-04-13-20-15-40-083.png!

!image-2022-04-13-20-14-55-261.png!
h2. *Categoria PAGAMENTO COMUM*
 * Atualmente o controle dos limites é realizado a partir dos limites operacionais , para esta categoria é possível que não sejam informados os valores e neste caso não há validação. A principio o sistema já faz o tratamento da forma correta para esta categoria. 

 
h2. Avaliação sobre a criação do recurso para ligar/desligar validação de conta pagamento ou limite operacional:

Em função dos momentos diferentes de atualização entre o Conta Corrente e o Standin avaliamos a possibilidade da criação de um recurso para controlar a ativação do novo comportamento. Porém conforme tabela o processo de integração Conta x Standin deveria garantir o recebimento do lançamento de forma incondicional caso as configurações estejam diferentes. 
 Considerando que o limite é cadastrado pelo Conta Corrente e replicado para o Standin a diferença esta entre considerar lançamentos de uma única conta ou por CPF/CNPJ.

 
|Tipo do limite|Standin|Conta|Observação|
|Limite conta pagamento|Sim (Standin não atualizado)|Sim (Conta não atualizado)|Validações fixas e iguais. Em desacordo com a legislação porém dados consistentes.|
|Limite conta pagamento|Não (Standin atualizado)|Sim (Conta não atualizado, mais restritivo)| - Sincrono, pode ocorrer erro no Conta em função do valor e somatório por CPF/CNPJ. Em desacordo com a legislação porém dados consistentes.
 - Assincrono, Conta acata incondicional. Testar|
|Limite conta pagamento|Sim (Standin não atualizado, mais restritivo)|Não (Conta atualizado)|Em desacordo com a legislação porém dados consistentes.
 Se acontecer uma TED recebida no Conta pelo TES dentro dos limites do Conta, neste cenário o Standin deveria acatar incodicionalmente.|
|Limite conta pagamento|Não (Standin atualizado)|Não (Conta atualizado)|Ok.|

 

*Ao realizar um crédito ou débito para uma conta de pagamento, devem ser considerados os Limites Operacionais.*

Como <Configuração de tipo de conta / limites operacionais>
 Eu quero <respeitar os limites por tipo de conta>
 Para <atender a legislação>

Dado que <a conta for de pagamento>
 Quando <quando efetuado um débito ou crédito na conta>
 Então <o sistema deve respeitar os limites operacionais configurados>
h1. *Critérios de aceite* 

*Pré-condição:* Realizar configuração

Menu > Contas > Tipo de Conta > Cadastro > Limites Operacionais

1- Cadastrar o limite máximo de saldo

2- Cadastrar o limite máximo de crédito

 

*Cenários de exemplo:*

*+Caso 1:+* saldo disponível inicial zero
 * Tipo de conta, limites operacionais:
 ** Limite máximo saldo: *2000*
 ** Limite máximo crédito: *1000*

Cenário 1.1:
 * Lançamento de Crédito (CR) em Conta de R$1.000,00 em 10/03/2022 => OK
 * Lançamento de Crédito (CR) em Conta de R$2.000,00 em 18/04/2022 => erro de limite máximo de saldo excedido

{color:#172b4d}Cenário 1.2:{color}
 * CR R$1.000,00 em 10/03/2022 => OK
 * CR 1 em 18/03/2022, erro limite max crédito excedido

Cenário 1.3:
 * Lançamento de Crédito em Conta de R$1.000,00 em 10/03/2022 => OK
 * Lançamento de Crédito em Conta de R$1.000,00 em 18/04/2022 => OK

Cenário 1.4:
 * CR 1000 em 10/03/2022, OK
 * Estorno CR 1000 em 11/03/2022, OK
 * CR 1000 em 18/03/2022, OK
 * CR 1000 em 18/04/2022, OK

{color:#172b4d}Cenário 1.5:{color}
 * CR 1000 em 10/03/2022, OK
 * Estorno CR 1000 em 11/03/2022, OK
 * CR 500 em 18/03/2022, OK pois o estorno de crédito dá condições para recebimento de um novo aporte.

{color:#172b4d}Cenário 1.6: {color}
 * {color:#172b4d}CR 1000 em 10/03/2022, OK{color}
 * {color:#172b4d}Estorno CR 1000 em 11/03/2022 gerando um Lançamento de Débito (DB) em Conta de R$1.000,00 => OK{color}
 * {color:#172b4d}CR 1 em 18/03/2022, OK{color}

Cenário 1.7: 
 * CR 1000 em 10/03/2022, OK
 * DB 450 em 11/03/2022, OK
 * DB 400 em 11/03/2022, OK
 * CR 400 em 11/03/2022, Erro limite max crédito excedido

 

{color:#172b4d}Cenário 1.8: {color}
 * {color:#172b4d}CR 1000 em 10/03/2022, OK{color}
 * {color:#172b4d}CR 1000 em 15/04/2022, OK{color}
 * DB  2000 em 16/04/2022, OK
 * Estorno DB 2000 em 16/04/2022 gera um CR 2000. OK pois não é considerado como aporte

 

+*Caso 2:*+ saldo disponível inicial zero
 * Tipo de conta, limites operacionais:
 ** Limite máximo saldo: *nulo*
 ** Limite máximo crédito: *nulo*

Cenário 2.1: Acata qualquer tipo de lançamento contanto que a conta não fique negativa

  
h1. *Solução Técnica*
h1. *Versão*

 

 ",2022-06-17T17:25:39.000-0300,Fechado,cc,192,24,48
TS-457,wj,2022-03-31T15:59:43.620-0300,11608,In Technical Analysis,jira,status,11607,2022-03-31T14:31:43.000-0300,CSD,Alta,Falha,TS,CORRECAO-ERROS,Adicionar fechamento após end; em pTsIntegraCMPBody.sql,"Na última alteração foi removida a / (barra) após o end; conforme imagem anexo.
A remoção foi identificada no diff e impactou a instalação

[https://stash.matera.com/projects/UCC/repos/liquidacao-financeira/diff/backend/src/oracle/packages/pTsIntegraCMPBody.sql?until=a99a2bcb0d59524e2a8911a00dd3cb267a89f3e8]

!image-2022-03-31-14-23-09-585.png!

 ",2022-03-31T20:03:54.000-0300,Fechado,ev,4.069550000031789,1,1
CC-3042,ev,2022-05-11T09:30:02.184-0300,11608,In Technical Analysis,jira,status,11607,2022-05-10T15:16:35.000-0300,CSD,Média,Tarefa,CC,MANUAL,"Script - Massa de dados ""Pagamento Comum"" - Provisionamento Conta Corrente","Atualmente a base provisionada não possui nenhum tipo de conta = ""Pagamento Comum"".
A necessidade surgiu pela equipe de automação:
- Para que eles não necessitem rodar um script toda vez que rodarem os testes e ocorrer erro na constraint, é melhor já termos esse tipo de conta em nossa base provisionada.",2022-05-27T20:37:57.000-0300,Fechado,ev,104,13,26
TS-443,as,2022-06-21T17:48:43.511-0300,11608,In Technical Analysis,jira,status,11607,2022-03-10T10:45:59.000-0300,H6LOC,Média,Tarefa,TS,MELHORIAS,Eliminação Fork C6,Analisar planilha: [https://docs.google.com/spreadsheets/d/1hEUgLrkA5QmSYpqtHd253kpu-sB3e-0rVwaM6YVyhBg/edit#gid=464082276],2022-06-21T17:49:46.000-0300,Fechado,as,0.017358055512110393,1,1
CC-2795,av,2022-04-26T09:22:17.365-0300,11608,In Technical Analysis,jira,status,11607,2022-03-15T08:04:31.000-0300,RNTACOB,Média,Melhoria,CC,MELHORIAS,Servico para apresentar a previsão da tarifa que será cobrada a partir da realização do lançamento,"h1. Contexto

Necessário o desenvolvimento de um serviço que apresente um valor previsto para a tarifa que será cobrada se um determinado lançamento for realizado. Apesar de não ser uma solicitação associada a legislação do PIX avaliamos junto ao cliente a necessidade do serviço e considerando a experiência do usuário esta informação é importante para a definição se o cliente irá ou não realizar o lançamento.

 

 

 

Para atender a solicitação de um novo serviço para apresentação do valor da tarifa a ser cobrada a partir de um determinado lançamento, neste caso PIX para PJ, utilizando como base a procedure atual de calculo de tarifas, sCcCalculaValorTotalLancamento. Entretanto como o lançamento ainda não foi realizado será necessário que as informações sobre o lançamento sejam enviadas na chamada.

Inicialmente os seguintes campos devem ser solicitados:
 * Agencia
 * Conta
 * Histórico de lançamento
 * Valor do lançamento original
 * Data hora de entrada, opcional. Se não informado considerar sysdate. Esta informação é importante para realizar a verificação de isenção por exemplo para saques executados num intervalo menor que 30 min. 

No response apresentar:
 * Valor da tarifa

 

 

 ",2022-05-02T10:55:21.000-0300,Fechado,im,40,5,10
TS-481,td,2022-05-10T14:28:43.777-0300,11608,In Technical Analysis,jira,status,11607,2022-05-03T10:52:28.000-0300,CSD,Média,Falha,TS,CORRECAO-ERROS,"Erro ts-1140 nas mensagens STR0005, STR0006, PAG0142","O tratamento realizado no Jira TS-447 para a retirada da obrigatoriedade das informações de número da agência (posições 181-184) e número da conta (posições 186-198) destinos deve ser replicado para as mensagens STR0005, STR0006 e  PAG0142.

 ",2022-05-27T18:52:16.000-0300,Closed (Pilot),ula,112,14,28
CC-2974,gr,2022-04-27T14:15:47.092-0300,11608,In Technical Analysis,jira,status,11607,2022-04-27T14:03:32.000-0300,CSD,Média,Performance,CC,MELHORIAS,Substituir o consulta a views pelas tabelas no processo de criação do saldo fechado histórico ,"A partir das análises da contabilidade iremos tratar os seguintes pontos:

 
 * Após o tratamento da CC-2149 alterar o código para trocar view por consulta às tabelas e tirar saldo compulsório do cursor.
 * Melhorias pontuais:

*Alteração 1:*
 * 
 ** incluir commits parciais
 *** forall (insert)
 *** depois do delete da tabela
 ** basear busca de saldos nas tabelas de movimento histórico (processo guarda saldo finalizado)
 ** ajuste do cursor para cálculo do saldo compulsório
 POC: consegui gerar 5,4 milhões de linhas após ajuste dos itens acima em 19min42s.
 Antes disso abortei ao chegar próximo de 1h de execução

*Alteração 2:*
 * 
 ** Retirar bc_pessoa do join do cursor (e tabelas que dependem dos campos da bc_pessoa) - resolver como vai gerar dados para o relatório analítico)
 POC: geração feita em 16m15s

*Alteração 3:*
 * 
 ** Trocar chamada da sBcRoundDiaUtil por select na bc_dia_util (mesma inteligencia da sBcRetornaDiaUtil, pois usa como entrada data inicio ou data fim atraso, e esses dias são dias uteis)
 POC: geraçao caiu para 14min

*Alteração 4:*
 * 
 ** Tratar por recurso:
 *** chamada das procedures lRetornaEncargoCongelado (trata encargos de migração)
 *** busca de dados de encargos sem juros
 *** (pensar) busca de dados de divida de cliente
 POC: comentei a chamada do código dos 2 primeiros itens e a geração foi feita em 10m11s (quase 50% de ganho em relação à primeira execução)

 

*Alteração 5:*

Outras sugestões de mudança ainda não testada em POC
 * 
 ** trazer no cursor somente as contas x situação contabil
 ** buscar demais dados (nome, grupo de contabilização) a partir da conta retornada
 A tabela cc_grupo_contab_historico possui, no minimo, a mesma quantidade de linhas da CC_CC

O Objeto [^sCcRelSaldoContabilFechado_poc2.sql] possui estas alterações mas não teve medição de tempo.  Necessario ajustar a funçao local lAddArraySaldoFechado para não sobrepor os valores calculados a partir da busca na bc_pessoa, cc_grupo_contab_historico.

 
  
  
  ",2022-06-17T17:30:48.000-0300,Fechado,ula,296,37,74
CC-2889,as,2022-06-21T17:46:56.165-0300,11608,In Technical Analysis,jira,status,11607,2022-04-04T11:25:38.000-0300,CSD,Média,Dívida Técnica,CC,MELHORIAS,Monitoramento Queue Router,"Caros, bom dia.

 

Quando temos algum problema de conectividade com o banco oracle, a router sai do ar e como não tem nada no log e o jar continua no ar, achamos que ela está funcionando normalmente.

 

Seria possível a criação de um health check como nos jars do mp para a gente saber que a aplicação está no ar e rodando corretamente?

 

Att,",2022-06-21T17:52:09.000-0300,Fechado,as,0.08689861112170749,1,1
CC-2605,as,2022-03-10T10:40:31.955-0300,11608,In Technical Analysis,jira,status,11607,2022-01-19T10:22:52.000-0300,CSD,Média,Tarefa,CC,ADMINISTRATIVA,Eliminação Fork C6,Analisar planilha: https://docs.google.com/spreadsheets/d/1YendCiUVMZUPDQ9NybBecjI78nOZtnYN18IsMMo4EcU/edit#gid=852285505,2022-06-21T17:51:00.000-0300,Fechado,as,568,71,142
CC-2875,td,2022-05-10T09:35:57.217-0300,11608,In Technical Analysis,jira,status,11607,2022-03-30T20:19:42.000-0300,CSD,Média,Falha,CC,CORRECAO-ERROS,Ajustar swagger retornos 401/403,"Necessário avaliar os serviços que no swagger estão apontando um retorno 401/403 como sendo uma lista de erros pois o esperado é que seja retornado apenas um valor.
h1. *Solução Técnica*

*/v2/contas/\{agencia}/\{conta}/lancamentos*
 +Ajustes:+
 Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)

*/v1/contas/\{agencia}/\{conta}/historico-encargos*
 +Ajustes:+
Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)

*/v1/contas/\{agencia}/\{conta}/encargo-futuro*
 +Ajustes:+
Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)

*/v1/contas/\{agencia}/\{conta}/contrato/limites-utilizados*
 +Ajustes:+
Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)

*/v1/contas/\{agencia}/\{conta}/contrato*
 +Ajustes:+
Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)

*/v1/contas/\{agencia}/\{conta}/contrato/\{numContrato}*
 +Ajustes:+
Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)

*/v1/reserva-saldo/\{idReservaSaldo}/relacionamento*
 +Ajustes:+
 Mensagem 401 já estava correta no Swagger e o retorno no postman também já estava correto
 Mensagem 403 já estava correta no Swagger e o retorno no postman também já estava correto

*/v1/contas/limites-utilizados*
 +Ajustes:+
Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)

*/v1/contas/\{agenciaDebito}/\{contaDebito}/transferir-saldo-bloqueado-doc-ted*
 +Ajustes:+
Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)

*/v1/contas/fgc/303/posicoes-analitica-credores*
 +Ajustes:+
 Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 não existe

*/v1/accounts/\{branch}/\{account}/entry/validation*
 +Ajustes:+
Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)

*/v1/accounts/\{branch}/\{account}/releaseAndDebitAccountBalance*
 +Ajustes:+
Mensagem 401 ajustado apenas no Swagger (o retorno no postman já estava correto)
 Mensagem 403 ajustado apenas no Swagger (o retorno no postman já estava correto)",2022-06-17T17:32:47.000-0300,Closed (Pilot),ra,224,28,56
CC-3068,as,2022-05-13T11:20:29.890-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-05-12T14:52:21.000-0300,CSD,Baixa,Falha,CC,CORRECAO-ERROS,Erros no consumo de api rest,"h1. Contexto

Ao executar a api post /v1/reserva-saldo/\{idReservaSaldo}/relacionamento, informando um id de reserva valido, está sendo retornado o erro MTR-003
  
h1. Passos para reprodução

Chamada das apis
h1. Resultado esperado

Status OK
h1. Solução técnica

 /v1/reserva-saldo/\{idReservaSaldo}/relacionamento - Na camada de repository informar o @Param na Query do spring.

 ",2022-05-27T18:54:34.000-0300,Closed (Pilot),cc,88,11,22
CC-2566,av,2022-03-11T12:11:10.222-0300,11608,In Technical Analysis,jira,status,11607,2022-01-10T09:01:47.000-0300,CSD,Média,Melhoria,CC,MELHORIAS,Alterar serviços de lançamento/extrato,"h1. Contexto

Alterar os serviços de lançamento para retornar as informações adicionais.
 * Serviços:
 ** GET /v1/lancamentos
 ** GET /v1/accounts/\{branch}/\{account}/balance/statement",2022-03-31T20:23:32.000-0300,Fechado,dro,120,15,30
CC-2563,av,2022-03-04T15:01:59.907-0300,11608,In Technical Analysis,jira,status,11607,2022-01-06T18:37:03.000-0300,CSD,Média,Legislação,CC,MELHORIAS,Alterar extratos internos,"Contexto

Alterar os extrato gerados pelo Conta Corrente para apresentar as informações adicionais do lançamento.
 * Serviço:
 ** GET /v2/contas/extrato
 * Relatórios:
 ** Lançamentos > Relatórios > Extratos > Interno
 ** Lançamentos > Relatórios > Extratos > Periódico

Se o valor da composição for válido deverá ser apresentado como sendo um subitem do lançamento, seguindo um layout semelhante a apresentação do campo detalhes.

A diferença neste caso é que a descrição do subitem deverá ser obtida a partir de uma configuração para os domínios definidos no serviço de lançamento .

 

O serviço de extrato PDF (GET /v2/contas/extrato) e o relatório Extratos > Periódico possuem um tratamento para realizar a apresentação agrupada a partir do campo exibeLancamentoAgrupado. Nos casos que o lançamento estiver marcado como exibeLancamentoAgrupado = S a informação adicional de composição do valor NÃO será apresentada.

 

  

 ",2022-03-31T20:23:28.000-0300,Fechado,dro,160,20,40
CC-2876,wj,2022-04-04T10:05:34.994-0300,11608,In Technical Analysis,jira,status,11607,2022-03-31T11:00:05.000-0300,CSD,Baixa,Falha,CC,CORRECAO-ERROS,Modificar forma em que o DELETE é executado,"Na pendência https://jira.matera.com/browse/CC-2485 foi realizado uma modificação na forma em que o DELETE na tabela cc_desativacao_cc_historico é executado, com isso, qualquer tipo de histórico é apagado e agora está quebrando alguns testes automáticos.

- Objeto: sCcAlteraSituacaoCc.sql

Solução:
 * Voltar o commit da modificação do DELETE: [b4e7848294d|https://stash.matera.com/projects/UCC/repos/conta-corrente/commits/b4e7848294d86df53ac4e7b386af79140841df90#backend/src/oracle/procedures/sCcAlteraSituacaoCc.sql]
 * Incluir um UPDATE para zerar o campo valor e anular o campo id_lancamento",2022-04-22T15:14:58.000-0300,Fechado,dro,104,13,26
CC-2890,td,2022-05-16T13:14:02.631-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-04-06T08:12:35.000-0300,MOJP,Alta,Falha,CC,CORRECAO-ERROS,[F488040] - Fechamento Complementar / Monitoramento Judicial,"h1. *Contexto*

No momento do fechamento complementar, o Conta Corrente tenta fazer débitos em contas com monitoramento judicial gerando a mensagem ""Conta em processo de monitoramento para bloqueio judicial. Nenhum débito é permitido""

 

O fechamento do complementar de 01/04 não pôde ser concluído pois a conta 101942-9 que está em processo de monitoramento do BacenJud possui um débito de juros referente à um overdraft ocorrido em 30/03, mas por conta do bloqueio judicial, não há mais saldo disponível para que os juros sejam descarregados. O sistema apontou o erro anexo e entendemos que ele está tentando debitar primeiro para depois checar o saldo.

 
h1. *Passo pra reproduzir*
h1. *Resultado atual*
h1. *Resultado esperado*
h1. *Solução Técnica*
h1. *Versão*

 ",2022-05-27T18:53:58.000-0300,Resolved (Pilot),dro,80,10,20
CC-3117,as,2022-05-30T13:18:41.394-0300,11608,In Technical Analysis,jira,status,11607,2022-05-30T13:16:18.000-0300,CSD,Média,Tarefa,CC,CORRECAO-ERROS,Realização dos testes demanda CC-2890,"Serão retomados os testes após verificação de que será necessário analisar os casos de testes:
 - Incluir verificação do relatório - Gerência -> Relatório -> Erros na Abertura e Fechamento do Conta Corrente;

 - Casos onde tem Limite com conta Garantida, e debitou os encargos.
Verificar se está debitando no fechamento de período ou virada de dia.

Refazer a simulação do erro, e verificar a intermitência - se é algum recurso que necessita alteração.

Mas após utilizar bases novas na versão 12.0.0, após a tentativa de reprodução do erro, não foi possível reproduzir novamente. E estoura o seguinte erro abaixo após fechar e abrir o sistema novamente.

!image-2022-05-27-15-22-57-859.png!

Obs.: Com a atual correção, não teve mais o box de erro no fechamento de período.",2022-06-03T14:40:51.000-0300,Fechado,dro,40,5,10
CC-2962,vp,2022-05-23T15:44:32.925-0300,11608,In Technical Analysis,jira,status,11607,2022-04-24T09:14:18.000-0300,NAOCB,Alta,Falha,CC,MELHORIAS,Avaliar melhoria de GET v1/lancamentos,"h1. Contexto

Devido ao timeout na resposta do serviço é necessário avaliar pontos de melhoria de performance sobre a mesma:
 * Avaliar a criação do índice para melhoria de performance na execução do serviço GET v1/lancamentos:
 ** create index SDBANCO.IDX_TESTE_LANC_DTLANC_REFMOV on SDBANCO.CC_LANCAMENTO(""REFERENCIA_MOVIMENTO"",""DATA_LANCAMENTO"");
 * Incluir os campos agencia e conta no request de forma opcional garantindo a retro compatibilidade com a versão atual do serviço. Com isso o cliente poderá chamar o serviço passando  ""conta/ agencia/ refmov/ data""

 

 ",2022-06-17T17:27:29.000-0300,Resolved (Pilot),dro,152,19,38
CC-2874,im,2022-04-19T13:53:25.752-0300,11608,In Technical Analysis,jira,status,11607,2022-03-30T17:09:10.000-0300,MOJP,Alta,Falha,CC,CORRECAO-ERROS,484920 - Contabilização duplicada de lançamentos em D+1,"h1. Data para ficar pronto (planejada): 29/04

h1.*Contexto*

Conforme reportado pelo cliente, após a instalação da pendência 397960, lançamentos de estorno oriundo do sistema de Compensação, estão recebendo o tratamento de integração em D+1 e sendo contabilizados duas vezes.
A primeira contabilização ocorre quando o lançamento é realizado, pois a data do mesmo é modificada para D-1.
A segunda contabilização ocorre quando é realizada a virada para o próximo dia útil.
No anexo, a reprodução do problema que ocorre no cliente.


h1.*Passo pra reproduzir*

Versão 11.9.7, reprodução na versão 11.9.17 Pré condições:
a) select * from sd_escalonamento_proc where nome_sub_sis='SDCONTA2' AND ID_ESCALONAMENTO_PROC=594 FOR UPDATE;
--IND_ATIVO=’S’
b) Executar o script ‘Delta_CNAB_991.sql’ (vide anexo) para habilitar tela para fechar período contábil;
c) Ativar os recursos CTBDE_PER', 'CTB_DME1 ;

2) Cadastrar conta;
3) Executar API sdconta/api/v2/lancamentos para fazer um lançamento futuro d+1;
4) antes de virar o dia, exemplo (data referencia 18/11/14 d+0)
--Notar Lançamento realizado para 19/11 e atualizado para dia 18/11.
select * from cc_lancamento where cc=20575
5) fecha período / dia (data referencia 18/11/14 d+0);
6) abre dia (para data referencia 19/11/14 d+1);
7) Base de dados ao abrir o sistema para data referencia 19/11/14 d+1;

--Notar Lançamento que foi realizado para 19/11 foi atualizado para dia 19/11.
select * from cc_lancamento where cc=20575

--Notar Lançamento contabilizando na abertura do dia 19/19 para o dia 18/11.
select * from cc_rel_contbde_analitico where num_conta=201448

8) fecha período / dia (data referencia 19/11/14 d+1);
9) abre dia (data referencia 20/11/14 d+2);
10) Base de dados ao abrir o sistema para data referencia 20/11/14 d+2;

--Notar Lançamento que foi realizado para 19/11 foi atualizado para dia 19/11.
select * from cc_lancamento where cc=20575

--Notar Lançamento contabilizando 2x na abertura do dia 20/11 (data cadastro 18/11 data referencia quando o lançamento foi feito para d+1 = 19/11) e para abertura do dia 20 (data cadastro 19/11 data do lançamento que foi feito para d+1 = 19/11)
select * from cc_rel_contbde_analitico where num_conta=201448

Vide documento Reprodução CC-2874.odt para melhor auxiliar.

h1.*Resultado atual*

Contabilização duplicada de um mesmo lançamento

h1.*Resultado esperado*

Contabilização de lançamentos realizados para D+1 somente uma vez e na data a qual deve ser liberado 
na conta;

h1.*Solução Técnica*

Sugestão:

 1 -Alterar pCcAD.LancamentosContabeis para contabilizar D-1 se vContabilizaDme1 = 'S' e D-1, caso vContabilizaDme1 = 'N':

 !screenshot-1.png|thumbnail! 

2 - Mudar chamada da sd_escalonamento_proc (FRMAD) para que a pCcAD.LancamentosContabeis seja executada após a proc pCcAD.TrataLancamentosComDataFutura

(importante, verificar com a CS1 e CS2 se esta alteração deve movimentar código específico de exportação de dados contábeis)


h1. *Versão*",2022-06-17T18:44:16.000-0300,Resolved (Pilot),dro,336,42,84
TS-427,as,2022-04-12T14:22:43.270-0300,11608,In Technical Analysis,jira,status,11607,2022-02-04T21:19:15.000-0300,CSD,Média,Tarefa,TS,MELHORIAS,[LGPD] Descaracterização de bases internas,"emos um projeto de LGPD de descaracterização das nossas bases internas em andamento.

Atualmente temos dados (CPF, Nome, Endereço, Telefone, etc.) de pessoas reais (incluindo  alguns ex-colaboradores da Matera) nas bases internas de desenvolvimento e testes (Docker DBTest, Provisionamento, ambientes na AWS, etc). 

Precisamos descaracterizar esses dados para que não seja possível identificar qualquer pessoa nessas bases.

Esse trabalho precisa ser feito para que nossos processos internos estejam adequados à LGPD, além de evitar vazamento de informações pessoais.

Iniciamos esse trabalho com o sistema de Cadastro Central, e o script por eles elaborado já está em nossas bases de provisionamento desde hoje 02/02/2022.

Não aplicamos na base de DBTest para evitar quebra das builds. Então essa é uma tarefa que teremos que fazer sistema a sistema. Para isso, estamos enviando o script do Cadastro Central em anexo, para que sirva de exemplo e também para que seja aplicado na base de vocês quando forem fazer a verificação dos  DBTest, para validar que os testes estejam funcionando com os novos dados.",2022-05-02T10:15:20.000-0300,Fechado,wj,104,13,26
CC-2665,as,2022-04-12T14:22:29.383-0300,11608,In Technical Analysis,jira,status,11607,2022-02-04T21:18:02.000-0300,CSD,Média,Tarefa,CC,MELHORIAS,[LGPD] Descaracterização de bases internas ,"Temos um projeto de LGPD de descaracterização das nossas bases internas em andamento.

Atualmente temos dados (CPF, Nome, Endereço, Telefone, etc.) de pessoas reais (incluindo  alguns ex-colaboradores da Matera) nas bases internas de desenvolvimento e testes (Docker DBTest, Provisionamento, ambientes na AWS, etc). 

Precisamos descaracterizar esses dados para que não seja possível identificar qualquer pessoa nessas bases.

Esse trabalho precisa ser feito para que nossos processos internos estejam adequados à LGPD, além de evitar vazamento de informações pessoais.

Iniciamos esse trabalho com o sistema de Cadastro Central, e o script por eles elaborado já está em nossas bases de provisionamento desde hoje 02/02/2022.

Não aplicamos na base de DBTest para evitar quebra das builds. Então essa é uma tarefa que teremos que fazer sistema a sistema. Para isso, estamos enviando o script do Cadastro Central em anexo, para que sirva de exemplo e também para que seja aplicado na base de vocês quando forem fazer a verificação dos  DBTest, para validar que os testes estejam funcionando com os novos dados.",2022-05-02T10:14:49.000-0300,Fechado,wj,104,13,26
CC-3261,rr,2022-07-20T10:26:45.637-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-07-06T11:34:05.000-0300,H6LOC,Média,Falha,CC,CORRECAO-ERROS,[Super speed 3040] Geração da informação tipo controle para PJ - spring batch,"h1. Contexto

A informação tipo controle na geração de dados do 3040 pelo spring batch não está sendo preenchida para PJ
h1. Passos para reprodução

Evidências em anexo.
h1. Resultado atual

A informação ""Tipo Controle"" esta nula para operações associadas à PJ
h1. Resultado esperado

A informação ""Tipo Controle"" estar preenchida para operações associadas à PJ
h1. Análise Técnica
 * *sCcGeraDadosCadoc3040.sql*
 ** criar novo parâmetro IN pisValAtvEconomica na procedure
 ** remover variável não utilizada _vbValAtvEconomica_ e substituir o seu if por *if pisValAtvEconomica = 'S'*

 * *Cadoc3040JobConfig.java*
 ** passar o novo atributo na chamada da sCcGeraDadosCadoc3040 em _itemWriter.setSql_

 * *Cadoc3040PrepareStatementSetter.java*
 ** setar o novo parâmetro com '_ps.setString_' fazendo um '_map.get_' do campo '*valAtvEconomica*'(definido em Cadoc3040PreparaDadosBusiness)

h1. Versão

12.1.32",2022-07-29T20:16:18.000-0300,Resolved (Pilot),dro,64,8,16
CC-3301,gr,2022-07-20T15:10:46.524-0300,11608,In Technical Analysis,jira,status,11607,2022-07-18T11:45:13.000-0300,H6LOC,Alta,Melhoria,CC,MELHORIAS,[DTW] Inclusão das tags de agencia e conta nas filas de desfazimento de lançamento e monitoramento,"h1. Objetivo

Receber as tags de agencia e conta nas filas de desfazimento de lançamentos e monitoramento (MED) sem erro no processo.
h1. Contexto

Para que o DTW tenha controle das transações e possa funcionar multicloud é necessário que nas filas de desfazimento do lançamento e do monitoramento sejam incluídas as tags de agência e conta.

 

Abrimos um Jira (CSTEC-58) para realização do teste no Conta e quando estas novas tags são informadas temos um erro no processo.

Estas tags não são necessárias ao Conta portanto devem ser ignoradas quando recebidas.

 

+Mensagem de desfazimento de lançamento+
{code:java}
{
  ""reversals"" : [ {
    ""entryId"" : 286113993765729516898520395284834167660,
    ""idempotencyId"" : ""DEBT_ACCOUNT_E13370835202205262059Lkp7ZFgxXwJ-1653598768022"",
    ""subSistema"" : ""MIP"",
    ""reversalType"" : ""REVERSAL"",
    ""branch"" : 1,
    ""accountNumber"" : 23456
  }, {
    ""entryId"" : 108245116914481948234288503110474006427,
    ""idempotencyId"" : ""DEBT_IP_ACCOUNT_E13370835202205262059Lkp7ZFgxXwJ-1653598769259"",
    ""subSistema"" : ""MIP"",
    ""reversalType"" : ""EXCLUSION"",
    ""branch"" : 1,
    ""accountNumber"" : 65485
  }, {
    ""entryId"" : 254056091602112165508182385510892402388,
    ""idempotencyId"" : ""DEBT_CUSTOMER_E13370835202205262059Lkp7ZFgxXwJ-1653598766945"",
    ""subSistema"" : ""MIP"",
    ""branch"" : 1,
    ""accountNumber"" : 54548
  } ]
}
{code}
 

+Mensagem de desfazimento de MED+
{code:java}
monitorings [{
  ""correlationID"" : ""E13370835202011251458"",
  ""postedSystem"" : ""SYS"",
  ""requestSubsystem"" : ""XPTO"",
  ""branch"" : 1,
  ""accountNumber"" : 54548
]} 
{code}
 
h1. Passos para reproduzir

Evidências da reprodução em anexo.

*Como configurar o RabbitMQ para leitura de mensagens*
 Executar container do rabbit pelo docker: 
docker run -d --rm -p 5672:5672 -p 15672:15672 --name rabbit rabbitmq:3.7-management-alpine 
(caso não exista a imagem, ela será baixada nesse mesmo comando)

* No arquivo +sdconta.properties+:
** habilitar propertie *mensageria.enabled*=true
** setar a propertie *mensageria.profile.active*=rabbit
** Descomentar as configurações rabbit

* No arquivo +application-rabbit.properties+:
** habilitar a fila de exclusão de lançamentos MIP: *mensageria.fila.exclusao-lancamento-mip.enabled*=true

Após iniciar a aplicação do conta as filas são criadas automaticamentes no RabbitMQ.
Para acessá-lo: [http://localhost:15672|http://localhost:15672/]
Username: guest
Password: guest

h1. Análise Técnica

Ignorar campos passados no json no qual não são utilizados.
 * *Exclusão lançamentos MIP*
 ** Fila RabbitMQ/AWS: _matera-checking-account-queue-exclusao-lancamento-mip_
 ** Listener: _ExclusaoLancamentoMipListener.java_

 * *Desfazimento MED*
 ** Fila RabbitMQ/AWS: _matera-checking-account-queue-undo-monitoring_
 ** Listener: _UndoMonitoringListener.java_

Como utilizamos o _objectMapper_ podemos configurar o *FAIL_ON_UNKNOWN_PROPERTIES = false* para ignorar campos que não precisamos no json. Exemplo:
{code:java}
objectMapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
{code}",2022-08-26T19:58:27.000-0300,Fechado,ap,224,28,56
CC-3338,al,2022-08-05T11:14:03.841-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-08-03T09:40:26.000-0300,MOJP,Média,Falha,CC,CORRECAO-ERROS,[497762] - Erro 'Identifier LATUALIZAFILAREPLICACAOCADASTR too long' ao tentar compilar a procedure sCcValidaDepoisInsAtuCc,"Foi analisado em conjunto com nossa equipe de Infra, que nas versões do Oracle abaixo, existe uma limitação de 30 caracteres no nome do Objeto.

 

Dentro do objeto  '*sCcValidaDepoisInsAtuCc*', tem a chamada da procedure '*LATUALIZAFILAREPLICACAOCADASTRO*', e o total de caracteres é 31.

 

Segue versões do Oracle que o cliente se encontra.
ORACLE.: Oracle Database 12c Enterprise Edition Release 12.1.0.2.0 - 64bit Production
ORACLE.: PL/SQL Release 12.1.0.2.0 - Production
 
Seria necessário reduzir o tamanho da nomeação dessa procedure e como medida preventiva, analisar se tem outras procedures nesse cenário.
 
Pela análise que realizei, foi inserida essa procedure nesse objeto, através do Card CC-2971",2022-08-12T20:47:13.000-0300,Resolved (Pilot),al,48,6,12
CC-3515,al,2022-09-22T15:27:15.608-0300,11608,In Technical Analysis,jira,status,11607,2022-09-22T15:17:10.000-0300,CSD,Baixa,Dívida Técnica,CC,CORRECAO-ERROS,Ajuste swagger serviço v3/contas/{agencia}/{conta}/bloqueioSaldo,"Ajustar a definição do serviço v3/contas/\{agencia}/\{conta}/bloqueioSaldo no swagger.

Onde o retorno está:
{
 ""motivoBloqueio"": 0,
 ""valor"": 0,
 ""subSistema"": ""string"",
 ""numeroProcesso"": ""string"",
 ""indBloqueioMonitorado"": ""string"",
 ""idSistemaExterno"": ""string"",
 ""detalhes"": ""string"",
 ""referenciaMovimento"": ""string"",
 ""dataLancamento"": ""2022-09-22""
}

 

Deveria ser:

{

{color:#de350b}""data"":{{color}
 ""motivoBloqueio"": 0,
 ""valor"": 0,
 ""subSistema"": ""string"",
 ""numeroProcesso"": ""string"",
 ""indBloqueioMonitorado"": ""string"",
 ""idSistemaExterno"": ""string"",
 ""detalhes"": ""string"",
 ""referenciaMovimento"": ""string"",
 ""dataLancamento"": ""2022-09-22""
}

}

 

Conforme exemplo:

{code:java}
{
    ""data"": {
        ""dataBloqueio"": ""2015-08-24"",
        ""idLancamento"": ""220215"",
        ""idBloqueio"": 42
    }
}
 {code}",2022-09-29T19:13:13.000-0300,Fechado,al,48,6,12
CC-3024,gr,2022-05-27T10:03:04.688-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-05-06T09:36:36.000-0300,CSD,Média,Falha,CC,CORRECAO-ERROS,[MED/JUD] Exclusão de lançamentos - Por tela / Assincrono,"h1. Data para ficar pronto (planejada): 30/06

 

Ao realizar a exclusão de um lançamento ou transferência por tela do sistema Conta Corrente, caso exista algum monitoramento ativo JUD/MED, o novo valor disponível deverá ser utilizado para realização do bloqueio de saldo associado ao monitoramento e seguindo as regras atuais de priorização e valores .

Serviços de exclusão:
 * Lançamento - Lançamento 
 * Lançamento - Transferência 

 

Avaliar também o processo de exclusão de lançamentos assincrono pois não está realizando o bloqueio dos valores para o monitoramento ativo.
h1. Resultado atual

Quando excluímos um lançamento ou transferência, o saldo não é capturado pelo monitoramento. Isso só ocorre após realizar um lançamento qualquer.
h1. Resultado esperado

Ao realizar a exclusão de um lançamento ou a exclusão de uma transferência, caso a conta possua algum monitoramento ativo, deve se validar e bloquear o saldo disponível na conta.
h1. Análise Técnica

*Fluxos de Exclusão do PL/SQL:*
 Transferência => sCcRemoveTransferencia > sCcRemoveTransferenciaBatch > sCcRemoveLancamentoBatch
 Lançamento   => sCcRemoveLancamento > sCcRemoveLancamentoBatch

*Ajuste para exclusões feitas através das telas:*

Criar novas constantes em pCcConstantes.sql:
 _cntsTelaLancamento_ => *frmLANCAMENTO*
 _cntsTelaTransferencia_ => *frmTRANSF*

Na tela de transferência (_cdtrans.gsx_) repassar na chamada da _sCcRemoveTransferencia_ o parametro pQuemChamou, repassando o nome dela *frmTRANSF* (o mesmo da constante _pCcConstantes.cntsTelaTransferencia_).

No objeto _sCcRemoveLancamentoBatch_ incluir validação para quando for chamada pelas telas de lançamento/transferência:
{code:sql}
if pQuemChamou in (pCcConstantes.cntsTelaLancamento, pCcConstantes.cntsTelaTransferencia) then
 --
 pCcMonitoramentoJudicial.BloqueiaSaldoJudRemanescente( pinIdCC => idCc);
 pCcMonitoramento.BloqueiaSaldoRemanescente( pinIdCc => idCc);
 --
end if;
{code}
 

*FLUXOS ASSÍNCRONOS:*
 *1. Exclusão Lançamento Condicional* _(RemoveLancamentoBusiness.java)_ => mover a chamada da monitoramento.verificaMonitoramentos, linha 136, para o método removeLancamento, linha 207, dentro do if (saida.isSucesso())

*2. Exclusão Lançamento Incondicional* _(ExclusaoDeLancamentoAssincronoBusiness.java)_ => fazer import da classe MonitoramentoDesbloqueioCcBusiness.java e no método excluiLancamentoIncondicional, linha 289, incluir a chamada da verificaMonitoramentos dessa mesma classe (semelhante ao que é feito no passo acima)

*3. Exclusão Transferência Condicional* (_TransferenciaBusiness.java)_=> aparentemente está tratado, precisa testar.

*4. Exclusão Transferência Incondicional* => Com o ajuste do passo 2 a exclusão de transferência assíncrona incondicional também já deve ser corrigida, precisa testar.

 

*Edit 1:*  Criar um recurso que ligue/desligue esse comportamento nesses fluxos, ou seja, caso o recurso esteja desligado mantém o comportamento atual de não considerar o lançamento excluído nos monitoramentos.

cc_recurso.cod_recurso = MON_EXCLAN

cc_recurso.descricao = Liga/Desliga recurso para considerar o valor do lançamento excluído nos monitoramentos MED/JUD

cc_recurso.ind_ativo = N

cc_recurso.ind_exibe = S

===================================

Informações relevantes para teste de desenvolvimento:

Para testar os fluxos assíncronos basta inserir o json respectivo de cada lançamento na fila oracle através do objeto sCcInsereMensagemFila.

Fila de exclusão de lançamento: SDBANCO.QCC_EXC_ASSINCRONO

exemplo de mensagem json: 
{code:java}
{
    ""validaSaldo"" : false,
    ""lancamentos"" : [ {
      ""idLancamento"" : 218538,
      ""idSistemaExterno"" : ""3A2B4FAD34EC4B828EBDC2DFE771A742"",
      ""sistemaExterno"" : ""SITEMA_EXTERNO"",
      ""acateIncondicional"" : true
    } ]
  }{code}
Fila de exclusão de transferência: SDBANCO.QCC_TRANSF_ASSINCRONO
 exemplo de json:
{code:json}
{
  ""exclusao"": {
    ""idTransferencia"":218763,
    ""acateIncondicional"":true,
    ""validaSaldo"":false,
    ""idExclusaoSistemaExternoDebito"":989975596,
    ""idExclusaoSistemaExternoCredito"":9899975596
    },
    ""sistemaExterno"":""SDCONTA2"",
    ""tipo"":""EXCLUSAO_TRANSFERENCIA""
    
}{code}
 

Para testar o assíncrono incondicional, executar os updates abaixo e postar as mensagens na fila novamente:

update cc_recurso r set r.ind_ativo = 'S' where r.cod_recurso = 'VALPRMHIST';
 update cc_rel_nivel_historico nh set nh.nivel_operacao = 'NO' where nh.historico = 3359;

 

 ",2022-07-15T19:23:34.000-0300,Closed (Pilot),cc,280,35,70
CC-3242,sca,2022-07-27T14:52:21.924-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-06-29T14:50:40.000-0300,CSD,Média,Falha,CC,CORRECAO-ERROS,[PIX_TROCO] Apresentação no extrato interno,"A apresentação do extrato interno (Lançamentos > Relatórios > Extratos > Interno)  está considerando que a ordem de envio das tags dentro da informação adicional:
{code:sql}
  {
              ""codigo"": ""PIX_PURCHASE"",
              ""valor"": 739.39
            },
            {
              ""codigo"": ""PIX_CHANGE"",
              ""valor"": 50
            } 
{code}

Porém não há garantias de que será enviado neste ordem e no caso dela não ser mantida a apresentação do extrato está incorreta. 
Além disso, a informação adicional também permitira a repetição das tags sendo a única restrição com relação a apresentação é de que a composição esteja válida. Apesar deste ultimo cenário não ser o utilizado no contexto do PIX Troco como a tag está aberta não temos como garantir que não ocorra. 

Para tratar estas questões é necessário verificar no json armazenado na tabela cc_lanc_informacoes_adicionais quais tags informadas e obter a descrição em cc_termos para montagem do extrato, sem tratamento fixo.

h3. Análise
----
* Quem pega a informação da cc_lanc_informacoes_adicionais é a pCcExtratoConsolidado.lRetornaPixTroco
* Quando vai pegar o campo composicaoValor.itens, que é um array, ele está considerando que a posição 1 vai ser a do pix purchase, e a posição 2 vai ser a do pix change, mas essa ordem pode vir invertida
* Deve ser implementada uma lógica que garanta que os códigos e valores de cada item sejam preenchidos corretamente.
* Pelo que eu vi, a function foi criada na 11.15.0, então a correção precisa sair da 11.15.X adiante
",2022-08-12T20:47:02.000-0300,Closed (Pilot),al,104,13,26
CC-3331,al,2022-08-10T10:38:52.536-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-07-27T16:56:18.000-0300,H6LOC,Alta,Falha,CC,CORRECAO-ERROS,Demora no processamento do arquivo 5301,"Boa tarde, estamos com um P2 relacionado a integração CC/JUD no C6 e precisamos de um auxilio, o problema foi relatado desde segunda feira, nos logs do conta não forma encontradas ligações com o ocorrido:

 

analise a baixo realizada por Anderson Wilt do JUD:

Com base na análise dos logs até o momento dos dias 25/07 e 26/07 foi identificado que existe uma demora para o Conta retornar ao JUD uma resposta quando é solicitado o monitoramento de uma conta. Foi identificado que quando o sistema está para realizar o monitoramento, o JUD faz a solicitação e Conta retorna após 13 segundos mais ou menos um http 500 e isso tem causado demora excessiva no processamento das ordens:

!https://attachment.freshdesk.com/inline/attachment?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MzUxNzA5MDY2MzgsImRvbWFpbiI6Im1hdGVyYS5mcmVzaGRlc2suY29tIiwiYWNjb3VudF9pZCI6Nzc3NzQ5fQ.rIeaYRc-oGvTs7Tj22BMIjEwIbeMqMNAABZ8Tl49PrY!
Após desligar o monitoramento no JUD (Configurações -> Sistema -> sistema.usaMonitoramento de ""S"" para ""N""), foi identificado que as ordens estão sendo processadas em tempo quase que normal. 
Estou analisando o código para identificar a requisição feita pelo JUD para o conta e o que é retornado pelo conta para identificar se é a resposta esperada para o processo.
 
Outro erro que vem acontecendo também é retornado pelo Conta, quando o JUD solicita um encerramento de um monitoramento é retornado um [{\""code\"":\""CC-1282\"",\""message\"":\""Monitoramento não existe ou já foi encerrado anteriormente. Isso pode ocorrer porque é consultado uma view (cc_monitoramento_jud  se não me engano) e caso o ofício não esteja lá, é retornado essa mensagem, ou então caso esteja sendo passado um parâmetro errado na requisição, pode ocorrer esse problema.
!https://attachment.freshdesk.com/inline/attachment?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MzUxNzA5MDcwMTAsImRvbWFpbiI6Im1hdGVyYS5mcmVzaGRlc2suY29tIiwiYWNjb3VudF9pZCI6Nzc3NzQ5fQ.H_m2lzdp1LCsxB4zhPgurPOtkWFPmQw1T44lRwb1U_Y!
*Um ponto que vale ressaltar é que foi atualizado o Conta Corrente no final de semana agora e antes não ocorria esse problema (pelo menos não foi relatado pelo cliente)*",2022-08-12T20:46:52.000-0300,Resolved (Pilot),gr,24,3,6
CC-3209,ra,2022-08-02T16:25:40.342-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-06-17T11:45:50.000-0300,H6LOC,Baixa,Falha,CC,CORRECAO-ERROS,492217 - Portabilidades de salário não atualizadas na Matera,"h1. *Contexto*

O sistema do Conta Corrente recebe o arquivo APCS104 enviado pela CIP, mas como ainda não leu o APCS101 PRO e RET não atualiza as informações da portabilidade (historico do 104) e não vincula ao mesmo pois o numero da portabilidade retorna no APCS101_RET.
 Com isso quando o sistema recebe o APCS109 com as informações atualizadas, muda o status mas não preenche os campos de motivo da recusa e data.

Usei de exemplo a portabilidade 202206020000231862829

!https://attachment.freshdesk.com/inline/attachment?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MzUxNjY3MzMxMTMsImRvbWFpbiI6Im1hdGVyYS5mcmVzaGRlc2suY29tIiwiYWNjb3VudF9pZCI6Nzc3NzQ5fQ.U7CbP4iwh1TE4DwBKLKyDdVm7yJz7Mv6qiRs767lMAg!

*Análise refinamento:*
 1) No exposto acima quando o sistema está em processamento do arquivo APCS101 RET e nesse meio tempo entra APCS104 e é processado, então o APCS104 fica sem vinculo a respectiva portabilidade (histórico de arquivos na grid [Arquivos Enviados/Recebidos]), pois, o APCS104 espera o número da portabilidade que está dentro APCS101 RET, ou seja, se o APCS101 RET não foi processado e entra o APCS104 na frente, então o APCS104 fica no limbo sem o vínculo esperado. Observação: para essa situação será necessário alinhar expectativas com os respectivos stakeholders para um provável estudo de melhoria no sistema e sua viabilidade técnica, pois, tal situação ocorre em cima de uma automação criada pelo C6 que altera o fluxo do requisito inicial.

2) Verificar que quando nos arquivos APCS é passado valores nas TAGS: 
 a) <MotvReprvcPortddCtSalr> Motivo Reprovação Portabilidade Conta Salário, arquivos: <APCS103>, <APCS103RET>, <APCS104> e <APCS109>; 
 b) <MotvCanceltPortddCtSalr> Motivo Cancelamento Portabilidade de Conta Salário, arquivos: <APCS105>, <APCS105RET>, <APCS106> e <APCS109>;
 c) <SitPortddPCS> Situação da Portabilidade PCS, arquivo <APCS109>. *Observação*: _+nos arquivos anteriores ao 109 se não for informada alguma das TAGs de cancelamento ou reprovação o sistema entenderá que a portabilidade será aprovada, então o 109 é o arquivo em último estágio pra validar a situação atual da portabilidade.+_

O sistema deve refletir a composição dessas informações nas telas:
 a) [Portabilidade Enviadas/Recebidas (frmCDPORTABILIDADEMANAGER)] abas [Banco Folha (solicitacoes recebidas)] e [Banco Destino (solicitacoes enviadas)] na grid refletir a situação atualizada no campo <Situacao> (relação entre cc_situacao_portabilidade com cc_situacao_portabilidade_cip) ;
 b) Quando acionar o botão <Detalhe> da tela mencionada acima, abrirá [Cadastro de Solicitação de Portabilidade (frmCDPORTABILIDADE)] que deve refletir a situação atual, e ser for diferente de 'Aprovada', exemplos:
 Se a situação = *Reprovada* o sistema deve imprimir no campo <Motivo Cancelamento> o motivo da *reprovação* (cc_motivo_reprov_portabilidade) ;
 Se a situação = *Cancelada* o sistema deve imprimir no campo <Motivo Cancelamento> o motivo do *cancelamento* (cc_motivo_cancel_portabilidade);
h1. *Passo pra reproduzir*

Pré condição:
 Configurar no arquivo sdconta.properties: 
 ativarMonitoramentoArquivosCIP=true
 grade.inicio=07:00 --se gerar uma portabilidade, o sistema gerará o arquivo na pasta CIP nesse horário (tem que reiniciar tomcat pra valer a hora)
 grade.fim=14:27
 grade.qtdMinutosAntesDoFimDaGrade=1

Passos:
 1) Criar uma portabilidade banco destino
 2) O arquivo 101 será gerado
 3) Manipular o arquivo 101 PRO e 101 RET e enviar para CIP
 4) Manipular o arquivo 109, gerar dois arquivos 
 a) passar situação = reprovado e motivo de reprovado e verificar e enviar pra CIP, verificar que na tela de envio e recebidos não vai refletir a informação do motivo
 b) passar situação = cancelado e motivo de cancelado e verificar e enviar pra CIP, verificar que na tela de envio e recebidos não vai refletir a informação do motivo

 

Documento confluence para auxilio: https://confluence.matera.com/pages/viewpage.action?pageId=9863868
h1. *Resultado atual*

Quando no arquivo 109 vem a tag de <MotvReprvcPortddCtSalr> ou <MotvCanceltPortddCtSalr> o sistema não está registrando a informação na tabela [cc_solicitacao_portabilidade] campo <CODIGO_CANCELAMENTO> e consequentemente essa informação não é impressa na tela [Cadastro de Solicitação de Portabilidade (frmCDPORTABILIDADE)] campo <Motivo Cancelamento>
h1. *Resultado esperado*

Quando a CIP retornar informação de cancelamento ou reprovação em algum arquivo CIP o sistema deve refletir tal informação nas respectivas telas de portabilidade.
h1. *Solução Técnica*
h1. *Versão*

11.8.4",2022-08-12T20:46:37.000-0300,Resolved (Pilot),is,72,9,18
CC-3392,gr,2022-08-18T09:48:58.333-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-08-17T18:51:01.000-0300,MOJP,Alta,Falha,CC,CORRECAO-ERROS,Controle de execução dos processos assincronos,"h1. Contexto

Corrigir o controle de execução dos processos assíncronos que a partir da reestruturação (CC-2149/CC-3063) deveria ter o seguinte funcionamento:
 * Se o processo a interface 'GUARDA_SALDO_CONTAS_ASSINCRONO' estiver ativa na tabela  MTR_PROCESSAMENTO_AGENDADO disparar somente os processos 'GUARDA_SALDO_CONTAS_ASSINCRONO', 'CALCULO_SALDOS_MEDIOS_ASSINC', 'GERACAO_LANCAMENTOS_CONTABEIS', 'GERA_RATING' que estiverem ativos na tabela CC_CONFIG_PROCESSO_ASSINCRONO.

Link do confluence: [Contabilidade gerada em duplicidade|https://confluence.matera.com/display/SDCC/%5BCSTEC-346%5D+Contabilidade+gerada+em+duplicidade]
h1. Passos para reprodução do erro

*Pré-requisitos*
 * Ativar fluxo parcial/complementar (JPMorgan) - abertura faz parcial D-1 e fechamento de período faz complementar D-1.
 ** Recursos na bc_recurso (CTBDE_PER= S, CTB_DME1= S)
 * Liberar janelas de fechamento de período no conta corrente através do script [^fechamento_periodo.txt]
 * Ativar procedure LancamentosContabeis na sd_escalonamento_proc da abertura de dia (FRMAD) e fechamento de período (FRMFP).
 * Ativar procedure pMtrProcessamentoAgendado.AgendaProcesso na abertura de dia (FRMAD).
 * Na tabela mtr_processamento_agendado deixar a interface GUARDA_SALDO_CONTAS_ASSINCRONO com ind_ativo = 'S'.

*Fluxo*
 * Cadastrar uma conta corrente (Contas > Conta Corrente > Cadastro > Novo).
 * Realizar um lançamento de Crédito(998) para a conta (Lançamentos > Lançamento > Novo).
 * Cadastrar contas contábeis para o lançamento de Crédito(998) caso não exista (Contabilidade > Roteiros Contábeis > Filtrar pelo ID 998 > Botão Lançamentos).
 * Fechar período (Gerência > Janelas Customizadas > Fechamento de período)
 * Realizar virada de dia (Fechamento Sistema e Abre Sistema)
 * Fechar período novamente.
 * Virar dia novamente.
 * Consultar tabela cc_rel_contbde_analitico, os dados estarão duplicados na tabela para esse lançamento no mesmo dia.

h1. Resultado Atual

Processo da contabilidade sendo executada duas vezes e causando a duplicação de registros na tabela para o mesmo dia.
h1. Resultado Esperado

Executar a contabilidade somente uma vez de acordo com as configurações citadas:
 Se o processo a interface 'GUARDA_SALDO_CONTAS_ASSINCRONO' estiver ativa na tabela  MTR_PROCESSAMENTO_AGENDADO disparar somente os processos que estiverem ativos na tabela CC_CONFIG_PROCESSO_ASSINCRONO:
 - 'CALCULO_SALDOS_MEDIOS_ASSINC',
 - 'GERACAO_LANCAMENTOS_CONTABEIS',
 - 'GERA_RATING'

h1. Análise Técnica
 Alterar objeto pCcCtrlProcessoAssincrono.ExecutaProcessoAssincrono na consulta à tabela cc_config_processo_assincrono incluir no where a condição and ind_ativo = 'S';

Objeto com a alteração em anexo enviado ao JP.

h1. Versão
12.0.x
 

 

 ",2022-08-26T19:38:10.000-0300,Resolved (Pilot),is,56,7,14
CC-3351,gr,2022-08-11T13:49:28.754-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-08-04T12:37:05.000-0300,NAACOB,Média,Falha,CC,CORRECAO-ERROS,497399 - relatório com erro no n° de caracteres no Conta Corrente,"h1. *Contexto*

Localizamos mais um relatório com erro no n° de caracteres no Conta Corrente:++++
 Contabilidade > Relatórios > Razão Auxiliar Lançamentos.
h1. *Passos pra reproduzir*

*Pré-requisitos:* 
 a) Ter uma conta cadastrada com mais de 8 dígitos.
 b) Alterar na tabela *cc_configuracao* os campos *tamanho_maximo_cc* e *TAMANHO_MAXIMO_NUM_CC_SISTEMA*, ambos para 10 dígitos
 !screenshot-3.png|thumbnail!

!screenshot-5.png|thumbnail!

c) Configurar o sistema em Menu > Gerência > Configuração
 d) O campo ""Tamanho máximo do número da conta"" terá sido alterado para10 dígitos
 e) Alterar o campo *Num_Conta_Automatica* para *""Só dígito""*:
 !screenshot-4.png|thumbnail!

!screenshot-1.png|thumbnail!

*Razão Auxiliar Lançamentos:*

1- Acessar o Menu > Contabilidade > Relatórios > Razão Auxiliar Lançamentos
 2- Preencher os campos: Agência e Mês/Ano
 3- Clicar no botão ""Visualizar""
h1. *Resultado atual*

Reprodução realizada na versão: *12.0.0*

""#####-#"" campo Num Conta – ERRO
 !screenshot-7.png|thumbnail!
h1. *Resultado esperado*

Dado que exista uma conta com mais de 8 dígitos

Quando executada a consulta ao relatório

Então o número da conta deve ser exibido por inteiro
h1. *Solução Técnica*

Ajustar view *vcc_rep_razao* e trocar o tratamento feito no campo NUM_CONTA para a função _pCcContaCorrente.RetornaNumCcFormatado(cc.num_conta)_
h1. *Versão*

*12.0.x*",2022-08-26T19:38:42.000-0300,Resolved (Pilot),is,96,12,24
CC-2682,vp,2022-07-28T09:07:16.543-0300,11608,In Technical Analysis,jira,status,11607,2022-02-07T11:36:11.000-0300,H6LOC,Média,Performance,CC,CORRECAO-ERROS,[CADOC 3040] Lentidão Integração Conta Corrente,"Qualquer duvida procurar o Giovanni Rodrigues de Oliveira - DBA Matera

 

Solicito a análise e ajuste do processo ""CADOC 3040 - Integração Conta Corrente"", para melhoria de performance. Segue ponto de atenção identificada pelo nosso time:

 
f29ncdbdrcqdr
SELECT MODALIDADE, IND_VENCIDO, SALDO_DEVEDOR, UF, GRUPO_ECONOMICO, COD_ESTATISTICA_FINANCEIRA, TIPO_PESSOA,
 CASE WHEN TIPO_PESSOA = 'J'
 THEN TO_NUMBER(SUBSTR( LPAD(INSCRICAO, 14, '0'), 1, 8 ))
 ELSE INSCRICAO END RAIZCPFCNPJ, INSCRICAO, ID_PESSOA, NOME, CEP, ID_CC, DIFERENCA, DATA_VENC_CONTRATO, DATA_CADASTRO,
 NUM_CONTRATO_CREDITO, TAXA_INDEXADOR, AGENCIA, ID_AGENCIA, NOME_AGENCIA, NUM_CONTA,
 COD_CEN_RIS_PORTE_CLIENTE, IND_DIVULGA_INFO_CENTRAL_RISCO, NCRSEMATR, TAXA_JUROS, TIPO_CALCULO,
 FATURAMENTO_ANUAL,
 VALOR_CONTRATADO, SALDO_NEGATIVO, DIAS_ATRASO, PORCENTAGEM_INDEX, DATA_INICIO_RELACIONAMENTO, DATA_INICIO,
 METODO_COBRANCA, COD_CLASSIF_RISCO, SITUACAO_CONTABIL, DATA_INI_SITUACAO_CONTABIL
FROM VCC_CENRIS_TAB3040 CENRIS
WHERE DATA_BASE = :B1",2022-09-19T13:05:36.000-0300,Fechado,is,296,37,74
CC-3435,lj,2022-08-31T11:18:31.161-0300,11608,In Technical Analysis,jira,status,11607,2022-08-26T16:07:09.000-0300,CSD,Baixa,Dívida Técnica,CC,CORRECAO-ERROS,"MTR-003 é retornado ao informar ""null"" no campo accountBalanceHoldId","Quando foram executados os testes automáticos de API da versão 13.4.0 do Conta Corrente, o campo accountBalanceHoldId da API v1/accounts/branch/account/releaseAndDebitAccountBalance retornava a mensagem de erro ""NotNull - Campo accountBalanceHoldId: não pode ser nulo"" e status code 400, ao informar ""null"" nele.

Ao executar novamente os testes na versão 13.5.0 passando as mesmas informações, começou a ser apresentado o erro ""MTR-003 - Erro interno no processamento da requisição"" e status code 500.

Comportamento anterior:

!image-2022-08-26-16-04-03-661.png!

 

Comportamento atual:

!image-2022-08-26-16-04-17-296.png!

 
h1. *Analise Técnica*

 

Inclusão de um annotation na classe DebitAccountBalanceReleaseRequestNewDTO no metodo 
 getAccountBalanceHoldId para não permitir valores nulos.
 ex: @NotNull
  
 inclusão de um annotation nos metodos getExtSystemAccountBalanceReleaseEntryId, getExtSystemDebitEntryId para não permitir valores diferentes de numeros
 ex: @Pattern(regexp=""^[0-9]

{1,50}

$"") @Size(min=1,max=50) 
  
 inclusão de um annotation nos metodos getMovementReference, getDebitComplement
 Ex: @Pattern(regexp=""(\\s)*?(
S)[(\\s)(\\S)]*"") @Size(min=1,max=128)
  
 inclusão de um annotation no metodo getDebitAmount
 ex: @NotNull
 @Valid
 @DecimalMin(""0.01"") @DecimalMax(""9999999999999.99"")
  
 inclusão de um annotation no metodo getDebitHistoryCode
 ex: @NotNull
 @Min(1) @Max(9999)
  
  

Inclusão das alterações dos 2 arquivos de teste anexados ao chamado em seus respectivos testes.
BloqueiosDesbloqueiosDeSaldoApiControllerTest e DesbloqueioSaldoControllerTest",2022-09-26T15:21:48.000-0300,Fechado,is,144,18,36
CC-3463,ofe,2022-09-13T20:04:31.623-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-09-05T10:36:54.000-0300,H6LOC,Média,Falha,CC,CORRECAO-ERROS,[500921] - Não executa processo de integração de lançamentos de Encargos e IOF de forma Assíncrona.,"O processo criado no Card CC-2401, não está executando de forma Assíncrona, devido a uma query na abertura do Cursor da *pCcTrataReplicacaoLancamento.ReplicacaoLancamentoAssincrono,* onde em um volume de 400.000 lançamentos para replicar, já havia se passado mais de 14 horas e não executou.

No objeto paliativo, alterei o select do Cursor e do Count feito nessa PKG.

 

Sugestão: Fixar o Cursor e o Count na tabela *cc_replicacao_lanc_virada,* pois mesmo que já tenha sido enviado a informação dessa tabela, enviar novamente não é um problema e é bom para limpar essa tabela, pois o cliente pode realizar o Sincronismo e caso realize, não irá limpar os dados dessa tabela.

====================

Sugestão de desenvolvimento:

Implementar a alteraçaõ do cursor feita pelo Gabriel, substituindo a data hard coded por D-1

 

vdtDataDme1 := sBcRetornaDiaUtil( sCcGetDataRefSis, -1 );

cursor cReplicaLancamento is
    select b.id_lancamento, b.tipo_operacao
    from cc_replicacao_lancamento a, cc_replicacao_lanc_virada b, cc_lancamento c
  where a.id_lancamento = c.id_lancamento
     and b.id_lancamento = c.id_lancamento
  and a.id_lancamento = b.id_lancamento
   and c.data_lancamento = vdtDataDme1;

 ",2022-09-29T19:12:30.000-0300,Resolved (Pilot),is,104,13,26
CC-2824,as,2022-06-06T10:15:59.321-0300,11608,In Technical Analysis,jira,status,11607,2022-03-22T10:28:04.000-0300,H6LOC,Média,Falha,CC,MELHORIAS,[Performance] CobraIOFPendente - Mudança de lógica de cursor para ganho de performance,"Bom dia!

 

Favor realizar a melhoria na procedure pCcAD.CobraIOFPendente(). Trata-se de uma melhoria na consulta de um dos cursores da procedure. Ao invés de fazer um union all de dois blocos das mesmas tabelas, alterei para um case onde a condição é satisfeita numa única consulta. Favor validar. Em anexo cursor original e reescrito.

 

*Ponto de atenção:* A alteração deve manter a funcionalidade detalhada no Card CC-263

[https://docs.google.com/document/d/1mqc7GpUwzR6BCnLKkjP7rhoo6jtrOfNNFaxG-_tqQa4/edit#]

 

Analise técnica:
 * Objeto anexado na versão 12.2.20
 ** ajuste no cursor de cobrança
 ** inclusão tratamento de busca de valor a cobrar para PJ e ind_optante_simples = S
 ** ajuste insert detalhamento IOF (valor da alíquota) quando existe pro-rata

 
 * Incluir alter table cc_detalhamento_iof, coluna: VALOR_IOF_DIA,  VALOR_IOF_ADICIONAL_DIA, VALOR_IOF_ACUMULADO e  VALOR_IOF_ADIC_ACUMULADO para number (19,6) - para mitigar problema reportado no card CC-3089 (diferença entre relatório e valor cobrado)

 ",2022-07-01T10:54:57.000-0300,Resolved (Pilot),ula,152,19,38
TS-508,as,2022-06-21T15:07:33.440-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-06-09T09:25:35.000-0300,H6LOC,Baixa,Falha,TS,CORRECAO-ERROS,Erro SD-115 ao realizar pagamento/transferência no convênios ,"h1. *Contexto*

Ao realizar uma transferência no Convênios é apresentado o erro: SD-115: Erro inesperado no processamento do objeto sTsGeraIntegracaoCc: PL/SQL: numeric or value error: number precision too large.
  
h1. *Passo pra reproduzir*

Tentar realizar um pagamento/transferência no convênios.
 Na tabela cc_lancamento existe o campo id_lancamento que continha um id com 11 caracteres e nas tabelas ts_integra_cc e ts_integra_cc_hist estavam configuradas para receber uma quantidade desse id_lancamento com 10 caracteres.
  
h1. *Resultado atual*

Ao efetuar pagamento o sistema apresenta erro Oracle por conta do tamanho dos campos nas tabelas
  
h1. *Resultado esperado*

Processar pagamentos com sucesso.
  
h1. *Solução Técnica*

 ALTER TABLE TS_INTEGRA_CC MODIFY ID_LANCAMENTO_CREDITO NUMBER(12);

ALTER TABLE TS_INTEGRA_CC_HIST MODIFY ID_LANCAMENTO_CREDITO NUMBER(12);


  
h1. *Versão*

CONVENIO - 12.6.0-carbon.65.13",2022-07-08T12:19:12.000-0300,Resolved (Pilot),ula,112,14,28
CC-3033,as,2022-06-14T19:19:52.703-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-05-06T18:04:59.000-0300,MOJP,Alta,Falha,CC,CORRECAO-ERROS,"Desativação de conta corrente com saldo, o debito é realizado antes da aprovação de evento","Ao realizar uma desativação de conta corrente utilizando o histórico 2, e a conta corrente tendo saldo disponível, o sistema esta realizando o lançamento de debito na conta para zeramento de saldo, antes de gerar e realizar a aprovação do evento. 
Versão do cliente: V13.2.2

Analisando a proc sCcDesativaCc foi identificado que a inserção do lançamento vem antes do trecho onde realiza a inserção do evento de desativação.
Evidencia abaixo:
 !image-2022-05-06-17-45-28-533.png|thumbnail! 


Evidencia demonstra o procedimento de desativação da conta corrente, onde o lançamento de debito foi criado antes da aprovação do evento. Também é possível observar que mesmo cancelando o evento, o lançamento de debito não foi excluído. 
Evidencia 'ALM 12628.docx'

",2022-07-08T17:47:49.000-0300,Resolved (Pilot),ula,144,18,36
CC-2959,lh,2022-09-13T16:28:21.904-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-04-22T16:12:30.000-0300,CSD,Baixa,Falha,CC,CORRECAO-ERROS,[Conta Garantida] Erro na alteração de tipo de conta para comum na virada de dia para conta configurada com N dias sem juros,"Erro durante o processo de virada de dia, no momento que é feita a alteração do tipo de Conta para uma Conta Comum (desenvolvimento feito pela pendência [https://cas2.matera.com/project/chamado/chamado.xhtml?id=277539)]

*Solução de contorno:* realizar a cobrança de encargos antes da virada de dia para conta com N dias sem juros.

 
h2. Passos para reprodução:

1 - Criar conta garantida com  ""Dias de Isenção no mês""  . O tipo de conta informado deve ter o campo ""Altera categoria de conta para COMUM após vencimento e saldo efetivo credor ou zerado"" preenchido com um tipo de conta comum.

2 - realizar débito na conta de modo que fique devedora 

3 - Virar alguns dias para que a conta possua encargos pendentes

4 - Creditar a conta para D-1 com valor superior ao saldo devedor + encargos pendentes, para que a conta fique com saldo efetivo credor ou positivo

5 - Virar o dia: será apresentada mensagem de erro informando que a conta possui encargos pendentes. 

 

Print das telas em base provisionada:

 

Conta Garantida possui ""Dias de Isenção no mês"" e contrato está vencido:

!image-2022-04-22-16-18-01-597.png!

Tipo de Conta garantida configurado com tipo de conta comum:

!image-2022-04-22-16-15-44-751.png!

 

Conta Possui saldo efetivo credor e encargos pendentes:

!image-2022-04-22-16-19-07-836.png!

 

Ao virar o dia, é apresentada a mensagem de erro:

 

!image-2022-04-22-16-33-21-618.png!

 ",2022-09-26T15:39:36.000-0300,Closed (Pilot),ula,80,10,20
CC-3340,wj,2022-08-03T12:15:50.585-0300,11608,In Technical Analysis,jira,status,11607,2022-08-03T12:11:32.000-0300,CSD,Média,Performance,CC,MELHORIAS,Melhoria no processamento Saldo Contábil Fechado,"Na pendência CC-2974, já foi realizado uma melhoria de performance do processo de Saldo Contábil Fechado, no entanto, o cliente encontrou alguns problemas, e devido a isso, voltamos os objetos alterados, a fim de, analisar e discutir uma melhor forma de desenvolvimento.

Solução técnica: implementar novamente a pendência CC-2974 e corrigir a foma que é buscada o saldo disponível.",2022-08-12T20:46:45.000-0300,Fechado,is,64,8,16
CC-3309,wj,2022-07-19T13:38:36.465-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-07-19T10:04:54.000-0300,TAUASR-ME,Alta,Falha,CC,CORRECAO-ERROS,Ajustar implementação da procedure para versão 13.0.x,"Foi desenvolvido uma melhoria de performance no processo de inserção de lançamentos de investimento automático entre o Conta Corrente e o Remunerador. A pendência em questão é a CC-3223, no entanto o objeto desenvolvido é incompatível com a versão 13.0.x do Conta Corrente, sendo necessários ajustes.

Causa:
 - A procedure criada *pCcRemuneradorContaCorrente* faz uma chama da procedure *sCcInsereLancamentoIntegr*, no entanto, o número de argumentos passados nessa chamada, é invalido.

*Analise técnica:*
 - Somente para versão 13.0.16: Na *pCcRemuneradorContaCorrenteBody na chamada da sCcInsereLancamentoIntegr*, remover os parâmetros *pisInformacoesAdicionais e pisIndComposicaoValorValido*.
 - Para as versões a partir da 13.1.13, incluir os parâmetros *sCcInsereLancamentoIntegr* *e* *pisInformacoesAdicionais***.
 - Inserir comentário no início de cada view
 - Alterar nome do banco nos properties",2022-08-12T20:46:58.000-0300,Closed (Pilot),is,152,19,38
CC-3205,ra,2022-09-09T16:43:41.111-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-06-14T11:21:54.000-0300,CSD,Média,Falha,CC,CORRECAO-ERROS,Limite maximo de crédito conta pagamento lançamento D+1,"Nos testes sobre a demanda da alteração dos controles de limites de conta pagamento verificamos um cenário de erro associado ao lançamentos em D+1 em função da diferença de relógio então temos o Conta Corrente aberto no ultimo dia do mês e Standin no dia seguinte. Neste cenário ao Standin enviar um lançamento de crédito para uma conta pagamento estando em D+1 a estratégia do Conta Corrente para D+1 é sensibilizar o saldo da conta em D0 e marcar o lançamento para ser ajustado na virada de dia. 

Neste cenário o Conta está considerando o crédito no mês em aberto e se eventualmente o valor máximo de crédito já foi utilizado está dando erro de valor excedido. 

Necessário realizar um tratamento para que este valor seja contabilizado nos contadores do mês seguinte uma vez que D+1 refere-se ao próximo mês.",2022-09-26T15:39:12.000-0300,Closed (Pilot),al,96,12,24
CC-3322,wj,2022-07-28T13:23:16.801-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-07-22T08:53:44.000-0300,DBAN,Média,Falha,CC,CORRECAO-ERROS,"Divergência no relatório ""Saldos por Grupo Contábil Analítico Para dias fechados""","Cliente reporta que após aplicação do hotfix _cta_1286_f20220617001 (em anexo)_ foi detectada uma divergência no relatório citado. Onde, o mesmo foi gerado no dia 06/07/22 referente a data de 01/07/22 (antes da aplicação do FIX) e gerando agora, após aplicado o fix, o resultado é diferente. Somente é possível obter o mesmo valor quando é selecionado o flag ""Exibir Contas com Saldo Zerado"".

o Cliente anexou o relatório gerado em 06/07 onde não existem contas com saldo zerado, logo, não geração do mesmo o flag não foi selecionado.

Segundo informação do cliente, ""_Foi realizado uma conciliação do Relatório por Histórico versus o Contábil Analítico, e a composição dos dois relatórios estão iguais_""

Não foi identificado a causa raiz do cenário, foi aberto o card de apoio CSTEC-204 onde foi sugerida a abertura do card de problema.

*SOLUÇÃO TÉCNICA:*
- Desfazer o desenvolvimento da pendência CC-2974 ",2022-08-01T08:43:03.000-0300,Resolved (Pilot),mo,24,3,6
CC-2842,as,2022-06-21T15:00:46.921-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-03-24T18:05:10.000-0300,H6LOC,Média,Falha,CC,CORRECAO-ERROS,API DE STATUS RETORNA DATA CORRENTE COMO D-1,"Após Atualização de versão do Conta Corrente para a 60.37 o STD não está atualizando automaticamente a data de virada de dia do conta corrente.

 

PS. A data do STD permanece a data de ontem mesmo após o restart sugerido 

 

Solução paliativa:

Aplicar o comando abaixo e reiniciar o Conta Corrente no tomcat:

declare
vNomeSubSis varchar2(10):= 'SDCONTA2';
vSituacao varchar2(2);
vDataReferencia date;
begin
select k.situacao, k.data_referencia
into vSituacao, vDataReferencia
from bc_sub_sistema k
where k.id_sub_sistema = vNomeSubSis;
–
–
if vSituacao = 'A' then
pMtrPublicaEscalonamentoProc.PublicaTerminoEscalonamento(pisNomeJanelaSis => 'FRMAD',
pisNomeSubSis => vNomeSubSis,
pidtDataReferencia => vDataReferencia);
end if;
–
end;
/",2022-07-01T11:10:58.000-0300,Resolved (Pilot),rp,72,9,18
CC-3095,gr,2022-06-10T17:01:10.887-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-05-20T11:31:43.000-0300,H6LOC,Média,Falha,CC,CORRECAO-ERROS,Devolução permanece no status 12 - Ações Financeiras Pendentes devido a conta estar em AD,"Bom dia, 

 

Precisamos de uma situação de contorno para que a gente consiga realizar a devolução da solicitação abaixo. 

A devolução não esta sendo encerrada e permanece no status 12 - Ações Financeiras Pendentes devido a conta estar em AD indevidamente. 

Para conseguirmos finalizar essa devolução devemos tirar essa conta desse cenário e reprocessar a devolução. Por isso, precisamos do tratamento do lado do conta corrente para tirarmos essa conta de AD para podermos reprocessar e encerrar essa devolução.  

 
|*ORIGINAL_TRANSACTION_ID*|*CREATION_DATE*|*CONTA*|*ERRO*|*Resultado análise* |*Ação* |
|E18236120202203302339s0114c2f573 |2022-04-06 20:20:08.534827|50339192 | |CC-1542: Ocorreu um erro (499) na tentativa de realizar o débito do valor solicitado. Verifique e tente novamente |Então, conforme indicado, o paliativo para este cenário é a realização de um crédito para a cobertura do saldo negativo (R$ 7,80) e o reprocessamento da devolução. Conforme e-mail em anexo. {color:#de350b}(PALIATIVO SUGERIDO ANTERIORMENTE NÃO ACEITO PELO C6){color}
  |

 
 Segue em anexo as consultas realizadas nessa conta. 

 
h1. Contexto 

O erro apresentado (CC-1542: Ocorreu um erro (499) na tentativa de realizar o débito do valor solicitado. Verifique e tente novamente) , é resultado da validação de saldo do Conta Corrente para uma conta de pagamento. 

No caso em questão algum processo fez com que esta conta de pagamento entrasse em adiantamento a depositante, por exemplo em função de uma divergência de saldos entre Standin e Conta, onde o Standin pode ter aprovado um lançamento considerando o saldo existente, e enviado ao Conta sendo processado de forma assíncrona incondicional e com isso podendo fazer com que a conta entre em adiantamento a depositante.

Como o MED não possui controle do saldo é necessário definir o tratamento para que o monitoramento/devolução MED possam ser realizados mesmo que a conta pagamento já esteja em adiantamento a depositante. A mesma análise deve ser feita com relação ao monitoramento JUD.

*MED*:
 * Utilizar o valor bloqueado para abater do saldo devedor e executar a devolução do valor residual. Ou seja, no momento do monitoramento poderá ser feito o desbloqueio de todo o valor bloqueado pelo MED para que haja a cobertura do saldo e uma posterior avaliação sobre o valor que ainda estaria disponível para a geração do lançamento. 
 ** Exemplo: 
 *** Conta pagamento com MED ativo;
 *** Ocorre algum lançamento incondicional que deixa a conta com saldo disponível negativo Y
 *** Se informado valor na releaseHolds no momento da devolução MED:
 **** Se existe valor X bloqueado para o MED  
 ***** Se X> Y: Finalizar monitoramento e efetuar o lançamento de débito (devolução) no menor valor entre o informado na releaseHolds e a diferença entre X-Y.
 ***** Se X<= Y: Finalizar monitoramento sem efetuar nenhum lançamento de débito (devolução) .
 ****  Se não existe valor bloqueado para o MED:
 ***** Finalizar monitoramento sem efetuar nenhum lançamento de débito (devolução) .
 *** Se não informado valor na releaseHolds no momento da devolução MED:
 **** Finalizar monitoramento sem efetuar nenhum lançamento de débito (devolução) .

 *JUD*
 * Manter a conta em adiantamento a depositante e executar a transferência judicial conforme solicitado. 

 
h1. Passos para reprodução
 # Cadastrar um Tipo de Conta do tipo conta pagamento.
 # Cadastrar uma nova conta informando o tipo de conta pagamento e com a flag ""pode exceder limite"" desmarcada.
 # Realizar um lançamento de crédito.
 # Iniciar um monitoramento MED através da api /v1/accounts/:branch/:account/monitorings para que a conta tenha o valor do crédito bloqueado.
 # Realizar um lançamento assíncrono incondicional de débito na conta para que ela fique em Adiantamento a Depositante.
 # Iniciar o processo de devolução do MED através da api /v1/accounts/:branch/:account/releaseHolds para desbloquear o valor bloqueado e debitar o valor da conta.

h1. Resultado Atual

Ao iniciar o processo de devolução pela releaseHolds o erro é apresentado:
{code:java}
""code"": ""CC-1542"",
""message"": ""Ocorreu um erro (499) na tentativa de realizar o débito do valor solicitado. Verifique e tente novamente.""
{code}
h1. Resultado Esperado

MED => Devolver o valor correspondente da diferença entre o que está em AD x Valor Bloqueado.

JUD => Devolver o valor que foi bloqueado integralmente, mantendo a conta em AD.",2022-07-01T10:53:46.000-0300,Resolved (Pilot),dro,120,15,30
CC-3172,ra,2022-07-07T11:00:30.366-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-06-08T19:06:06.000-0300,H6LOC,Baixa,Falha,CC,CORRECAO-ERROS,Cliente com Dias sem Juros cadastrado e houve cobrança de encargos,"A API /v2/contas/\{agencia}/\{conta}/alteracaoConta quando chamada mais de uma vez para determinada conta, passa valor nulo para o campo max_dias_sem_juros da tabela cc_taxa_historico. Implicando na cobrança indevida de encargos para conta com N dias sem juros.",2022-07-15T19:23:27.000-0300,Resolved (Pilot),dro,56,7,14
CC-3220,vp,2022-07-19T09:26:53.178-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-06-22T09:19:44.000-0300,H6LOC,Baixa,Falha,CC,CORRECAO-ERROS,493916 - Erro Gera Movimento Contábil - V12,"Ao tentar utilizar a função via tela de regerar movimento contábil na V12, consta o erro _*""SD-115: Erro inesperado no processamento do objeto sCcAgendaJobGeracaoMovContabil"": no data found*_.

 

Após a pendencia CC-2149 o processo ""GERACAO_LANCAMENTOS_CONTABEIS"" foi excluído da tabela mtr_processamento_agendado mas a geração via tela utiliza o JOB configurado nessa tabela gerando erro.

[https://stash.matera.com/projects/CBANK/repos/conta-corrente/browse/backend/src/oracle/procedures/sCcAgendaJobGeracaoMovContabil.sql#22]

 ",2022-08-12T20:47:08.000-0300,Resolved (Pilot),dro,152,19,38
CC-3214,as,2022-06-21T12:03:24.377-0300,11608,In Technical Analysis,jira,status,11607,2022-06-21T11:50:52.000-0300,CSD,Média,Tarefa,CC,CORRECAO-ERROS,"Teste CC-2874 versões 12.9.x, 12.10.x ou 13.3.X","Em função da necessidade de liberação do Jira referente a duplicidade da contabilidade a partir de lançamentos D+1 (CC-2874) ficaram pendentes os testes desta tratamento sobre a versão com a reorganização da contabilidade. 


Jiras associados a entrega da reestruturação dos processos assincronos:  CC-2149 (Reorganização processos assíncronos) e CC-3063 (Correção do processo de agendamento)

 ",2022-07-01T10:55:02.000-0300,Fechado,dro,72,9,18
CC-3223,as,2022-06-23T17:32:36.048-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-06-22T16:29:47.000-0300,NAOCB,Média,Performance,CC,MELHORIAS,[Remunerador] Reavaliação de processo,"Este chamado foi aberto para tratar a refatoração do processo de geração de depósitos e resgates realizado pelo Conta Corrente, para efetivar os processos relacionados ao Remunerador de Contas.",2022-07-08T17:47:04.000-0300,Fechado,dro,96,12,24
TS-458,td,2022-04-14T16:55:11.803-0300,11608,In Technical Analysis,jira,status,11607,2022-03-31T16:19:52.000-0300,CSD,Alta,Vulnerabilidade de Segurança,TS,CORRECAO-ERROS,Itens (defectdojo) que travaram a publicação da RC (Liquidação),"Sistema TES

Família 11.x, (11.12.0) não consta;
Família 12.x, (12.8.0) não constas;

Família 13.x, (13.2.0) constam dois itens
LISTA DE VULNERABILIDADES QUE IMPEDEM DE GERAR RELEASE FINAL

CRITICAS: (1)

https://defectdojo.matera.com/finding/2448823
ALTAS: (1)

https://defectdojo.matera.com/finding/2448824

*Observação:* _""Sobre as bibliotecas desatualizadas que vem de dependência de algum pacote GSX.
Nós podemos solicitar para o Time de Segurança marcar como um risco aceito, pois não tem uma solução ainda, é uma biblioteca da Matera, e está no roadmap pra fazer a correção desses itens.
Para não impedir o lançamento, dependências que estão relacionadas a GSX podemos passar por enquanto.""_

https://docs.google.com/spreadsheets/d/1PF9_lhEZT-79_q45OoEQdw-sE5ul47zyjosyOZD3nhA/edit#gid=193543691",2022-07-14T08:21:52.000-0300,Fechado,im,504,63,126
CC-2748,td,2022-05-04T10:16:17.513-0300,11608,In Technical Analysis,jira,status,11607,2022-02-23T16:06:51.000-0300,CSD,Alta,Vulnerabilidade de Segurança,CC,CORRECAO-ERROS,[MAT_00003.001] A aplicação utiliza o método printStackTrace() que pode expor informações importantes sobre o funcionamento da aplicação (InformacoesAdicionaisLancamentoBusiness.java),"Impact
Com base nas informações expostas um atacante pode realizar ataques mais elaborados afim de comprometer a um dos pilares da segurança, como por exemplo a disponibilidade.

Description
A aplicação utiliza o método printStackTrace() que pode expor informações importantes sobre o funcionamento da aplicação. Recomendamos a utilização de um logger.

Files  
/business/src/main/java/com/matera/banco/sdconta/business/InformacoesAdicionaisLancamentoBusiness.java

Linha: 116

111: 	                	try {
112: 							InformacoesAdicionaisLancamentoDTO obj = new ObjectMapper().readValue(informacoesAdicionais.get().getInformacoesAdicionais(), InformacoesAdicionaisLancamentoDTO.class);
113: 							extrato.setInformacoesAdicionais(obj);
114: 							
115: 						} catch (JsonProcessingException e) {
116: 							e.printStackTrace();
117: 						}
118:                 	}
119:                 }
120:                 
121:             });

 !screenshot-1.png|thumbnail! ",2022-07-01T10:56:25.000-0300,Fechado,td,336,42,84
CC-2747,td,2022-05-03T13:09:07.932-0300,11608,In Technical Analysis,jira,status,11607,2022-02-23T15:57:22.000-0300,CSD,Alta,Vulnerabilidade de Segurança,CC,CORRECAO-ERROS,[MAT_00003.001] A aplicação utiliza o método printStackTrace() que pode expor informações importantes sobre o funcionamento da aplicação (AdditionalInformationsMapper.java),"Impact
Com base nas informações expostas um atacante pode realizar ataques mais elaborados afim de comprometer a um dos pilares da segurança, como por exemplo a disponibilidade.

Description
A aplicação utiliza o método printStackTrace() que pode expor informações importantes sobre o funcionamento da aplicação. Recomendamos a utilização de um logger.

File: /domain/src/main/java/com/matera/banco/sdconta/domain/mapper/AdditionalInformationsMapper.java

Linha: 47

Evidence
42: 
43: 			return additionalInformationsEntryDTO;
44: 			
45: 		} catch (JsonProcessingException e) {
46: 			// TODO Auto-generated catch block

47: 			e.printStackTrace();

48: 		}
49: 		return null;
50: 		
51: 	}
52: 

 !screenshot-1.png|thumbnail! ",2022-07-01T10:56:22.000-0300,Fechado,td,344,43,86
CC-2731,td,2022-05-04T10:15:42.921-0300,11608,In Technical Analysis,jira,status,11607,2022-02-18T17:46:52.000-0300,CSD,Alta,Vulnerabilidade de Segurança,CC,CORRECAO-ERROS,"[MAT_00003.382 + MAT_00003.383] Possível impacto, causa vazamentos de segurança, porque o usuário pode executar programas arbitrários","Injeção de Comandos


Executar programas por meio do shell significa que todas as entradas do usuário passadas para o programa são interpretadas de acordo com a sintaxe e as regras semânticas do shell invocado. Use shell=False

file: /others/tools/scripts/to-pdf/main.py

[MAT_00003.382]

Linha 56

51:     print(""{} generated \n"".format(input_path))
52: 
53: 
54: 
55: def _get_current_version():
56:     result = str(subprocess.check_output(""git describe 
--tags"", shell=True))
57:     result = result.replace(""b'"", '').replace(""\n'"", '').replace(""v"", '')
58:     result = result.split(""-"")
59:     return result[0]
60: 
61: 

[MAT_00003.383]

Linha 29

24:     if not output_file_directory.exists():
25:         output_file_directory.mkdir(parents=True)
26: 
27: 
28: def _get_current_version():
29:     result = str(subprocess.check_output(""git describe 
--tags"", shell=True))
30:     result = result.replace(""b'"", '').replace(""\\n'"", '').replace(""v"", '')
31:     result = result.split(""-"")
32:     return result[0]
33: 
34: 
",2022-07-01T10:56:18.000-0300,Fechado,td,336,42,84
CC-3407,gea,2022-08-30T16:07:06.937-0300,11608,In Technical Analysis,jira,status,11607,2022-08-22T20:27:47.000-0300,H6LOC,Média,Melhoria,CC,MELHORIAS,[PORTEIRO_BALADA Fase1]  - Configurar verificação da unicidade no histórico de lançamento,"h1. Contexto
 * Criar uma nova tela para configurar quais os históricos de lançamento terão a validação da unicidade/rastreabilidade; Abaixo detalhes sobre o tratamento.
 * Tratar a replicação de histórico para Standin.

*Tela de ativação*

Inclui uma nova tela para a indicação dos históricos que terão a validação de unicidade:
 * item de menu:  Lançamentos > Histórico > Configuração de Tratamento de Unicidade por Histórico
 ** deverá ser apresentado somente quando o recurso IDUNILANC estiver ativo. 
 * Protótipo da tela: incluir protótipo

!image-2022-09-15-14-59-36-968.png!

  

  Observação: mesmo se tratando de uma nova tela conforme levantamento realizado com o time verificamos que não existe a necessidade de que esta tela seja restificada.

 

 
h1. Análise técnica
h3. Tratando a replicação de histórico para o Standin
----
Inserir JsonHistorico na pCcTrataReplicacaoCadastroBody.sql
{code:sql}
    voJsonHistorico.put('indTrataUnicidade', pirHistorico.ind_trata_unicidade);{code}
 

 

 ",2022-09-30T22:34:57.000-0300,Fechado,al,184,23,46
CC-3237,im,2022-08-11T10:33:30.232-0300,11608,In Technical Analysis,jira,status,11607,2022-06-28T11:56:43.000-0300,H6LOC,Média,Melhoria,CC,MELHORIAS,[PORTEIRO_BALADA Fase1] - Rastreabilidade/Unicidade lancamento fluxo sincrono,"h1. *Contexto*

*Recurso (cc_recurso)*
 * Criar recurso para ativar/desativar o controle de unicidade de transações/persistencia do identificador externo.

Observação:

Necessário como um ponto de resiliência para contornar de forma emergencial problemas, por exemplo: algum erro na implementação do cliente que está gerando o mesmo identificado para várias transações e se não tivermos a chave poderia fazer com que o PIX ficasse indisponível. Nestes cenários de crise bastaria desligar a chave.

 

*Persistencia*
 * Tratar o recebimento do campo com o identificador externo (identificador definido pelo cliente) usando sleuth para o tracing.
 * Persistir o identificador enviado em tabela.
 * Avaliar recurso geral da funcionalidade para definir se o identificador vai ser persistido (recurso ativo) ou não (recurso inativo).

Serviços tratados: 
 * 
 ** POST v2/lancamento
 ** POST v4/lancamento
 ** POST /v2/contas/\{agencia}/\{conta}/lancamentos

Observação:
 * Definição do field fica configurado em sdconta.properties
  

*Unicidade*
 * Criação de um novo atributo no histórico de lançamento para indicar que será realizada a validação de unicidade
 * *Validações:* Considerar a tabela verdade abaixo para definir se haverá ou não a validação e persistencia do identificador unico. Caso o resultado seja SIM (validar) avaliar:  
 ** Se foi informado mais de um lançamento no lote e retornar um erro de erro específico indicando que o lote é composto por mais de um lançamento.
 ** Se já existir na base algum lançamento com a composição histórico, agencia, conta, identificador externo (campo incluído pelo Jira CC-3237) retornar um erro específico indicando a duplicidade de lançamento

  

Abaixo tabela com o resultado esperado para o tratamento do identificador da rastreabilidade e a unicidade.
|Recurso geral rastreabilidade/unicidade lançamento por histórico|Indicador validacao unicidade por histórico|Lançamento com identificador|RESULTADO =>|Valida unicidade lancamento|Persiste identificador enviado|
|N|N|N|RESULTADO =>|N|N|
|N|N|S|RESULTADO =>|N|N|
|N|S|N|RESULTADO =>|N|N|
|N|S|S|RESULTADO =>|N|N|
|S|N|N|RESULTADO =>|N|N|
|S|N|S|RESULTADO =>|N|N|
|S|S|N|RESULTADO =>|N|N|
|S|S|S|RESULTADO =>|S|S|

 * Fase 1 escopo síncrono não temos como obrigar o envio do identificador no lançamento de um histórico marcado para validação por unicidade. Discutir inclusão dessa validação para demais fases.
h1. Análise técnica
h3. Criação de um recurso que controla o uso da unicidade
----
Insert na cc_recurso
{code:sql}
begin
  --
  insert into cc_recurso
  (
    descricao,
    cod_recurso,
    ind_ativo,
    ind_exibe
  )
  values
  (
    'SALVA INFORMACOES SOBRE O INDENTIFICADOR UNICO DE LANCAMENTOS',
    'IDUNILANC',
    'N',
    'S'
  );
  --
  dbms_output.put_line( SQL%ROWCOUNT || ' row inserted in table cc_recurso');
  --
exception
  when dup_val_on_index then
    dbms_output.put_line( 'Warning: row already exists in table cc_recurso');
end;
/
{code}

h3. Criação de uma coluna para indicar se o histórico fará tratamento de unicidade
----
Delta com alter table na cc_historico
{code:sql}
prompt
prompt
prompt ====> Criando coluna ind_trata_unicidade em cc_historico
--
declare
  column_already_exists exception;
  pragma exception_init(column_already_exists, -1430);
begin
  execute immediate 'ALTER TABLE cc_historico ADD ind_trata_unicidade varchar2(1)';
  dbms_output.put_line('Table altered');
exception
  when column_already_exists then
    dbms_output.put_line('Warning: Column ind_trata_unicidade already exists in table cc_historico');
end;
/
--
prompt
prompt
prompt ====> Comentando coluna ind_trata_unicidade em cc_historico
--
comment on column cc_historico.ind_trata_unicidade IS 'Indica se o historico fara tratamento de unicidade';
--
prompt
prompt
prompt ====> Setando valor padrao para ind_trata_unicidade em cc_historico
--
alter table cc_historico disable all triggers;
--
prompt
--
update cc_historico
   set ind_trata_unicidade = 'N'
 where ind_trata_unicidade is null;
 --
prompt
--
alter table cc_historico enable all triggers;
prompt
prompt
prompt ====> Coluna cc_historico.ind_trata_unicidade is not null
--
declare
  column_already_not_null exception;
  pragma exception_init(column_already_not_null, -1442);
begin
  execute immediate 'ALTER TABLE cc_historico MODIFY ind_trata_unicidade not null';
  dbms_output.put_line('Table altered');
exception
  when column_already_not_null then
    dbms_output.put_line('Warning: Column cc_historico.ind_trata_unicidade already is not null');
end;
/
--
prompt
prompt
prompt ====> Coluna ind_trata_unicidade possui valor default
--
ALTER TABLE cc_historico MODIFY ind_trata_unicidade default 'N';
--
prompt
prompt
prompt ====> Fim{code}


h3. Tratamento da unicidade
----
Tratar as seguintes APIs
 * 
 ** POST v2/lancamento (InsereLancamentoController.insereLancamento)
 ** POST v4/lancamento (LancamentosApiDelegateImpl.criarLancamentosV4)
 ** POST /v2/contas/\{agencia}/\{conta}/lancamentos (LancamentosApiDelegateImpl.criarLancamentosV2)
 * Para salvar as informações sobre o identificador único do lançamento, as seguintes configurações deverão estar ativas:
 ** Recurso da cc_recurso
 ** Configuração do histórico do lançamento para salvar as informações da unicidade (A definir no CC-3407)
 * A informação contendo o identificador do lançamento, virá no header da requisição
 ** O cliente precisará configurar o nome do campo em que ele estará enviando essa informação (Descrito no tópico abaixo)
 ** Nós buscaremos o valor do identificador de acordo com o nome do campo que o cliente configurou
 * Após realizar o lançamento, salvar o identificador, o cc_lancamento.id_lancamento, id_historico e id_cc em uma tabela

h3. Definindo o nome do campo que conterá o identificador do lançamento
----
No arquivo sdconta.properties, configurar o campo abaixo:
{code:json}
spring:
  sleuth:
    baggage:
      remote-fields:
      - nome-do-campo
{code}
No exemplo, o campo onde o sistema buscará o valor do identificador do lançamento será *nome-do-campo*.",2022-09-30T22:34:47.000-0300,Fechado,ap,288,36,72
CC-3642,al,2022-10-25T17:37:05.752-0300,11608,In Technical Analysis,jira,status,11607,2022-10-24T14:44:31.000-0300,NGACOB,Média,Performance,CC,CORRECAO-ERROS,Arquivo da circular 3290,"O cliente está tentando gerar um arquivo da circular 3290 de dois CNPJ's.
Após longo tempo de processamento recebem o seguinte erro:
SD-115 Erro inesperado no processamento do objeto ipCc_Informes.lInsereIntegracao: out of process memory when trying to allocate 32824 bytes (pga heap, kgh stack).

Já foram verificadas com o DBA questões de memória do servidor de banco e está adequado.

 

[https://stash.matera.com/projects/UCC/repos/conta-corrente/browse/backend/src/oracle/packages/ipCc_InformesBody.sql#72]

Linha 72 procedure lInsereIntegracao.

O cliente também solicita a confirmação de qual é o limite do bulk configurado no procedimento e para quantos registros está configurado o commit parcial da rotina.

 

Foi feita uma alteração no objeto ipCc_Informes_13.0.17 (em anexo).
Cliente executou em homologação em uma conta com cerca de um milhão de registros. Os dados foram gravados sem erro e foi possível gerar o arquivo.
Porém essa conta não é a mesma que existe em ambiente de produção, então farão a aplicação do objeto e farão a geração dos dados em seguida.",2022-10-31T15:26:07.000-0300,Fechado,ap,40,5,10
CC-3437,vp,2022-10-05T10:22:05.181-0300,11608,In Technical Analysis,jira,status,11607,2022-08-27T10:04:06.000-0300,H6LOC,Média,Tarefa,CC,MELHORIAS,Teste Desacoplamento do Front-end e Back-end do Conta Corrente,"h1. Contexto

refazer os testes da entrega CC-227 para confirmar o comportamento do desacoplamento para que o projeto que está tratando a virada de dia possa fazer uso da funcionalidade.

 

Observação: não encontramos nenhum registro dos cenários testados pelo Jira CC-227, acredito que vamos ter que fazer uma reversa sobre o código para verificar como configurar e a partir disso pensar nos cenários.

 

 

 ",2022-11-14T16:51:41.000-0300,Fechado,ap,216,27,54
TS-564,as,2022-10-05T08:22:05.216-0300,11608,In Technical Analysis,jira,status,11607,2022-10-04T17:19:56.000-0300,CBNB,Média,Dívida Técnica,TS,MELHORIAS,Retornar portabilidade no serviço de ted recebida,"Contexto

Cliente: NBC Bank S/A - Banco Múltiplo 
OBS: Não está usando o nosso CC. (hoje eles tem Cadastro central, Informes e Liquidação Financeira). Hoje nossa API nao trata todas as informações da TED recebida.
*OBS: essa informação se tornou um impeditivo para colocar em PRD o TES.* 
Tela de envio de TED e a API não apresenta todas as informações.
Estou abrindo um card de melhoria para um cliente novo, na verdade ele ainda está em fase de implantação, porém ao tentar encontrar esse cliente no Jira, ele não está disponível (Nova Banco Continental S.A Banco Multiplo = NBC Bank S/A - Banco Múltiplo

Pelo fato de ele estar implantando, seria esse o motivo? No sistema de Liquidação Financeira temos a API v1/consulta-ted-recebida, que tem a finalidade de retorna a lista de Ted recebida. Foi levantado uma sugestão de melhoria nessa API, a fim de acrescentar a informação de Portabilidade, que hoje está disponivel em consulta via tela Menu Liquidação > Recebimento de Ted

 
h1. Detalhamento

Alteração do serviço GET /v1/consulta-ted-recebida incluindo no response o numero da portabilidade conforme swagger, linha 2151.
{code:java}
                dadosGerais:
                  title: Dados gerais
                  properties:
                    numeroUnicoPortabilidade:
                      description: Número unico de portabilidade
                      type: string                 {code}
Obter a informação de TS_DOC_RECEBIDO.NUMERO_UNICO_PORTABILIDADE",2022-10-10T18:44:12.000-0300,Fechado,al,32,4,8
CC-3844,ra,2022-12-20T14:06:52.153-0300,11608,In Technical Analysis,jira,status,11607,2022-12-15T18:29:01.000-0300,CSD,Média,Dívida Técnica,CC,MELHORIAS,Tratamento contas tipo pagamento SVR,"O Bacen publicou a IN 336 ([https://www.bcb.gov.br/estabilidadefinanceira/exibenormativo?tipo=Instru%C3%A7%C3%A3o%20Normativa%20BCB&numero=336]) que determina o prazo para envio das informações da tão aguardada 2ª fase do SVR.
 Nesta fase começam a ser enviadas os outros tipos de valores que não estavam sendo enviados para o Conta o impacto está sobre:
 Tipo II - contas de pagamento pré-paga e pós-paga encerradas com saldo disponível;
  
 Inclusão dos códigos que identificam os tipos de valores:
 * 020 - Contas de pagamento pré pagas encerradas com saldo
 * 021 - Contas de pagamento pós pagas encerradas com saldo
 Data de início de envio de informações:
 Arquivo 9800 - Valores a Devolver - Data base 12/2022 - arquivo a ser enviado até 31/01/23
 Arquivo 9805 - Valores Devolvidos- Data base 01/2023 - arquivo a ser enviado até 28/02/23

 

Alterações necessárias:
 * inclusão nos novos dominios (020 e 021) na tabela CC_SITUACAO_ORIGEM_SVR

{code:sql}
insert into CC_SITUACAO_ORIGEM_SVR(COD_SITUACAO, DESCRICAO )
 values ('020', 'Contas de pagamento pré-paga encerradas com saldo disponível');

insert into CC_SITUACAO_ORIGEM_SVR(COD_SITUACAO, DESCRICAO )
 values ('021', 'Contas de pagamento pós pagas encerradas com saldo');
{code}
 
 * Alteração na regra dos serviços do SVR () conforme abaixo:

No desenvolvimento da fase 1 do SVR tentamos deixar o sistema preparado para o tratamento das contas de pagamento. Para isso realizamos a implementação considerando que seriam exportado pelo serviços (GET /v2/accounts/closedAccountsCreditBalance e GET /v1/accounts/closedAccountsAmountsReturned ) somente as contas associadas a categorias com origem_svr preenchida e na epoca então deixamos nulo para as categorias de pagamento.

Entretanto na fase 2 onde trata a regra de conta pagamento o Bacen definiu origens distintas para contas pagamento pre-pagas e pos paga. E o tratamento previsto não previa este comportamento uma vez que pre/pos paga é uma informação do tipo da conta e não da categoria.

Como sugestão de tratamento consideramos incluir 2 novos campos na tabela de categoria para que seja utilizado no mapeamento de origem para contas de pagamento por exemplo origem_svr_prepaga e origem_svr_pospaga. Consideramos estar na categoria pois os valores são de controle da Matera e já os tipos de contas são criados pelo usuario do sistema.

{code:sql}
alter table CC_CATEGORIA_CC add origem_svr_prepaga VARCHAR2(3);
 alter table CC_CATEGORIA_CC add origem_svr_pospaga VARCHAR2(3);

ALTER TABLE cc_categoria_cc ADD CONSTRAINT FK_CC_SIT_SVR_PRE FOREIGN KEY (origem_svr_prepaga) REFERENCES cc_situacao_origem_svr (cod_situacao) ENABLE NOVALIDATE;
ALTER TABLE cc_categoria_cc ADD CONSTRAINT FK_CC_SIT_SVR_POS FOREIGN KEY (origem_svr_pospaga) REFERENCES cc_situacao_origem_svr (cod_situacao) ENABLE NOVALIDATE;

update cc_categoria_cc ct set ct.origem_svr_prepaga = '020', ct.origem_svr_pospaga = '021' where ct.id_categoria_cc in ('L','P');
{code}
 

A partir da criação destes campos alterar o critério de busca dos serviços para que considere contas que possuam ou origem_svr, ou origem_svr_prepaga ou origem_svr_pospaga e para definição da origem a ser retornada avaliar conforme abaixo:
 * Categoria de pagamento ('L' ou 'P') se o tipo da conta for pre paga, obter o campo cc_categoria.origem_svr_prepaga , se o tipo da conta for pos paga obter o campo cc_categoria.origem_svr_pospaga
 * Categorias diferente de pagamento obter o campo cc_categoria.origem_svr

 

Consulta de base para a obtenção dos dados de origem considerando o tipo e a categoria da conta:
{code:sql}
 SELECT T.ID_TIPO_CC,
       T.DESCRICAO,
       C.ID_CATEGORIA_CC,
       C.DESCRICAO,
       O.COD_SITUACAO,
       O.DESCRICAO
  FROM CC_TIPO_CC T,
       CC_CATEGORIA_CC C,
       CC_SITUACAO_ORIGEM_SVR O,
       (SELECT CT.ID_CATEGORIA_CC,
               TP.ID_TIPO_CC,
               CASE
                 WHEN ID_CATEGORIA_CC IN ('P', 'L') THEN
                  DECODE(TP.IND_POS_PAGA,
                         'S',
                         OPOS.COD_SITUACAO,
                         OPRE.COD_SITUACAO)
                 ELSE
                  O.COD_SITUACAO
               END COD_SITUACAO
          FROM CC_TIPO_CC             TP,
               CC_CATEGORIA_CC        CT,
               CC_SITUACAO_ORIGEM_SVR O,
               CC_SITUACAO_ORIGEM_SVR OPRE,
               CC_SITUACAO_ORIGEM_SVR OPOS
         WHERE TP.CATEGORIA_CC = CT.ID_CATEGORIA_CC
           AND CT.ORIGEM_SVR = O.COD_SITUACAO(+)
           AND CT.ORIGEM_SVR_PREPAGA = OPRE.COD_SITUACAO(+)
           AND CT.ORIGEM_SVR_POSPAGA = OPOS.COD_SITUACAO(+)) S
 WHERE T.CATEGORIA_CC = C.ID_CATEGORIA_CC
   AND C.ID_CATEGORIA_CC = S.ID_CATEGORIA_CC
   AND T.ID_TIPO_CC = S.ID_TIPO_CC
   AND S.COD_SITUACAO = O.COD_SITUACAO
{code}

 
  
  
  ",2022-12-26T16:22:20.000-0300,Fechado,as,40,5,10
TS-560,as,2022-09-28T12:22:50.033-0300,11608,In Technical Analysis,jira,status,11607,2022-09-28T12:18:16.000-0300,CSD,Média,Dívida Técnica,TS,CORRECAO-ERROS,Ajuste swagger serviços de liquidacao ficha,"Contexto

Necessário corrigir corrigir o swagger conforme abaixo:

Serviços:
 * POST  /v1/liquidacoes-ficha
 * POST /v2/liquidacoes-ficha

Alteração:
 * nomeResponsavel: dever ter tamanho max de 40",2022-09-30T21:27:40.000-0300,Fechado,al,24,3,6
TS-559,al,2022-09-27T11:04:36.517-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-09-26T16:18:46.000-0300,RRME,Média,Falha,TS,CORRECAO-ERROS,sTsAPITransfBloqueioJudicial  - inclusão do id pessoa,"h1. Contexto

Considerando o cenário de contas que estejam sendo controladas pelo DTW, onde o Conta corrente não controla mais os bloqueios destas contas, é necessário alterar a api sTsAPITransfBloqueioJudicial para:
 * tratar o pIdBloqueioJudicial como opcional;
 ** Quando pIdBloqueioJudicial  for informado, mantém comportamento atual da API.
 * -inclusão de novo parâmetro opcional idPessoa para que quando não for informada a agencia/conta seja possível a obtenção da conta pelo idPessoa. No caso de pessoas com mais de uma conta, obter a conta mais {color:#de350b}antiga{color}-
 * {color:#172b4d}inclusão de novo parâmetro idPessoa como opcional. Caso o pIdBloqueioJudicial não seja informado, o novo parametro idPessoa deverá ser informado para que a liquidação de transferência judicial seja efetivada.{color}
 ** {color:#172b4d}Outras validações:{color}
 *** o idPessoa deve ser uma pessoa ativa no Cadastro de Pessoas
 *** o idPessoa deve ser um titular da agencia/conta, quando informados

{color:#172b4d}O JUD é que deverá decidir quais parametros passar para realização da TED. Ou seja, quando não existe o DTW os parametros passados atualmente não devem ser alterados.{color}

 ",2022-09-30T21:27:45.000-0300,Closed (Pilot),al,32,4,8
CC-3557,lj,2022-09-30T19:47:11.043-0300,11608,In Technical Analysis,jira,status,11607,2022-09-30T18:56:48.000-0300,CSD,Média,Dívida Técnica,CC,CORRECAO-ERROS,Ajuste Dbtest associado ao TS-559,Atualização dos Dbtest do Conta associados ao tratamento do Jira TS-559,2022-09-30T21:01:33.000-0300,Fechado,al,8,1,2
TS-569,ofe,2022-10-14T08:33:56.529-0300,11608,In Technical Analysis,jira,status,11607,2022-10-10T10:50:39.000-0300,CSD,Baixa,Dívida Técnica,TS,CORRECAO-ERROS,[Integração JUD] Transferência Judicial sem integrar com Conta Corrente,Remover validação da bc_cc_pessoa,2022-10-17T18:17:06.000-0300,Fechado,al,16,2,4
CC-3658,al,2022-10-28T10:56:46.144-0300,11608,In Technical Analysis,jira,status,11607,2022-10-28T10:55:16.000-0300,CSD,Média,Dívida Técnica,CC,CORRECAO-ERROS,Ajuste tabela de controle de Status,"Criar FK na tabela cc_controle_status

Mover tratamento para a sCcValidaDepoisInsAtuCc",2022-10-31T15:26:11.000-0300,Fechado,al,16,2,4
CC-3624,ll,2022-10-27T09:55:10.229-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-10-20T17:15:00.000-0300,H6LOC,Alta,Falha,CC,CORRECAO-ERROS,F504397 - Lançamentos processados em duplicidade no Conta,"Durante atendimento do chamado 504394, identificamos que ocorreram duplicidades de transações no Conta Corrente devido a um erro ocorrido no momento em que foi comandado o fechamento do Conta. 

Conforme evidência no arquivo tc505020_03_consulta.log, é possível identificar que foram realizadas várias tentativas de fechamento do sistema, onde o processo PCCFD.PODEFECHARDIA foi executado, porém o processo PCCFD.INICIALIZAVARIAVEIS não. 

De acordo com o cenário, entendemos que o fato de não ocorrer a postagem da mensagem de inicio de fechamento que é comandado hoje pela procedure PCCFD.INICIALIZAVARIAVEIS, acarretou a ação de serem processados dois lançamentos no Conta Corrente com o mesmo id_sistema_externo do Standin.

Como paliativo ao C6, foi orientado a execução do script para publicação da mensagem de fechamento e inclusão da API v4/lancamento na configuração de API filter.

Sugerimos que como correção, seja alterada a publicação da mensagem de escalonamento para a procedure PCCFD.PODEFECHARDIA, afim de travar as apis de lançamento e possibilitar que o fechamento ocorra sem intervenções.",2022-10-31T15:26:33.000-0300,Resolved (Pilot),al,24,3,6
CC-3373,jr,2022-08-23T10:50:35.949-0300,11608,In Technical Analysis,jira,status,11607,2022-08-12T08:11:42.000-0300,CSD,Média,Melhoria,CC,MELHORIAS,[TARIFA_PACOTE] Particionamento de tabela (cc_utilizacao_pacote_tarifa),"[^Particionamento - Evidencia.pdf]Disponibilizar script de particionamento da tabela cc_utilizacao_pacote_tarifa, que armazena a utilização mês de cada tarifa por conta corrente.

Critério de partição: mês/ano

Definir forma de entrega do script (deploy), conforme indicação de arquitetura.

DEV: deve executar o dbtest da cobrança da tarifa de pacote dos cenários.

Tester: validar a aplicação do script.

 

 ",2022-09-30T22:34:33.000-0300,Fechado,al,224,28,56
TS-563,ofe,2022-10-11T10:26:01.493-0300,11608,In Technical Analysis,jira,status,11607,2022-10-03T20:44:51.000-0300,H6LOC,Média,Melhoria,TS,MELHORIAS,Nao realizar desvio de débito de investimento único,"h1. Contexto

Quando o lançamento for da operação AUTO_INVEST mesmo com a configuração de desvio de débito para o Standin ativa recurso “INTEGRA_LANCAMENTO_DEBITO_STANDIN” para os Sistemas SDTES e SDOPEN, o fluxo não fará o desvio para o Stand In e sempre executará o débito primeiro no  Sistema de Conta Corrente.

 ",2022-10-31T18:06:33.000-0300,Fechado,cc,112,14,28
CC-3517,as,2022-10-04T10:35:35.329-0300,11608,In Technical Analysis,jira,status,11607,2022-09-23T11:40:46.000-0300,H6LOC,Média,Melhoria,CC,MELHORIAS,Escalonamento investimento unico,"h1. Contexto

Desenvolvimento de um novo processo que deverá ser escalonado no fechamento de período para controlar o investimento único.

O processo de resgate não deverá sofrer alteração em função deste novo produto.

 
h1. Detalhamento

Caso a conta possuam configuração de “Valor máximo aplicação” o processo deverá avaliar o valor a ser aplicado em D-1, considerando o menor valor entre:
 * “valor máximo aplicação” e
 * “saldo disponível D-1” subtraído do “saldo credor mínimo”

 

Se após a apuração exista valor a ser aplicado o sistema deve:
 * realizar a chamada para a inserção de investimento, 
 * remover a configuração de “Valor máximo aplicação”,
 * e atribuir ao “Valor Mínimo Aplicação” o valor de 1.000.000.000 para que não seja realizada aplicação em outro dia. 

Se após a apuração não exista valor a ser aplicado:
 * remover a configuração de “Valor máximo aplicação”,
 * avaliar o valor da  flag “investimento automático” conforme abaixo:
 ** *manter* a flag “investimento automático” quando o cliente *possuir* outras aplicações de resgate automático em aberto e irá atualizar o campo ""valor Mínimo para Aplicação"" com o valor 1.000.000.000, para que não sejam feitas aplicações automáticas no próximo processamento,
 ** *desmarcar* a flag “investimento automático” quando o cliente *não possuir* aplicações de resgate automático em aberto para que esta conta não seja considerada pelo processo de resgate do Sistema.

 
 * Incluir um registro de aviso na CC_INVESTIMENTO_AUTOMATICO com uma mensagem “Aplicação não realizada - saldo insuficiente”.

 Se a conta estiver com saldo devedor o processo de resgate já terá realizado o resgate para cobrir o saldo negativo e com isso não haverá valor a ser aplicado deverá:
 * remover a configuração de “Valor máximo aplicação”,
 * e atribuir ao “Valor Mínimo Aplicação” o valor de 1.000.000.000 para que não seja realizada aplicação em outro dia. 

 ",2022-10-31T18:06:53.000-0300,Fechado,cc,152,19,38
CC-3219,lf,2022-09-26T11:04:45.567-0300,11608,In Technical Analysis,jira,status,11607,2022-06-22T08:38:39.000-0300,RNTACOB,Média,Melhoria,CC,MELHORIAS,[SVR] Criação de novo motivo de encerramento de conta para não reporte ao SVR,"h1. Contexto

Criação de um *novo motivo de encerramento de conta* que a partir da sua configuração indicará que contas encerradas por este motivo não serão consideradas pelos serviços que fornecem as informações ao SVR.

*Observação*:

o SVR reporta contas encerradas com crédito e valores devolvidos. Portanto este novo motivo será utilizado dentro deste contexto de um conta ser encerrada tendo saldo credor, 
h2. Alterações
 # Alteração no cadastro de motivos de encerramento de conta para inclusão de um novo indicador para sinalizar o não envio de contas ao SVR (IND_ENVIA_SVR). Valor default: Sim, envia.
 # Criação de novo motivo sistêmico, por exemplo ""SOLICITAÇÃO COMPLIANCE"" com IND_ENVIA_SVR = Não.
 # Apresentação deste novo motivo no combo de Motivo Encerramento da funcionalidade ""Desativação de Conta Corrente"".
 # Contas encerradas por motivos de encerramento que tenham o indicador de envio ao SVR setados como Não deverão ser encerradas utilizando um novo histórico para que possam ser contabilizadas de forma separada. Considerar como base para a operação o histórico 23 que é o utilizado no processo atual de encerramento de contas com crédito.
 # Alteração dos serviços _GET /v2/accounts/closedAccountsCreditBalance_ e _GET /v1/accounts/closedAccountsAmountsReturned_ para desconsiderar contas encerradas associadas a motivo marcado para não envio ao SVR (item 1).
 # Alteração no FGC para que estas contas não sejam reportadas. Á consulta aos dados do FGC pode ser realizada a partir do Informes ou utilizando o serviço  GET /v1/contas/fgc/303/posicoes-analitica-credores.

h2. Considerações
 # Contas encerradas com o novo motivo deverão ser passíveis de reativação conforme as regras atuais do sistema de Conta Corrente.
 # Clientes que possuam um passivo de contas encerradas e que não devem ser reportadas ao SVR deverão, após a liberação e instalação da versão do sistema com esta funcionalidade, solicitar via chamado um script para ajustar o passivo e desta forma entrar no novo fluxo sistêmico.

----
h2. Analise Técnica
h3. Backend
 * Criar campo ind_envia_svr na cc_motivo_encerramento, default 'S';
 * Criar motivo de encerramento na cc_motivo_encerramento com ind_envia_svr 'N' (Descrição a definir);
 ** O combo faz um findAll na cc_motivo_encerramento, então com apenas o insert ele já ficaria disponível para seleção;
 * Ao desativar, é chamada a sCcDesativaCc
 ** Verificar se o motivo tem o ind_envia_svr = 'N'
 *** Se 'N', o historico utilizado para o encerramento deverá ser o historico X
 **** Histórico X: Será um histórico interno semelhante ao 23 (Deve ficar com o id < 99)
 * GET /v2/accounts/closedAccountsCreditBalance
 ** CcDesativacaoCcHistoricoRepository.findClosedAccountsWithCreditAndWithSvrOriginAndBeforePeriod
 *** not exists (select 1 from cc_motivo_encerramento m where m.id_motivo_encerramento = hist.motivo_encerramento and m.ind_envia_svr = 'N')
 * GET /v1/accounts/closedAccountsAmountsReturned
 ** CcDesativaCcDevolucaoValorRepository.findByDataDevolucaoBetweenAndOrigemSvrNotNull
 *** not exists (select 1 from cc_motivo_encerramento m where m.id_motivo_encerramento = hist.motivo_encerramento and m.ind_envia_svr = 'N')
 * FGC: Nas views, desconsiderar contas desativadas com ind_envia_svr = 'N'
 ** vcc_fgc_analitico_303. Utilizada pela api.
 ** vcc_fgc_analitico_alternativa. Utilizada por cliente que fazem a geração dos dados via banco.

h3. Adicionais
 * Não será necessário alterar o processo de ativação de contas;
 * Desenvolver script para alterar desativações que foram previamente feitas e precisam ser atualizadas com o novo motivo;
  ",2022-12-05T17:10:01.000-0300,Fechado,cc,384,48,96
CC-3359,lf,2022-09-27T10:07:06.681-0300,11608,In Technical Analysis,jira,status,11607,2022-08-08T17:59:40.000-0300,H6LOC,Baixa,Melhoria,CC,MELHORIAS,[497783] - Consultas com alto consumo de PGA identificadas.,"Foi analisado pelos DBA's do C6, que a Consulta abaixo está ocasionando um alto consumo de PGA.

select id_pessoa, nome_resumido, inscricao

from bc_pessoa

ORDER BY nome_resumido

 

Segue análise abaixo do DBA da Matera Marco Pontes.

 

""Este problema é causado por algum componente de tela ( ex. Combo Box / Lov ).
Ao acionar o componente gera-se uma query sem filtros nas tabelas de cliente.
Isso ocasiona um result set muito grande o que onera a PGA e causa lentidão.
 
Em termos de ajuste de consulta não há o que ser feito.
Precisa-se identificar a tela/componente de origem e impedir que ele se comporte desta maneira.
Seguno o ASH do cliente, o modulo de origem é o EMP e o Conta Corrente.""
 
Identificamos 3 telas que geram essa consulta, segue elas.
 
rlextbloqdesbjud.gsx, rlextcompbloqdesbjud.gsx, rlextint.gsx
 
Identificamos o recurso _*LT_PESSOAS*_ , criado através da pendência 375018, visando melhorar esse tipo de Consulta, mas só foi criado esse recurso para a tela de Cadastro de Conta Corrente (cdccconcor.gsx).

----
h3. Analise
* Lógica do LT_PESSOAS na tela de cadastro de contas:
{code:java}
        on createComplete
        	var sIndListaTodasPessoas:String
            sqlImmediate("" SELECT ind_ativo
            			   into	  :sIndListaTodasPessoas
            			   from	  cc_recurso
            			   where  cod_recurso = 'LT_PESSOAS' "")
			
			if sIndListaTodasPessoas == 'N'
           		pbPessoas.populate = false
     		end			   
    	end
{code}
Se desativado, ao clicar no botão ""Pessoas"" na tela, não são carregadas as linhas:
 !screenshot-1.png|thumbnail! 

* rlextbloqdesbjud e rlextcompbloqdesbjud: telas do baml
* rlextint.gsx: Campos: pbLovTitularSearch, cmbTITULAR
 !screenshot-3.png|thumbnail! 
* Outras telas que encontrei com consulta full na bc_pessoa
 !screenshot-2.png|thumbnail!
* cdblqchq.gsx
 !screenshot-4.png|thumbnail! 
* cdcondev.gsx
 !screenshot-5.png|thumbnail! 
* cddevchq.gsx
 !screenshot-6.png|thumbnail! 
* cssaldos.gsx
 !screenshot-7.png|thumbnail! 
* rlcotitular.gsx
 !screenshot-8.png|thumbnail! 
* rlratpes.gsx
 !screenshot-9.png|thumbnail! 

 ",2022-10-31T18:06:49.000-0300,Fechado,is,192,24,48
CC-3321,lf,2022-09-26T11:03:56.753-0300,11608,In Technical Analysis,jira,status,11607,2022-07-21T22:04:13.000-0300,NGACOB,Média,Performance,CC,MELHORIAS,Cadastro tarifa diferenciada por conta - demora consulta,"h1. Continuidade ticket #494411 -
h1. Contexto

Ao entrar no menu Tarifa > Tarifas Diferenc. por Conta, para realizar o cadastro de tarifas ocorria o seguinte erro:
 !image-2022-09-02-09-29-00-591.png|thumbnail!

Cliente foi orientado a realizar o procedimento do artigo abaixo como forma de paliativo:
 Artigo: [https://suporte.matera.com/support/solutions/articles/35000090874-erro-interno-do-oracle-java-sql-sqlexception-java-lang-outofmemoryerror]

Após alteração do parâmetro max-heap-siz do arquivo mig-sdndf-dev.jnlp de 256 para 1024 no servidor não ocorre o erro porém ainda tem apresentado lentidão na rotina. Durante o uso da tela, no momento que vai realizar um novo cadastro, tem demorado cerca de 8 minutos para passar do campo de agência para o campo de conta.

AWR em anexo:

 
h1. Análise

A tela de tarifas diferenciada por conta é restificada e possui uma validação ao fazer o TAB de cada campo em tela.

Necessário refatorar a tela para definir quando a validação deve ocorrer. Considerar por exemplo fazer a validação somente no momento de salvar as informações.

----
h4. Validação agencia
* Em vez dê:
** restClient.get('cc_cdtardif/query/byAgencia', {:agencia => frmTARDIF.tblISNTAR.AGENCIA.value})
* Fazer:
** select na bc_agencia

h4. Método BuscaCc()
* Em vez dê
** restClient.getForListAndBindValues('pessoa_cc/query/byAgenciaAndNumConta', {:agencia => frmTARDIF.tblISNTAR.AGENCIA.value, :numConta => frmTARDIF.tblISNTAR.NUM_CONTA.value}, [""frmTARDIF.tblISNTAR.CC"", ""frmTARDIF.tblISNTAR.PRIMEIRO_TITULAR"", ""frmTARDIF.tblISNTAR.NOME_TITULAR""])
* Fazer:
** select cc.id_cc, cc.primeiro_titular, pes.nome from bc_pessoa pes, cc_cc cc where cc.agencia = ? and cc.num_conta = ? and pes.id_pessoa = cc.primeiro_titular

h4. BuscaVlrTarifa()
* Em vez dê:
** restClient.post('tasks/tardif_busca_vlr_tarifa'
* Fazer:
** Buscar valor da tarifa direto no banco

----
h4. Alternativa
* Colocar um if frmTARDIF.tblISNTAR.filterState != __SDTBL_STATE_QUERY no campo de agencia
** Fiz um teste rápido e no modo filtro ele parou de fazer as requisições rest, teria que validar de forma mais completa se não teria nenhum problema

----
Testei no ambiente de alto volume, e existem outros pontos de lentidão na tela:
* Campo ""Agência""
* Botão ""Contas""

Imagino que será necessário a refatoração dos serviços para selects no banco, pois mesmo corrigindo o campo agência, outras lentidões serão apresentadas na tela.",2022-10-22T19:30:55.000-0300,Fechado,is,152,19,38
CC-3677,vp,2022-11-14T09:35:05.307-0300,11608,In Technical Analysis,jira,status,11607,2022-11-01T18:41:48.000-0300,H6LOC,Média,Performance,CC,CORRECAO-ERROS,Time Out Geração de Extrato,"Segundo reportado pelo C6, eventualmente eles precisam gerar um extrato de mais de 40k lançamentos para conciliação da corretora. O mesmo é realizado por meio da API ""/v1/contas/\{agencia}/\{conta}/extrato"".

Segundo reportado pelo C6, essa API frequentemente sofre timeout nesses cenários (O timeout do sistema externo foi alterado de 5 para 55segs porém não foi efetivo).

 

Anexo: ASH e AWR enviados pelo C6 do range onde ocorreu o cenário reportado.",2022-12-05T17:10:17.000-0300,Fechado,is,120,15,30
CC-3278,ofe,2022-09-15T10:22:35.448-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-07-12T12:30:13.000-0300,MOJP,Média,Falha,CC,CORRECAO-ERROS,"Totalizador ""Total Disponível para Saque"" deixou de ser exibido nos extratos","h1. *Contexto*

Foi verificado que após atualização da versão, o totalizador ""Total Disponível para Saque"" deixou de ser exibido nos relatórios de extrato.

ANTES:
    !image-2022-07-12-12-22-43-876.png!

DEPOIS:
 !image-2022-07-12-12-23-01-394.png!

Em análise, foi identificado que o cenário passou a ocorrer devido ao trecho de código abaixo do objeto pccExtratoConsolidado;
 !image-2022-07-12-12-19-30-820.png!

Isso ocorre visto o campo SITUACAO_CG poder ser nulo na tabela CC_TAXA_HISTORICO, fazendo com que seja ignorado na validação.
h1. *Passos pra reproduzir*

Anexo [^CC-3278 - Evidências da reprodução - v2.pdf]
h1. *Resultado atual*

O ""TOTAL DISPONÍVEL PARA SAQUE"" não é exibido nos relatórios de Extrato Interno e Extrato Periódico caso o contrato de limite de crédito não tenha sido aprovado.
 Conforme Pendência [^DocumentoVisaoPend151076.pdf]

 

^=============================================^

*Sugestão de solução:*

Reverter a alteração feita no card CC-2660 (inclusão da validação da situacao_cg nas consultas da cc_taxa_historico)

Mudar a construção do campo valor para validar a situação CG como no exemplo abaixo (baseado na consulta ""SALDO DISPONIVEL PARA SAQUE"":
{code:sql}
Consulta atual:

case
  when lext.cod_limite = 'D' then
    vse.saldo + decode(greatest(tx.data_venc_contrato, vDataFinal),
                                tx.data_venc_contrato,
                        nvl( tx.limite_credito, 0 ) + nvl( inv.saldo_aplicacao, 0 ),
                        nvl( inv.saldo_aplicacao, 0 ))
             end valor,

alterar para:

case
  when situacao_cg = 'E' then -- limite encerrado
     vse.saldo + nvl( inv.saldo_aplicacao, 0 )
  else -- comportamento atual
    vse.saldo + decode(greatest(tx.data_venc_contrato, vDataFinal),
                                tx.data_venc_contrato,
                        nvl( tx.limite_credito, 0 ) + nvl( inv.saldo_aplicacao, 0 ),
                        nvl( inv.saldo_aplicacao, 0 ))
end valor,


 {code}",2022-10-10T18:26:01.000-0300,Resolved (Pilot),is,144,18,36
CC-3799,lh,2022-12-01T09:52:52.199-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-11-29T20:27:51.000-0300,MOJP,Média,Falha,CC,CORRECAO-ERROS,Tarifa não leva em conta o saldo do autoinves,"h1. Contexto

Recentemente o time de produção BOFA questionou o motivo das tarifas advindas do infopoint não serem debitadas do saldo AI, uma vez que a conta não possua saldo em conta corrente. 
  
 Seguem um exemplo em anexo para ajudar na análise.
  
|*Descrição do Cenário*|*Resultado Esperado*|*Resultado Encontrado*|*Workaround?*|
|Débito de tarifas|_Conta deve ser debitada automaticamente uma vez que tenha saldo disponivel, isso inclui AI_|_Conta não é debitada uma vez que tenha AI disponivel_|_Não existe_|

 

Para tratar o cenário acima é esperado que o saldo investido seja considerado como sendo disponível, portanto no momento da execução do lançamento também deverá ser cobrada a tarifa. Com isso a conta ficará com saldo negativo e durante a virada será realizado o resgate do valor investido para cobertura do saldo negativo. Conforme comportamento atual do sistema para resgate.

 

*Cenários de testes que devem ser feitos (levantados na estimativa de horas):*
 * Fazer lançamento com histórico que gere tarifa para uma conta comum que tenha saldo de investimento aplicado(realizar lançamento crédito para ver se cobra tarifa)
 * Fazer um lançamento com histórico que gere tarifa para uma conta garantida que tenha saldo de investimento aplicado(realizar lançamento crédito para ver se cobra tarifa)
 * Fazer um lançamento com histórico que gere tarifa para conta comum e garantida onde existia investimento aplicado e foi recolhido(realizar lançamento crédito para ver se cobra tarifa)

 ",2022-12-19T09:46:25.000-0300,Resolved (Pilot),is,96,12,24
TS-608,ra,2022-12-15T15:18:32.729-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-12-13T11:54:43.000-0300,IEIPTVSXN,Baixa,Falha,TS,CORRECAO-ERROS,Alterar tipo do campo numeroContaDoc na api v2/liquidacoes-doc-ted,"h1. *Contexto*

O campo numeroContaDoc da api sdtes/api/v2/liquidacoes-doc-ted atualmente está definido com o tipo int64 que aceita valores que estejam dentro do intervalo  -9223372036854775808 e 9223372036854775807.
  
 !https://attachment.freshdesk.com/inline/attachment?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MzUxODM3NjczNjQsImRvbWFpbiI6Im1hdGVyYS5mcmVzaGRlc2suY29tIiwiYWNjb3VudF9pZCI6Nzc3NzQ5fQ.sPgZo3IEdScc_VV3nDTshl17Zz7CBva8Qy37WmrjoRA!
  
 No entanto, a quantidade máxima de caracteres aceitos é 19, porém temos contas do tipo pagamento que podem ter 20 caracteres. 
  
 Quando é informado um numero de conta com 20 caracteres ou algum valor fora do intervalo, o sistema apresenta a mensagem abaixo:
  
 JSON parse error: Numeric value (92233720368547758071) out of range of long (-9223372036854775808 - 9223372036854775807); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Numeric value (92233720368547758071) out of range of long (-9223372036854775808 - 9223372036854775807)
  

{   ""code"" : ""MTR-002"",   ""message"" : ""O campo numeroContaDoc do JSON enviado tem um formato inv�lido. "",   ""field"" : ""numeroContaDoc"" }

 
h1. *Passo pra reproduzir*

Realizar uma chamada da api sdtes/api/v2/liquidacoes-doc-ted passando um valor no campo numeroContaDoc que seja maior que 20 caracteres ou esteja fora do intervalo -9223372036854775808 _ 9223372036854775807;
  
h1. *Resultado atual*

Sistema apresenta erro
  
 JSON parse error: Numeric value (92233720368547758071) out of range of long (-9223372036854775808 - 9223372036854775807); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Numeric value (92233720368547758071) out of range of long (-9223372036854775808 - 9223372036854775807)
  

{   ""code"" : ""MTR-002"",   ""message"" : ""O campo numeroContaDoc do JSON enviado tem um formato inv�lido. "",   ""field"" : ""numeroContaDoc"" }

 
h1. *Resultado esperado*

Sistema deveria gerar a liquidação, pois o campo num_cc_doc.ts_liqdc_doc que recebe este valor, é do tipo number(20);
  
h1. *Solução Técnica*

*{color:#de350b}1.{color}* Ajustar arquivo *api_liquidacao_rest_v1.json*
 * Na parte +*LiquidacaoDocTedRequest*+ → +*numeroContaDoc*+, alterar para:

{code:java}
numeroContaDoc:
  maximum: 99999999999999999999
  description: 'Número da conta corrente (incluindo digito verificador) para onde será   enviado o DOC/TED. Caso o dígito verificador seja alfa-numérico, substituí-lo por zero. Obrigatório para Docs/teds C, D e E e PAG0143'
  type: number{code}
 

 

{color:#de350b}*2.*{color} Ajustar classe *STsIntegraLiqdcDoc.java*
 * Ajustar tipo do +*declareParameter*+ PARAM_PNUMCCDOC para +*NUMERIC*+:

{code:java}
declareParameter(new SqlParameter(PARAM_PNUMCCDOC, Types.NUMERIC));
{code}
  
 * Ajustar no método +*Entrada*+ o tipo da variável +*pNumCcDoc*+ para +*BigDecimal*+:

{code:java}
private BigDecimal pNumCcDoc ;
{code}
  
 * Ajustar os métodos +{color:#172b4d}*STsIntegraLiqdcDoc.Entrada*{color}+ para suportar o novo tipo da variável +*pNumCcDoc*+:

{code:java}
public STsIntegraLiqdcDoc.Entrada pNumCcDoc(BigDecimal pNumCcDoc) {
     this.pNumCcDoc = pNumCcDoc;
     return this;
}


public STsIntegraLiqdcDoc.Entrada pNumCcDoc(Long pNumCcDoc) {
     this.pNumCcDoc = pNumCcDoc == null ? null :BigDecimal.valueOf(pNumCcDoc);
     return this;
}{code}
 

 

{color:#de350b}*3.*{color} Na classe *InsercaoLiquidacaoDocBusiness* ajustar o método *converteParaLiquidacaoDocTedRequestDTO*
{code:java}
liquidacaoDocTedRequestDTO.setNumeroContaDoc(dadosLiquidacaoDocRequest.getNumeroContaDoc() == null ? null : dadosLiquidacaoDocRequest.getNumeroContaDoc());{code}
 

{color:#de350b}*4.*{color} Ajustar classe *DadosLiquidacaoDocRequest*
 * Mudar o tipo da variável +*numeroContaDoc*+:

{code:java}
private BigDecimal numeroContaDoc;{code}
 
 * Mudar o tipo de retorno e parâmetros dos métodos +*get*+ e +*set*+ referente a variável +*numeroContaDoc*+:

{code:java}
public BigDecimal getNumeroContaDoc() {
     return numeroContaDoc;
}

public void setNumeroContaDoc(BigDecimal numeroContaDoc) {
     this.numeroContaDoc = numeroContaDoc;
}{code}
 

{color:#de350b}*5.*{color} Ajustar proc *sTsInsAtuLiqdcDoc*
 * Modificar a condição do +*elseif*+ para permitir contas de até +*20 dígitos*+:
 ** Linha 1136

{code:java}
elsif vTipoCcCredito <> pTsConstantes.cntsTipoContaPagamentoSPB and length(pNumCcDoc) > 20 then
      --
      -- TS-1738 Tamanho máximo do numero da conta creditada não pode ser maior que 20  posições.
      --
      pSdMsg.Erro( pisCodSisCodMsg => 'TS-1738',
                   pisVariaveis  => null);
      --
end if;

{code}
 

 

{color:#de350b}*6.*{color} Ajustar classe de teste *LiquidacaoDocTedRequestBuilder*
 *  Modificar o valor do método +*set*+ da variável +*numeroContaDoc*+:

{code:java}
this.dto.setNumeroContaDoc(BigDecimal.ONE); {code}
 

!TS-608.jpeg|width=1593,height=1231!

 

 
h1. *Versão*

*12.0.33*",2022-12-26T16:21:47.000-0300,Resolved (Pilot),is,64,8,16
CC-3825,lh,2022-12-15T15:42:06.066-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-12-12T18:51:33.000-0300,NAACOB,Média,Falha,CC,CORRECAO-ERROS,Correção no objeto sCcAprovaDoc,"Prezados,

 

Está ocorrendo o erro abaixo ao tentar 'Aprovar o Evento' no sistema Conta Corrente:

SD-115: Erro inesperado no processamento do objeto sCcAprovaDoc:

PL/SQL: could not find program unit being called

 

Pois dentro do objeto *sCcAprovaDoc* está sendo chamado o objeto pCvLock que é do sistema de convênios.



Correção:

*na linha onde contem o objeto pCvLock  mudar para pCcLock*

Pois, está sendo usado um objeto do convenios no objeto do Conta

 
Linha que contém o erro:
[https://stash.matera.com/projects/UCC/repos/conta-corrente/browse/backend/src/oracle/procedures/sCcAprovaDoc.sql?at=refs%2Ftags%2Fv12.11.10#24]
 
 ",2022-12-26T16:22:11.000-0300,Resolved (Pilot),is,64,8,16
CC-3826,dj,2022-12-19T16:03:07.587-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-12-13T09:59:02.000-0300,MOJP,Média,Falha,CC,CORRECAO-ERROS,F510234 - Tela de aprovação de histórico incompleta,"Conforme reportado pelo Cliente JP Morgan, após realizar alterações de histórico de estorno na tela de históricos (FRMHISTORIC) ao acessar a tela de detalhes do Evento de aprovação de alteração do histórico, as informações pertinentes ao campo ""Histórico de estorno/devolução"" não é exibido nas abas ""Futuro"" e ""Atual"".

h1.*Solução Técnica*

Alterar a classe HistoricoAprovacao.java, adicionar a coluna HIST_ESTORNO_E:

 private String histEstornoE;
 !screenshot-1.png|thumbnail! 

    @Id
    @Column(name = ""HIST_ESTORNO_E"")
    @JsonProperty(""HIST_ESTORNO_E"")
    @Size(min = 0, max = 143)
    private String histEstornoE;
 !screenshot-2.png|thumbnail! 

OBS: no .gsx quando a variavel que representa a tabela tiver a tag  ""= RTable"" significa que essa tabela faz referencia a um objeto java, e mesmo o .gsx referenciando corretamente as colunas da tabela, a classe java também deve ser alterada. é possível encontrar a classe java pelo .gsx encontrando o parametro ""resource: "" e pelo nome do serviço (nesse caso é ""historico_aprovacao"") pesquisar as classes java.

 !screenshot-3.png|thumbnail! 
 !screenshot-4.png|thumbnail!  


",2022-12-29T17:27:36.000-0300,Resolved (Pilot),is,72,9,18
TS-615,jr,2022-12-26T10:18:23.973-0300,11608,In Technical Analysis,jira,status,11607,2022-12-23T10:43:25.000-0300,NAACOB,Média,Tarefa,TS,ADMINISTRATIVA,[Integração JUD] Transferência Judicial realizando desbloqueio e debito judicial,Atualizar documentação de API PL,2022-12-27T10:15:54.000-0300,Fechado,jr,16,2,4
TS-562,al,2022-09-28T17:36:38.236-0300,11608,In Technical Analysis,jira,status,11607,2022-09-28T17:35:56.000-0300,CSD,Baixa,Dívida Técnica,TS,CORRECAO-ERROS,Ajuste na versão do template GSX 3.40 para 4.11,"Ajuste na versão do template GSX 3.40 para 4.11 no connector-soap
 
 
 
 ",2022-10-10T18:42:44.000-0300,Fechado,ula,72,9,18
TS-554,gr,2022-09-30T09:46:59.922-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-09-12T12:23:54.000-0300,NAOCB,Média,Falha,TS,CORRECAO-ERROS,Não é possível desativar a contabilização assíncrona do TES.,"h1. *Contexto*

Ao realizar a virada de dia com o processo de contabilização do Remunerador ocorre uma duplicidade da contabilidade pois o Liquidação Financeira não permite desabilitar sua contabilidade.
h1. *Passo pra reproduzir*

-Configurar a base para utilização do remunerador
 -Configurar a contabilidade do remunerador via remunerador.properties com a tag _com.matera.banco.remunerator.taxliqdc.doAccountin = true_
 -Configurar a contabilidade do TES para ser feita em D-1(ts_config.NUM_DIAS_RETROATIVIDADE_CONTAB = 1)
- Cadastrar um Lançamento Contábil no Menu Cadastro > Lançamentos Contábeis.
- Cadastrar uma Conta Contábil para o lançamento criado no Menu Cadastro > Contas Contábeis.
- Vincular o histórico que será usado na liquidação ao lançamento Contábil no Menu Cadastro > Históricos. No campo Lançamento Contábil, informe o número do lançamento (criado em Lançamentos Contábeis)
- no menu Liquidação > Cadastro, fazer uma liquidação com o histórico configurado acima
 - Virar o dia do Liquidação Financeira.
 - Virar dia no remunerador (ocorre junto com a virada do conta corrente)
 - Realizar uma nova virada de dia do TES
- no menu Relatórios > Relatórios Contábeis > Sintético ou Analítico, o valor da liquidação contabilizada estará duplicado

h1. *Resultado atual*

A contabilidade acaba duplicada em D-2 pois o remunerador já contabilizou as informações e o TES faz o processo novamente.
h1. *Resultado esperado*

Deve ser possível desabilitar a contabilização do TES para evitar a duplicidade.

 
h1. *Observação*

*Anteriormente na contabilidade síncrona era possível desativar a contabilidade do TES, algo que não foi disponibilizado na função de contabilidade assíncrona.

*Foi levantado junto ao cliente a possibilidade de desabilitarmos a contabilidade do remunerador, porém chegamos a dois cenários inválidos.
 1- Desabilitar a contabilidade do Remunerador e alterar o TES para contabilizar em D-2 impactaria em toda a contabilidade da Digio e da integração do mesmo com o sistema de gestão contábil Terceiro.
 2- Desabilitar a contabilidade do Remunerador e manter o TES para contabilizar em D-1 causa uma perda de algumas liquidações que não são contabilizadas no período de virada de dia pois o remunerador possui lançamentos em D-1, que foi o motivo inicial da solicitação de uma contabilidade pelo próprio remunerador.

Versão 13.3.0

 

=============================================

*Proposta de solução:*

No card TS-67, foi disponibilizada a contabilização assíncrona sem a opção de manter o comportamento anterior, por isso a Digio não está conseguindo desabilitar o processo.

A solução para este caso é voltar o comportamento anterior e implementar a contabilização assíncrona de forma configurável, ou seja, deve ser retornado o processo de contabilização e integração com o Gestão no escalonamento de processos quando recurso estiver desabilitado, e a contabilização assíncrona deve ser executada somente quando o recurso estiver ativo. ",2022-10-10T18:44:05.000-0300,Resolved (Pilot),ula,56,7,14
CC-2854,ra,2022-10-06T13:48:10.911-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-03-28T14:26:12.000-0300,RNTACOB,Média,Falha,CC,CORRECAO-ERROS,[CADOC 3050] Taxa média sendo calculada com valor errado,"Solução de contorno: ajuste manual com valores registrados na cc_cadoc_3050_agrupado

 

Problema inserido pelo PR: [https://stash.matera.com/projects/UCC/repos/conta-corrente/commits/96480e86be25e1a371621a1718db7b222e87af58#backend/src/oracle/packages/pCcCadoc3050Body.sql,|https://stash.matera.com/projects/UCC/repos/conta-corrente/commits/96480e86be25e1a371621a1718db7b222e87af58#backend/src/oracle/packages/pCcCadoc3050Body.sql] pendencia [https://cas2.matera.com/project/chamado/chamado.xhtml?id=339074]

 

Avaliar se o valor da taxa media deve ser calculado a partir das novas concessoes ou do saldo.

Se a partir do saldo da carteira, registrar no campo novas_concessoes_base_calc o valor do saldo_carteira

 

> Avaliar se o valor da taxa media deve ser calculado a partir das novas concessoes ou do saldo.
h2. *SOLUÇÃO A SER APLICADA:*
 # Desfazer este commit:  [https://stash.matera.com/projects/UCC/repos/conta-corrente/commits/96480e86be25e1a371621a1718db7b222e87af58#backend/src/oracle/packages/pCcCadoc3050Body.sql,|https://stash.matera.com/projects/UCC/repos/conta-corrente/commits/96480e86be25e1a371621a1718db7b222e87af58#backend/src/oracle/packages/pCcCadoc3050Body.sql] 

 

 

 

 ",2022-10-22T19:30:24.000-0300,Resolved (Pilot),ula,88,11,22
CC-3618,al,2022-10-21T13:49:00.284-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-10-19T12:05:14.000-0300,H6LOC,Média,Falha,CC,CORRECAO-ERROS,F504413 - Erro MTR-003 na api releaseHolds,"Conforme reportado nos chamados 504413, 504699 e 504608, identificamos que há retornos MTR-003 ao ser realizada uma chamada da API releaseHolds via Mip para o Conta.

Identificamos que a causa desses erros ocorre por conta da inexistência do correlation_id enviado pelo MIP. Entretanto, realizando testes locais, reproduzimos o erro quando há no body a existência da TAG releaseDate no body da API.

 

Realizamos testes em base local com os bodys a seguir:

 

*--Sem erros:*
 {
 ""correlationId"": ""74da535d-7e42-4030-be44-72d69890e153"",
 ""requestSubsystem"": ""MIP-Dispute"",
 ""requestedAmount"": 100,
 ""entry"": 

{ ""operationCode"": 3359, ""document"": 123456, ""operationComplement"": ""E23114447202112231616eva85LIrCBY"", ""operationReference"": ""fdfefdce-6055-46df-94ea-db4d36bbfb47"" }

}
  
 *--Com erro:*
  {   ""correlationId"" : ""56980968-2aab-4977-b4da-367768e1eaff"",
      ""requestSubsystem"" : ""MIP-Dispute"",   
      ""requestedAmount"" : 2890.00,   
      ""entry"" : 

{""operationCode"" : 3359,                       ""operationComplement"" : ""Bloqueio MED"",                       ""operationReference"" : ""E60746948202209271621A592091QshQ""   }

,   
 counterparty"" : 

{""branch"" : 592,                             ""account"" : 410195.0,                             ""taxId"" : 69298785887,                             ""name"" : ""CELICE ALCANTARA DELEBOSSE"",                             ""ispb"" : ""31872495""   }

,   
     ""releaseDate"" : ""2022-02-24"" }

 

No log anexo, o erro é apresentado na linha 1958.
 * *No card tratar também o erro do card* *CC-3417*",2022-10-31T15:25:06.000-0300,Resolved (Pilot),ula,56,7,14
CC-3431,gr,2022-10-10T17:08:37.669-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-08-25T17:36:53.000-0300,ROSO,Média,Falha,CC,CORRECAO-ERROS,[498961] - Erro MTR-003 na chamada da API /api/v1/contas/{agencia}/{conta}/extrato,"Após análise, identificamos que caso seja informado o parâmetro *buscarDadosContraParte* como True, e caso a coluna num_conta_origem da tabela cc_lanc_detalhes_depositante seja nula, retorna o erro MTR-003 na API de Extrato.

 

Na API v2/lancamentos, é possível informar a numContaDepositante como nula no Body, fazendo com que grave nula a coluna num_conta_origem na tabela cc_lanc_detalhes_depositante.
h1. Análise Técnica

Ajustar DTO que busca as informações:
 * CcLancDetalhesDepositanteMapper
 método toDadosDepositanteDTO => incluir validação quando a informação getNumContaOrigem() retornar null.
{code:java}
.numContaDepositante(model.getNumContaOrigem() == null ? null : new BigDecimal(model.getNumContaOrigem()))
{code}",2022-10-31T15:25:32.000-0300,Resolved (Pilot),ula,120,15,30
CC-3461,jr,2022-10-25T09:41:13.719-0300,11608,In Technical Analysis,jira,status,11607,2022-09-02T09:03:09.000-0300,CSD,Baixa,Dívida Técnica,CC,CORRECAO-ERROS,Remover obrigatoriedades de informações para conta do tipo pagamento,"h1. Contexto

Conforme legislação RESOLUÇÃO BCB Nº 96, DE 19 DE MAIO DE 2021 ([https://www.bcb.gov.br/estabilidadefinanceira/exibenormativo?tipo=Resolu%C3%A7%C3%A3o%20BCB&numero=96)] , que revogou a BCB 3680,  as informações necessárias para a abertura de conta pagamento são os dados *obrigatórios: nome e CPF/CNPJ*

 

Porém o sistema está exigindo o preenchimento de outros campos.

Tratar pCcContaPagamentoBody.lValidaDadosPessoaFisica  e pCcContaPagamentoBody.lValidaDadosPessoaJuridica

 ",2022-11-07T17:59:45.000-0300,Fechado,ula,72,9,18
CC-3629,rr,2022-10-26T09:43:19.147-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-10-21T13:58:52.000-0300,RNTACOB,Baixa,Falha,CC,CORRECAO-ERROS,F503467 - Encargos gerados após encerramento da conta,"Cliente Tribanco reportou o incidente 500855 onde mesmo após o encerramento de contas, identificou a geração de encargos.

Analisamos o caso e reproduzimos um cenário onde, mesmo após o encerramento, os encargos seguem sendo gerados. Nessa analise, percebemos que o cursor de cálculo de encargos não faz distinção de contas por situacao_cc, ou seja, mesmo que a conta esteja desativada, haverá cálculo de encargos para a mesma.

O arquivo docx anexo, possui as evidências do cenário que foi reproduzido.",2022-11-14T16:20:59.000-0300,Resolved (Pilot),ula,104,13,26
CC-2986,gr,2022-10-27T16:00:02.174-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-04-29T16:34:02.000-0300,ARCL,Média,Falha,CC,CORRECAO-ERROS,f489876 - Interface para o contábil do dia 27/04 não Sensibilizou,"A Claro reportou que o movimento contábil do dia 27/04  não foi integrado ao Gestão Contábil. Em análise, foi identificado que o movimento contábil havia sido gerado, porém estava incorreto. 
 Foi executado o processo de recontabilização via front porém não foi efetivo. Visto isso, foi executada a proc sCcLancamentosContabeis para a data em questão e realizada a integração contábil via front do Conta Corrente.

 

Foi enviada consulta na SD_LOG e foi identificado o erro conforme imagem abaixo (log em anexo);
 !screenshot-1.png|width=392,height=245,thumbnail!

 

Foi verificado também que essa validação é feita pelo gestão contábil através da procedure  finpac.pCtValidaLancEmLote.pCtValidaLancEmLote

!screenshot-2.png|width=424,height=250,thumbnail!

Com isso, verificamos que o job de contabilização foi agendado 10 vezes e sempre parando nessa validação e isso fez com que a contabilização fosse realizada várias vezes sem que fosse integrada ao gestão contábil.

!screenshot-3.png|width=583,height=134,thumbnail!

Com isso verificamos que se o usuário que está realizando a virada de dia no Conta Corrente não tenha permissões para realizar lançamentos no Gestão Contábil, será realizada a virada de dia normalmente, serão geradas as informações para contabilização no conta corrente porém não serão integradas ao gestão contábil e nem ocorrerá mensagens de erro ou alerta.
h1. Passo a Passo da Reprodução

*Pré-requisitos:*
 aplicar os objetos na base:
 [https://stash.matera.com/projects/UCC/repos/conta-corrente/browse/backend/src/oracle/custom/sem-manutencao/petra/vcc_petra_integra_contabilidade.sql]

[https://stash.matera.com/projects/UCC/repos/conta-corrente/browse/backend/src/oracle/custom/sem-manutencao/petra/sCcPetraIntegraFinpac.sql]
 –
 update cc_configuracao
 set usa_contabilidade_sd = 'S';
 –
 update bc_rel_empresa_agencia
 set id_sub_sistema = 'SDCONTA2',
 id_filial_finpac = 225
 where id_sub_sistema = 'SDCONTA'; 
 –
 update bc_configuracao
 set ind_usa_sdcontab = 'S';
 –
 update ct_config_sis
 set ind_permite_contra_igual_conta = 'N'
 where cod_empresa = 45;
 –
 usuário utilizado não estar em select * from fn_config_usr;

–
 ativar processo assíncrono da contabilidade:
 update mtr_processamento_agendado set ind_ativo = 'S' where interface = 'GUARDA_SALDO_CONTAS_ASSINCRONO';
 update sd_escalonamento_proc set ind_ativo = 'S' where comando like '%AgendaProcesso%' and nome_janela_sis = 'FRMAD' and nome_sub_sis = 'SDCONTA2';
update cc_config_processo_assincrono set ind_ativo = 'S' 
where processo in('GUARDA_SALDO_CONTAS_ASSINCRONO',
'GERA_RATING',
'GERACAO_LANCAMENTOS_CONTABEIS',
'CALCULO_SALDOS_MEDIOS_ASSINC');
 –
 *Passo a Passo*:
 Cadastrar um roteiro contábil ou utilizar um existente em Contabilidade > Roteiro Contábil
 O roteiro utilizado deve ter contas contábeis vinculadas à ele, isso pode ser feito através do botão Lançamentos nessa mesma tela, informando uma conta débito e conta crédito.

Cadastrar uma conta.
 Realizar um lançamento de débito nesta conta.
 Virar dois dias.
 Contabilização assíncrona é disparada.

1. Verificar mensagem do processo GERACAO_LANCAMENTOS_CONTABEIS na vbc_acomp_processo ou na tela de Processo > Acompanhamento de processos do cadastro central.

2. Regerar movimento contabil na tela Contabilidade > regerar movimento contabil, marcar a opção integrar gestão.
h1. Resultado Atual:

Mensagem do processo na vbc_acomp_processo: Lançamentos gerados mas não integrados no Contábil
 Mensagem na tela de regeração do movimento: Falha na integração com Contabilidade MATERA.
h1. Resultado Esperado:

Mensagem do processo na vbc_acomp_processo: Erro ao integrar lancamentos no contabil: CT-2
 Mensagem na tela de regeração do movimento: Erro CT-2 é apresenado informando que usuário não possui permissão.
h1. Solução Técnica
 * Alterar sCcLancamentosContabeisAd:
 ** no exception da chamada da sCcAbreFinpac obter o erro retornado e concatenar na mensagem informada no lMonitoraProcesso, também alterar a mensagem atual para 'Erro ao integrar lancamentos no contabil: ' || vsErro
 ** Obs: o campo da mensagem na tabela permite apenas 50 caracteres, tomar cuidado para não estourar o limite. Fazer um substr do erro para obter o código do erro é uma opção.

 * Criar uma package nova, com parametro OUT de erro, que deve chamar a sCcIntegraFinPag, para ser utilizada na tela de regerar movimento contábil.

 * Alterar tela prmovctb.gsx para apresentar o erro, caso seja retornado no parâmetro OUT da nova package.
  ",2022-11-14T16:17:58.000-0300,Resolved (Pilot),ula,96,12,24
CC-3768,rr,2022-11-21T11:08:45.491-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-11-18T10:51:51.000-0300,MOJP,Média,Falha,CC,CORRECAO-ERROS,Acate Incondicional True - Processo Assíncrono - Corrigir Classe Java,"Informações retiradas dos Comentários do Apoio CSTEC-959:



A classe java acertaSaldoDisponivel.execute() repassa os parâmetros para a procedure sCcAcertaSaldoDisponivel.
A procedure recebeu um novo parâmetro (pisQuemChamou) do tipo varchar2 sendo default null. Porem esse novo parâmetro não foi criado e repassado na classe java. Mesmo sendo um parâmetro com default null, por não ser o ultimo parâmetro da procedure, o java entende que não está sendo passado todos os argumentos da procedure e não realiza a execução dela.

A sugestão de solução é:
1 - Criar o parâmetro na classe java para ser repassado para a procedure.

2 - Alterar a ordem da declaração dos parâmetros da procedure para que o parametro com default null seja o ultimo a ser informado
(necessário validar se alguma chamada da procedure é realizada sem referenciar os parâmetros, pois caso não seja referenciados a mudança na ordem pode causar erro pela alteração de posição)

Necessário validar todas as packages e procedures que receberam o novo parâmetro (pisQuemChamou) do card CC-3302 ([https://stash.matera.com/projects/UCC/repos/conta-corrente/pull-requests/9254/overview]) se possuem uma classe java que realiza sua chamada e criar o novo parâmetro para essa chamada.",2022-11-28T18:40:31.000-0300,Closed (Pilot),ula,48,6,12
CC-3666,al,2022-11-18T12:46:49.539-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-10-31T14:53:22.000-0300,H6LOC,Baixa,Falha,CC,CORRECAO-ERROS,Digitação de TED desconsiderando parâmetros de bloqueio da conta,"h1.*Contexto*
Foi verificado que a tela de digitação de DOC/TED (FRMCCDOC), quando utilizada uma conta com bloqueio, está olhando a situação da conta e não os parâmetros do bloqueio.

No cenário reportado pelo cliente, a conta está bloqueada por um motivo onde os débitos são permitidos, porém, ao digitar uma TED ocorre a validação abaixo.
 !image-2022-10-31-14-47-23-804.png|thumbnail! 

No exemplo acima, a conta está bloqueada com o motivo abaixo
 !image-2022-10-31-14-48-00-198.png|thumbnail! 

Foi verificado que o GSX da tela está validando o status da conta, e não os parâmetros do bloqueio
 !image-2022-10-31-14-54-20-327.png|thumbnail! 

h1.*Passos pra reproduzir*

{noformat}
1. Parametrizar um motivo de bloqueio de maneira que somente os créditos sejam bloqueados;
2. Bloquear uma conta utilizando o motivo parametrizado no passo 1;
3. Digitar uma TED para a conta corrente bloqueada no passo 2.
{noformat}

h1.*Resultado atual*

Anexo  [^Evidências da reprodução - CC-3666.pdf] 

h1.*Resultado esperado*

*Caso exista um bloqueio para a conta, checar os parâmetros do motivo.*

{noformat}
Blq. Talão → Indicador se as contas devem ser bloqueadas para entregas de talonário.

Blq. Débito → Indicador se as contas devem ser bloqueada para lançamentos de débito.

Blq. Crédito → Indicador se as contas devem ser bloqueadas para lançamentos de crédito.
{noformat}


Fonte: https://confluence.matera.com/display/SDCC/Bloqueio+e+Desbloqueio+de+Conta

h1.*Solução Técnica*
h1.*Versão*",2022-11-28T18:39:28.000-0300,Resolved (Pilot),ula,56,7,14
CC-3378,um,2022-11-08T08:48:04.423-0300,11608,In Technical Analysis,jira,status,11607,2022-08-12T14:21:52.000-0300,CSD,Baixa,Dívida Técnica,CC,CORRECAO-ERROS,Erro - Alteração de dados de transferência/portabilidade - POST,"h1.*Contexto*
Ao automatizar a API - POST de alteração de transferência/portabilidade identificamos dois pontos que necessitam de correção (todos com prioridade baixa) e em alinhamento com [~camsoc] serão abertos neste mesmo card.

*Item 1* - Na documentação Swagger informa que o campo ""numContaTransferencia"" recebe o valor máximo de 13 posições, entretanto, ao realizar os testes o valor máximo é de 20 posições. Assim, esta informação deve ser atualizada para maxLenght 20

*Item 2* -  Atualmente, existe uma verificação (apenas quando preenchemos juntos) os campos ""bancoTransferencia"" e ""ispbIfCreditada"". Esta verificação valida se a IF e o ISPB existem na tabela ""BC_BANCO"". Se existir validam se os dados de entrada estão corretos e segue o fluxo. 
 Porém, em análise junto com Cassiano Repache, não existe nenhum tratamento quando informamos uma IF inexistente e não informamos o ISPB, deixando cadastrar uma portabilidade para um banco inexistente.


h1.*Passos pra reproduzir*


{noformat}
1. Escolher uma conta do tipo salário que já possua uma Portabilidade de IF distinta cadastrada. 

2. No payload da API:
   - Informar um banco inexistente;
   - Deixar o ISPB nulo.

3. Informar uma conta com mais de 13 dígitos 
{noformat}


h1.*Resultado atual*

+*item 1*+
As APIs-GET que também necessitam de correção no tamanho do campo ""numContaTransferencia"" =>  maxLenght 20, são:

{noformat}
/v2/contas/conta-salario/dados-portabilidade
/v2/contas/conta-salario/{agencia}/{conta}/dados-portabilidade
{noformat}

API-POST:

{noformat}
/v2/contas/conta-salario/{agencia}/{conta}/dados-portabilidade
{noformat}
 
  

+*item 2*+

Anexo  [^CC-3378 - Evidências da reprodução.pdf] 

h1.*Resultado esperado*

+*item 1*+
* Correção na documentação Swagger quanto ao tamanho do campo ""numContaTransferencia"" para 20 dígitos.
* Ampliação da textbox da tela do Conta para exibir na totalidade uma conta até 20 dígitos.

+*item 2*+
* O Banco precisa ser validado se existe na tabela BC_PESSOA. Caso contrário, não realizar alteração da portabilidade.

h1.*Solução Técnica*
h1.*Versão*",2022-12-13T10:22:00.000-0300,Fechado,ula,192,24,48
CC-3074,vp,2022-11-29T09:47:08.172-0300,11608,In Technical Analysis,jira,status,11607,2022-05-13T17:33:42.000-0300,NCBA,Média,Performance,CC,CORRECAO-ERROS,F490110 - Lentidão no retorno da package de Monitoramento Judicial,"Após análise realizada em conjunto com o time de Sustentação do BMG e DBA da Matera, identificamos que o cursor da procedure sCcBloqueiaSaldoJUD estava apresentando um alto tempo de resposta quando da execução da package pCcMonitoramentoJudicial.Inicia.

Identificamos a procedure através do debug realizado e após isso, avaliamos a execução da consulta, conforme prints abaixo. 

Cursor atual:

!image-2022-05-13-16-56-52-594.png!

 

Cursor alterado:

!image-2022-05-13-16-57-20-542.png!

 

Anexo também o objeto que foi alterado e enviado.",2022-12-09T09:51:32.000-0300,Fechado,ula,64,8,16
CC-3686,al,2022-11-03T11:18:29.405-0300,11608,In Technical Analysis,jira,status,11607,2022-11-03T11:17:02.000-0300,CSD,Baixa,Dívida Técnica,CC,CORRECAO-ERROS,Replicação correção Ajuste tabela de controle de Status,Replicação correção Ajuste tabela de controle de Status para release/HotFix 13.7.1,2022-11-07T18:12:32.000-0300,Fechado,al,24,3,6
VOLSPB-16,gr,2022-10-10T14:35:06.547-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-08-26T13:07:36.000-0300,NGACOB,Média,Falha,VOLSPB,CORRECAO-ERROS,TES0017R1 e TES0037R1 sem tratamento de retorno ,"h1. *Contexto*

Foi enviado uma TES0017, porém retornou uma TES0017E, com erro o 'ETES0084 - Valor Lançamento Difere da Soma dos Valores Informados', e não cancelou a liquidação, e não fez o estorno na conta.

!image-2022-08-26-12-58-48-583.png!

!image-2022-08-26-12-58-59-669.png!

Na sIlRspTES0017, temos a validação: 
 * se houver o codigo de erro no campo CODERRO da il_parametro_evento, entra no IF, e não faz nada

!image-2022-08-26-12-59-18-519.png!
 * caso contrário (isto é, se o campo CODERRO for nulo), faz o tratamento:

!image-2022-08-26-12-59-46-396.png!

Analisando outros objetos  sIlRspxxx, temos tratamentos para esses casos, por ex, a sIlRspSTR0008:

[https://stash.matera.com/projects/VSPB/repos/voltaspb/browse/backend/src/oracle/procedures/SDTes_SDCtaPag/sIlRspSTR0008.sql#128]

 

No documento de visão, temos o cenário para tratamento de ERRO:

!image-2022-08-26-13-00-12-548.png!

 obs: o mesmo cenário ocorre com a mensagem TES0037.
  

Foi alinhado através do card de apoio CSTEC-444 que é um erro.
h1. *Passos pra reproduzir*

Reprodução anexa [^VOLSPB-16 - Evidências da Reprodução.pdf]
h1. *Resultado atual*

1. Para ambos os cenários das mensagens, o TES não está realizando o estorno do valor na conta corrente do cliente.

2. O TES não está inserindo as mensagens de retorno TES0017 e TES0037 com erro, na tela “Consulta de Retornos (R1)”.
h1. *Resultado esperado*

Caso retorne mensagem com erro, o valor debitado deverá ser estornado na conta do cliente.

As mensagens com erro devem ser exibidas na tela de “Consulta de Retornos (R1)”.
h1. *Solução Técnica*

Alterar as procedures sIlRspTES0017 e sIlRspTES0037 do repositório VoltaSPB respectivamente:
 * TES0017
 [https://stash.matera.com/projects/VSPB/repos/voltaspb/browse/backend/src/oracle/procedures/SDTes_SDCtaPag/sIlRspTES0017.sql]

 * TES0037
 [https://stash.matera.com/projects/VSPB/repos/voltaspb/browse/backend/src/oracle/procedures/SDTes_SDCtaPag/sIlRspTES0037.sql]

incluir o if abaixo após o end loop do cursor error_cursor:
{code:sql}
if vIndUsaSDTes = 'S' and pSistemaOrigemCd = 'SDTES' then
  --
  ipIL_Tes.TrataRetornoSPB(pinIdEventoSpb        => pEventoId,
                          pinSitLanc            => pSituacaoNm,
                          pisResultado          => vSitLancSTR,
                          pisIdOperOrigem1      => pOperacaoOrigemId1,
                          pisIdOperOrigem2      => pOperacaoOrigemId2,
                          pdtDtHoraResposta     => pDataHoraResposta,
                          pisCodDestinatario    => 'STR',
                          pisSistemaOrigem      => pSistemaOrigemCd,
                          pisCodMsg             => 'TES00XX', --aqui deve colocar o código da respectiva mensagem
                          pisNumCtrlStr         => vNumCtrlSTR,
                          pisNumCtrlPag         => null,
                          pinIdEventoSubstituto => null,
                          pisNumCtrlIf          => vNumCtrlIF );
  --
end if;
--
if vIndUsaSDTes = 'S' then
    --
    ipIL_Tes.RspMsgPgto( pinEventoId => pEventoId );
    --
end if;
{code}
h1. *Versão*

*12.0.2*",2022-10-31T14:40:53.000-0300,Resolved (Pilot),rMa,120,15,30
TS-582,al,2022-11-01T18:24:47.043-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-11-01T18:24:11.000-0300,ANPACOB,Média,Falha,TS,CORRECAO-ERROS,Lançamentos não integrado no Informes Cadoc 3290,"Complemento do card CC-3317
 ",2022-11-07T16:42:21.000-0300,Resolved (Pilot),rMa,32,4,8
CC-3694,dj,2022-11-08T09:08:46.707-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-11-03T17:00:11.000-0300,CSD,Baixa,Falha,CC,CORRECAO-ERROS,[506240] - Data de entrada na CC_LOTE_ENTRADA divergente da data de entrada da CC_LANCAMENTO.,"Caso a tela de *Lançamento de Estorno* seja aberta antes da tela de *Lançamento*, a coluna *data_entrada* da *cc_lote_entrada* fica menor do que a *data_entrada* da *cc_lancamento*, fazendo com que o *Lançamento de Estorno*, pareça ter ocorrido, antes do *Lançamento*.

 
h3. Solução Técnica
---- 
* Na FRMLANCESTORNO, ao realizar um estorno, ele está pegando a data/hora na variável sDataEntrada dá seguinte forma: to_char( sysdate, 'DDMMYYYY HHMISS' ), com isso, caso o lançamento seja feito após as 12h, por exemplo 13:13:13, a data será gravada na cc_lote_entrada como 01:13:13.
 * Para resolver, alterar o to_char( sysdate, 'DDMMYYYY HHMISS' ) para to_char(sysdate, 'dd/mm/yyyy HH24:MI:SS')",2022-11-14T16:18:16.000-0300,Resolved (Pilot),rMa,40,5,10
CC-3688,gr,2022-11-11T13:46:07.968-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-11-03T13:45:46.000-0300,CMS,Baixa,Falha,CC,CORRECAO-ERROS,Relatório resumo de conta corrente omitindo o dígito,"h1. *Contexto*

 Relatório não exibi o número da conta corrente corretamente, quando a parametrização do número da conta esta para 13 dígitos
h1. *Passos para reproduzir*
 * Validar se o campo Tamanho Máximo do Número da Conta está com valor menor que 13
 ** Gerencia → Configuração → Tamanho Máximo do Número da Conta
 * Gerar o relatório Lançamentos >> Relatórios >> Resumo do dia;
 ** Observar que o campo Conta, aparece inteiro e com o dígito preenchido, conforme imagem abaixo

!image-2022-11-03-13-40-55-269.png|thumbnail!
 * Alterar configuração do tamanho máximo do número da conta para 13
 ** update cc_configuracao set tamanho_maximo_num_cc_sistema = 13, tamanho_maximo_cc = 13;
 * Gerar o relatório Lançamentos >> Relatórios >> Resumo do dia;
 ** Observar que o campo Conta, esta cortando o último digito da conta, conforme imagem a abaixo

!image-2022-11-03-13-40-33-830.png|thumbnail!
h1. *Resultado esperado*

Relatório exibindo o número da conta corrente de forma correta
h1. *Solução Técnica*

Alterar layout do relatório aumentando o campo referente ao número da conta.

!image-2022-11-11-13-45-35-882.png!

Arquivo rlresumo.jrxml

Para alterar o layout é necessário o iReport instalado na máquina.

 
h1. *Versão*

12.0.49
  
----
h1. *Descrição Care*

Foi observado que o campo NUM_CONTA da tabela CC_CC tem precisão de number(13), porém, quando o conta corrente está parametrizado para utilização dos 13 dígitos, o ultimo dígito do número da conta é omitido da impressão.

!image-2022-11-03-13-40-33-830.png|thumbnail!

Quando alterado o quantidade de dígitos no número da conta para 12, a impressão fica correta.

!image-2022-11-03-13-40-55-269.png|thumbnail!

 ",2022-11-28T18:39:43.000-0300,Resolved (Pilot),rMa,88,11,22
TS-579,al,2022-11-01T11:00:43.730-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-10-26T17:30:24.000-0300,LSELJ,Baixa,Falha,TS,CORRECAO-ERROS,"[504967] Importação de TED via arquivo texto não remove espaços a esquerda (inicio) do campo ""Finalidade""","h1. *Contexto*

Ao processar o arquivo 'IMPORTACAO DE LIQUIDACAO - VIA ARQUIVO TEXTO' (menu Processo > Importação de arquivos), ocorre o erro "" _TS-1257: A finalidade do lancamento 57742 nao pertence ao tipo de Doc/Ted sendo enviado! Rel: 13 Finalidade: 957_ "".

O erro ocorre pois na posição 268-277 destinado a finalidade, foi informado espaços antes do valor, e no código removemos apenas espaços a direita deste campo.

!https://attachment.freshdesk.com/inline/attachment?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MzUxNzk0MTgzOTIsImRvbWFpbiI6Im1hdGVyYS5mcmVzaGRlc2suY29tIiwiYWNjb3VudF9pZCI6Nzc3NzQ5fQ.8Pa0P9TW1qhaflBt93MmsdeufQiC8Up676RxvIYLLKk!

Link Repositório - [https://stash.matera.com/projects/UCC/repos/liquidacao-financeira/browse/backend/src/oracle/procedures/sTsGeraLiqdcViaTxt.sql?at=refs%2Ftags%2Fv13.5.3#286]
h1. *Passos pra reproduzir*

1. Importar arquivo texto no Menu > Processo > Importação de Arquivos, com espaços antes do valor do campo Finalidade (268-277).
{noformat}
1.1. Filtrando pelo ""Tipo"": 301 - IMPORTACAO DE LIQUIDACAO - VIA ARQUIVO TEXTO, e inserindo o caminho do arquivo
1.2. Clicar no botão ""Selecionar"" do canto esquerdo
1.3. Clicar no botão ""Ler arquivo""
1.4. Visualizar o lote ""em processamento"" no canto direito
1.5. Clicar no botão ""Selecionar"" do canto direito
1.6. Clicar no botão ""Processar""{noformat}
h1. *Resultado atual*

Evidências da reprodução [^Evidências da reprodução - TS-579.pdf]

Falha no ** processamento do arquivo:
 !image-2022-10-26-17-18-46-484.png!
h1. *Resultado esperado*

Permitir o processamento do arquivo texto, removendo os espaços extras antes do campo Finalidade.
h1. *Solução Técnica*

 Ao ler o campo *vIdFinalidadeDoc*  na *sTsGeraLiqdcViaTxt*: Adicionar a função *ltrim* para remover os espaços em branco que estão a esquerda.
h1. *Versão*",2022-11-28T18:40:43.000-0300,Resolved (Pilot),rMa,144,18,36
CC-3401,lh,2022-11-08T09:47:09.472-0300,11608,In Technical Analysis,jira,status,11607,2022-08-21T13:10:57.000-0300,CSD,Baixa,Dívida Técnica,CC,CORRECAO-ERROS,Validacao casas decimais campo valor servico v4/lancamento,"h1.*Contexto*
Incluir no serviço POST /v4/lancamentos uma validação para que o atributo valor não permita a inclusão de lançamentos com mais de 2 casas decimais. 

Realizado teste com o payload abaixo resultando na inclusão do lancamento com valor arredondado.

 
{
    ""data"": {
        ""nomeUsuario"": ""SDBANCO2"",
        ""lancamentos"": [
            {
                ""exibeLancamentoAgrupado"": false,
                ""historico"": 998,
                ""valor"": 334.126
,
                ""validaSaldo"": false,
                ""agencia"": 1,
                ""dataLancamento"": ""2014-11-17"",
                ""transactionId"": ""200"",
                ""bloqueio"": {
                    ""idBloqueio"": 2,
                    ""idLancamentoBloqueio"": 218717
                },
                ""atualizaValorLote"": false,
                ""numConta"": 201120,
                ""referenciaMovimento"": ""teste extrato"",
                ""idLancamento"": 218716,
                ""enviaNotificacao"": false,
                ""detalhes"": ""\{_  \""endToEndId\"" : \""E13370835202107021256TvbbsD667Aa\"",_  \""remittanceInformation\"" : \""{\""desiredResult\"":\""SUCCESS\""}\"",_  \""contraparte\"" : \{_    \""agencia\"" : \""9992\"",_    \""numConta\"" : \""843577\"",_    \""cpfCnpj\"" : \""04841682074\"",_    \""ispb\"" : \""208\""_  }_}""
            }
        ],
        ""loteEntrada"": 14356,
        ""subSistema"": ""MIP""
    }
}
 
Segue extrato:
 
!image-2022-08-21-13-01-06-053.png!
 

h1.*Passos pra reproduzir*

1. Executar API POST /v4/lancamentos, com o campo valor contendo 3 ou mais casas decimais;
2. Visualizar o Extrato Interno no Conta.

h1.*Resultado atual*

O lançamento de com um valor de 3 ou mais casas decimais está sendo arredondado para somente 2 casas.

Reprodução anexa  [^Evidências da reprodução - CC-3401.pdf] 

h1.*Resultado esperado*

Não permitir o lançamento com 3 ou mais casas decimais, assim não ocorrerá arredondamento de valor.

Ajustar a API POST */v4/lancamentos* para ter o mesmo comportamento da POST v2/lancamentos, que ao ser informado o valor com 3 casas decimais ou mais retornará:

{
    ""error"": [
        {
            ""code"": ""Digits"",
            ""message"": ""Campo lancamentos[0].valor: valor numérico fora do limite (<15 dígitos>.<2 dígitos> esperado). Valor informado: [35,038]"",
            ""field"": ""lancamentos[0].valor""
        }
    ]
}
h1.*Solução Técnica*
h1.*Versão*",2022-11-28T18:40:10.000-0300,Fechado,rMa,112,14,28
CC-3740,gr,2022-11-24T14:18:49.615-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-11-11T10:14:34.000-0300,COSO,Média,Falha,CC,CORRECAO-ERROS,506051 - lançamento automático sistema,"Bom dia,

erro referente ao card https://jira.matera.com/browse/CC-2767 ainda ocorre.
h1. Contexto

No card CC-2767 foi tratado somente os lançamentos inseridos com o tipo_entrada = I, feitos na virada de dia. No cenário do cliente, na virada do dia estão entrando lançamentos com o tipo_entrada = S. Esse também deve ser considerado no tratamento realizado para o tipo I.
h1. Passos para reprodução.

Realizar as devidas configurações e passos nas evidências anexadas à esse jira. 
 No passo que realiza a virada do dia, virar até o primeiro dia do próximo mês, com a tela de lançamentos aberta. Pois, no primeiro dia útil alguns lançamentos são realizados na virada do dia com o tipo_entrada = S. Realizar um lançamento, esse primeiro cai para aprovação.
 Realizar um segundo lançamento, esse é aprovado automaticamente, sem cair para aprovação e todos os demais lançamentos realizados na sequência.
h1. Análise Técnica

Alterar a tela cdlanca.gsx e ajustar o select abaixo:
{code:sql}
sqlImmediate(""select 'S'
	      into   :frmLANCAMENTO.isLoteIntegracao
	      from   cc_lote_entrada
	      where  id_lote_entrada = :frmLANCAMENTO.dfLOTE_CORRENTE and
		     tipo_entrada = 'I'"")
{code}
alterar para considerar também o tipo_entrada = 'S'
h1. Versão

12.0.x",2022-12-02T12:06:53.000-0300,Resolved (Pilot),rMa,56,7,14
TS-602,al,2022-11-28T09:48:56.452-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-11-23T17:36:52.000-0300,INCFOUSF,Média,Falha,TS,CORRECAO-ERROS,[507695] Duplicidade de Lançamentos ,"Na abertura de dia do TES, chamamos o objeto pTsAbreDia.FinalizaAbertura > que insere na fila QTS_CONTABIL_ASSINC .

Existe um listener que fica monitorando a fila e executa a contabilização:

ContabilizacaoAssincronaListener.java > contabilizacaoAssincronaService.gerarContabilizacao.java > contabilizacaoAssincronaBusiness.gerarContabilizacao.java > contabilizarDia > contabilizaDiaAssincrono.execute > sTsContabilizaDiaAssincrono.sql > sTsContabilizaDia.sql > insere na ts_contbde_diaria.

O processo na abertura de dia não valida se já existe uma contabilidade para a data em questão, então como já foi feito manual, gera a duplicidade.

A tela de Recontabilização, faz um delete na ts_contbde_diaria, e por isso quando recontabiliza novamente, a contabilidade fica correta.

A tela de Recontabilização chama o objeto sTsRecontabilizaDia.


*Solução Técnica:*

Acrescentar no objeto sTsContabilizaDiaAssincrono um delete na tabela ts_contbde_diaria filtrando pela data retroativa (data_entrada) e num_empresa antes da chamado do objeto sTsContabilizaDia. similar ao que acontece no objeto sTsRecontabilizaDia

 !screenshot-1.png|thumbnail! 
",2022-12-12T15:04:52.000-0300,Resolved (Pilot),rMa,80,10,20
CC-3779,jr,2022-12-02T09:30:51.205-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-11-23T17:35:27.000-0300,H6LOC,Média,Falha,CC,CORRECAO-ERROS,C6 - Geração de contas em prejuízo no contábil,"Durante a chamada da proc que registra as contas em prejuízo contábil ocorreu uma falha no processo de transferência de contas para prejuízo. Ocorreu uma exceção no processo e a rotina foi abortada.

Entende-se que a falha ocorreu porque estava inserindo uma conta que já possuía registro na tabela. Observando o erro de PK, a validação ocorre somente por id_CC.

print em anexo:


Proc sCcLancamentosContabeisAd
Insert identificado:
Insert into CC_PREJUIZO_DIVIDA_CONTABIL (
id_cc,
data_ini,
saldo_dev_limite,
saldo_dev_acima_limite,
encargo_cred_rot_normal,
encargo_adepos_normal
) values (
pinIdCC,
pidDataIni,
pinSaldoDevLimite,
pinSaldoDevAcimaLimite,
pinEncargoCredRotNormal,
pinEncargoAdeposNormal );

Aberto o card de melhoria para que seja avaliado a possibilidade de criação de um exception para essa rotina, afim de que o processo não seja abortado durante sua execução.",2022-12-19T09:47:02.000-0300,Resolved (Pilot),rMa,88,11,22
CC-3818,ra,2022-12-12T17:19:02.641-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-12-08T08:40:29.000-0300,RNTACOB,Média,Falha,CC,CORRECAO-ERROS,Campo de transferência de Portabilidade está desabilitado," 

Após entrega da pendência #453984 , a flag de ""Transferência de Portabilidade"" fiocu desabilitada permanentemente.

 

Pendencia

!image-2022-12-08-08-29-12-923.png!

 

Imagem demonstrando o campo desabilitado , mesmo sem ter os dados de crédito cadastrados :

 

!image-2022-12-08-08-32-41-298.png!


h1.*Passos pra reproduzir*


{noformat}
1. Cadastrar nova conta do tipo Salário, com as informações de portabilidade para a mesma IF;
2. Copiar arquivo APCS102, já manipulado, para a pasta C:\temp\sdconta\entradaAberta, para ser consumido pelo sistema;
3. Conferir arquivo no menu > Contas > Conta Corrente > Portabilidade de Conta Salário > Portabilidades Enviadas/Recebidas;
4. Aprovar portabilidade;
5. Manipular o arquivo “sdconta.properties”;
6. Parar e subir na sequência o Tomcat;
7. Conferir na pasta C:\temp\sdconta\saidaAberta se o arquivo APCS103 foi gerado;
8. Copiar um modelo de arquivo APCS103_RET para a pasta saidaAberta e alterar os dados conforme o APCS103 gerado;
9. Mover o arquivo APCS103_RET para a pasta C:\temp\sdconta\entradaAberta, para ser consumido pelo sistema;
10. Retornar a tela do CONTA e dar um Filtro/Consulta na tela de portabilidades recebidas;
11. A portabilidade deverá ter o status alterado para “Aprovação confirmada”;
12. Na tela de cadastro da conta, a flag deverá ter sido alterada para ""Transf. Portabilidade"" e os dados da nova portabilidade preenchidos.
{noformat}


h1.*Resultado atual*

A partir da alteração do card CC-3372, optamos por bloquear a edição  da flag ""Transf. Portabilidade"" visto o fluxo ser através de arquivos e mediado pela CIP.

h1.*Resultado esperado*

Devido o cliente efetuar o cadastro manual, será necessário +retornar ao comportamento anterior+ *somente* para o caso da liberação para edição da flag. 

OBS: As demais alterações realizadas no CC-3372 deverão permanecer.

h1.*Solução Técnica*
h1.*Versão*

",2022-12-26T16:22:00.000-0300,Resolved (Pilot),rMa,88,11,22
TS-567,al,2022-10-06T11:32:13.037-0300,11608,In Technical Analysis,jira,status,11607,2022-10-06T09:34:52.000-0300,CSD,Média,Dívida Técnica,TS,DEFIC FUNCIONAL,[Integração JUD] Transferência Judicial sem integrar com Conta Corrente,"Realizar transferência judicial sem integrar com o Sistema de Conta Corrente.

Verificar se a transferência foi feita anteriormente para evitar duplicidade no envio da TED.",2022-10-10T18:44:20.000-0300,Fechado,ra,24,3,6
CC-3617,al,2022-10-19T12:00:36.393-0300,11608,In Technical Analysis,jira,status,11607,2022-10-19T09:38:35.000-0300,TMA,Alta,Falha,CC,CORRECAO-ERROS,Correção do nome do parâmetro na mensagem da fila QCC_CONTA_EXPORTACAO,"De acordo com o card CC-3430, temos: 
 * _Conta cadastrada no Conta Corrente deve publicar a informacao de IND_INTEGRA_DTW na fila SDBANCO.QCC_CONTA_EXPORTACAO que o standin consome._

Esse nome de parâmetro foi alinhado com o Stand In, que ja realizou a implementação. Mas no Conta Corrente foi implementado o nome deste parâmetro como indIntegraDtw. Com isso o Stand In não está inserindo esta conta na sua proxylist. 

 

Correção a ser feita: 
 * Alterar o nome do parâmetro, na fila QCC_CONTA_EXPORTACAO, para -""ind_integra_dtw""- ""IND_INTEGRA_DTW"" 
 * Alterar o tipo de ""boolean"" para ""string"". 

 ",2022-10-22T19:30:46.000-0300,Resolved (Pilot),ra,24,3,6
CC-3498,ofe,2022-10-21T12:03:09.125-0300,11608,In Technical Analysis,jira,status,11607,2022-09-18T19:02:07.000-0300,CSD,Baixa,Dívida Técnica,CC,CORRECAO-ERROS,Replicar na tabela CC_CONTROLE_STATUS a criação de uma conta corrente,"*Problema:* Ao cadastrar uma conta corrente quando o recurso ""APROV_CCC"" está inativo, não está sendo feita a replicação para a tabela CC_CONTROLE_STATUS.

 

=================================

*Sugestão de solução: (testada)*

sCcValidaDepoisInsAtuCc:

Inserir ""else"" apos a chamda da sCcAlteraSituacaoCc:
{code:sql}
  if not pInserindo then
    --
    sCcAlteraSituacaoCc( pIdCc, pSituacaoCc );
    --
	--
  else
    --
    sCcControlaStatusConta ( pIdCc, pSituacaoCc );
    --
  end if;

{code}",2022-10-22T19:29:17.000-0300,Fechado,ra,8,1,2
CC-3679,al,2022-11-01T19:04:20.526-0300,11608,In Technical Analysis,jira,status,11607,2022-11-01T18:56:57.000-0300,CSD,Baixa,Dívida Técnica,CC,CORRECAO-ERROS,Correção do nome do parâmetro na mensagem da fila QCC_CONTA_EXPORTACAO,"Complemento do CARD CC-3617

Correção a ser feita: [*Sisinfo*|https://jira.matera.com/secure/RapidBoard.jspa?rapidView=633&selectedIssue=CC-3477#tab-1]
 * Alterar o nome do parâmetro, na fila QCC_CONTA_EXPORTACAO
 * DE :       ""ind_integra_dtw""
 * PARA:    ""IND_INTEGRA_DTW"" 

 
h3. *Alteração ja realizada no Objeto Anexo*",2022-11-07T18:12:13.000-0300,Fechado,ra,32,4,8
TS-556,al,2022-10-03T20:59:42.638-0300,13316,In Technical Analysis (Pilot),jira,status,13315,2022-09-19T13:53:34.000-0300,NAACOB,Média,Falha,TS,CORRECAO-ERROS,Correção dos campos Data de Vencimento e Data de Pagamento,"h1. *Contexto*

Prezados,
 Cliente: Agibank

Identificamos a necessidade de correção do campo ""Data de Vencimento"" no Recibo de Liquidação de Boletos. Segue detalhamento da solicitação:
  
 1. Solicitação 501871: Alterar a informação do campo de Data de Vencimento >> para a data correta correspondente ao vencimento. Atualmente é informada a Data de Pagamento.
 R: Falha. O Label deve ser alterado para *Data de Pagamento*
h1. *Passos pra reproduzir*

Reprodução anexa [^TS-556 - Evidências da Reprodução_v2.pdf]
h1. *Resultado atual*

O campo “Data Vencimento” presente no recibo está {color:#de350b}incorreto{color}, pois está recebendo a data da liquidação(Data Pagamento).
h1. *Resultado esperado*

Corrigir o label para “Data *Pagamento*”
h1. *Solução Técnica*
h1. *Versão*",2022-10-10T18:43:27.000-0300,Resolved (Pilot),rr,48,6,12
CC-3398,ofe,2022-09-05T14:23:57.184-0300,11608,In Technical Analysis,jira,status,11607,2022-08-19T11:42:33.000-0300,RRME,Média,Melhoria,CC,MELHORIAS,[Integração Stand In] Lançamentos saldo vinculado,"_texto com ênfase_Alterar integração de lançamentos com prazo de vinculação para que não sejam disponibilizados no Stand In

 

*Fluxo de negócio:*

Para movimentações realizadas com históricos de crédito com prazo de vinculação configurado com valor maior que zero, o sistema de Conta Corrente trabalha este valor no campo ""Saldo Vinculado"" e somente realiza a liberação deste valor:
 * na virada de D+N (para históricos de DOC - tipo de documento 1 ou 10)
 * na virada de D+N+1 (para históricos de tipo de documento diferente de 1 e 10)

*Ex:*

Histórico 123 (DOC) está configurado com 1 dia de prazo de vinculação

Histórico 234 (Cheque) está configurado com 1 dia de prazo de vinculação

Sistema está aberto na data de referência 17/08/2022

Correntista recebe um crédito do historico 123 no dia 17/08 no valor de 100

Correntista recebe um crédito do historico 234 no dia 17/08 no valor de 200

Após realizar a abertura do dia 18/08, o valor do lançamento de 100 será disponibilizado na conta corrente. O valor de 200 continuará vinculado

Após realizar a abertura do dia 19/08, o valor do lançamento de 200 será disponibilizado na conta corrente. 

 

*Solução Proposta*

Ao identificar que um lançamento de crédito possui prazo de vinculação, calcular o valor da data do lançamento em que o saldo seria desvinculado e enviar esta data como data de movimentação para o Stand In.

Exemplo no documento: [https://docs.google.com/document/d/1nrMDLt9ZlsxCrulFbI2qn3Sliq5fGpii2okDqX075gU/edit?usp=sharing]

O processo de sincronismo destes lançamentos também devem enviar as mesmas datas.

 

*Análise técnica:*

 

*1. pCcTrataReplicacaoLancamento.lMontaJsonLancamentoAvulso*
{code:sql}
if pisTipoLancamento = C and pirLancamento.prazo_vinculacao > 0 then
   if pirLancamento.tipo_documento in (1,10) then
      --
      -- Para tipo documento DOC, o saldo é desvinculado logo na abertura do dia seguinte
      --
      voJsonLancamento.putDate( 'dataLancamento', sBcRetornaDiaUtil( pirLancamento.data_lancamento, pirLancamento.prazo_vinculacao );
      --
   else
     --
     -- Para outros tipos de documento, o saldo é desvinculado na abertura do dia seguinte + 1 dia
     --      
     voJsonLancamento.putDate( 'dataLancamento', sBcRetornaDiaUtil( pirLancamento.data_lancamento, pirLancamento.prazo_vinculacao + 1); -- tipo documento diferente de DOC desvincula na virada de 1 dia a mais.
   end if;
--
-- comportamento atual (débitos, ou créditos com prazo vinculação = 0)
--
elsif pisIndLancDataFutura = 'S' then
    --
    voJsonLancamento.putDate( 'dataLancamento', pidtDataLancFuturo );
    --
else
    --
    voJsonLancamento.putDate( 'dataLancamento', pirLancamento.data_lancamento );
    --
end if;
 {code}
*2. ivcc_api_standin_sinc_lanc*

 
{code:sql}
Calcular data de lançamento conforme tipo de lançamento, prazo de vinculação e tipo de documento.
Como requer join com a bc_dia_util, a sugestâo foi incluir novos unions na view (objeto em anexo no card){code}
 

*3. ivcc_api_standin_sinc_conta*
{code:sql}
Não retornar valor de saldo vinculado compondo o saldo disponível da conta (objeto alterado está anexado ao card){code}
 

 ",2022-09-30T22:34:52.000-0300,Fechado,al,152,19,38
TS-483,as,2022-09-01T08:23:15.852-0300,11608,In Technical Analysis,jira,status,11607,2022-05-05T16:38:09.000-0300,CSD,Média,Melhoria,TS,MELHORIAS,[DESVIO_DEBITO] Alteracoes no servico de lançamento,"Necessária a alteração na chamada do serviço de lançamentos POST /v2/contas/\{agencia}/\{conta}/lancamentos para tratar os seguintes pontos do desvio de débito:

 

1)   Sub Sistema de Origem

*Problema:* Ao integrar com o Stand In está sendo enviado o Sub Sistema de Origem da Liquidação, porém, quando a integração ocorre primeiro com o Conta Corrente, o Liquidação Financeira abre lote de entrada com Sistema ""SDTES"". Caso existam tratamentos no Conta baseados no sistema do lote (sistema SDTES), as integrações que são replicadas a partir do Stand In irão quebrar estas integrações, pois passarão a dar tratamentos diferenciados para as liquidações originadas no Convenios, Renda Fixa, Emp, Cobrança, Etc, pois o lote de entrada no Sistema de Conta Corrente passará a estar registrado com estes sistemas no momento da replicação Stand In => Conta ao invés de SDTES.

*Solução:* Alterar a integração Liquidação Financeira => Stand In de modo que seja informado SDTES na tag ""subSistema"" da API Rest de inclusão de lançamentos.

*Solução técnica:*

1. alterar procedure ipTs_Standin.lIngetraLancJmsRest para enviar SDTES:

vJsonLote.put('subSistema', 'SDTES');

 

2. Alterar classe classe StandinIntegrationExternalCancelation:

De:

final ResponseEntity<Void> responseEntity = standinRestApiFeignClient.estornoLancamento(s.getnomeSubSisOrigem(), s.getIdempotencyId());

Para: 

final ResponseEntity<Void> responseEntity = standinRestApiFeignClient.estornoLancamento(SDTES, s.getIdempotencyId());

Ou seja, reverter PR: [https://stash.matera.com/projects/UCC/repos/liquidacao-financeira/commits/7f322c151b060e8760f56c148d4fec1260a56b80#business/src/main/java/com/matera/banco/sdtes/service/integracao/standin/StandinIntegrationExternalCancelation.java]

 

2) Informar a data do lançamento:

*Problema:* o desvio de débito do Stand In faz uso do endpoint POST /v2/contas/\{agencia}/\{conta}/lancamentos e não está sendo passada a data de lançamento referente a movimentação.

A partir do tratamento dado no contexto de ""D+1"" é possível informar esta data no serviço, portanto alterar o TES para enviar na chamada.**

 ",2022-09-30T22:55:11.000-0300,Fechado,dro,168,21,42
CC-3195,as,2022-10-06T14:12:34.855-0300,11608,In Technical Analysis,jira,status,11607,2022-06-10T15:56:46.000-0300,H6LOC,Média,Melhoria,CC,MELHORIAS,[CADOC 3040] Cálculo de Dias De Atraso por dias corridos,"h1. Contexto

Tornar a regra de calculo de dias em atraso do CADOC 3040 configurável com as opções: dias corridos ou dias úteis. 
h1. Detalhamento

No funcionamento atual do sistema o calculo de dias de atraso para o CADOC 3040 considera o último dia útil da data base indicada. 

Considerando o trecho do documento de preenchimento do CADOC entendemos que não está explícito quando o ultimo dia do mes base é um dia não útil. Portanto podem haver questionamentos quanto a regra. Verificamos com o time do Emprestimo e assim como no Conta a regra também já foi utilizar dia útil mas em determinado momento alteraram a regra para considerar o último dia do mês base. 

Atualmente somente um dos clientes é que possui um código específico para fazer a apuração considerando os dias corridos.

Diante deste cenário iremos tratar uma melhoria para:
 * Criação de um novo recurso para indicar qual a forma de cálculo: dias úteis ou dias corridos. Diferente do tratamento atual iremos deixar como padrão dias úteis e caso necessário poderá ser alterado para o comportamento anterior.
 * Alteração da regra para obter o ultimo dia do mês base (last_day). Solicitação customização tribanco  [https://cas2.matera.com/project/chamado/chamado.xhtml?id=205474]

 

Tester: necessário testar o fluxo completo com o Informes

Cenário: o ultimo dia do mês (data_base) deve ser um dia não útil. Novembro/2014.
h1. Analise Técnica

 

Criação de um recurso (DCORRI3040) para controlar se os dias em atraso serão corridos ou uteis.

Inclusão de uma verificação do recurso, e caso esteja ativo, guardar em uma variável a diferença do ultimo dia útil para o ultimo dia corrido do mês.
  
 if sCcRecursoAtivo('DCORRI3040') then
   –
   vnDiferencaQtdDiasUteis := last_day(pidtData) - pidtData;
   –
 end if;
  
 Caso o recurso esteja ativo, somar a diferença de dias uteis ao ultimo dia passado pelo método para considerar os dias corridos na quantidade de dias em atraso para a geração do CADOC3040.
  
 if sCcRecursoAtivo('DCORRI3040') then
   –
   vnDiasAtraso := vnDiasAtraso + vnDiferencaQtdDiasUteis;
 –
 end if;
  
 Validar se é necessário criar um novo recurso para controlar a validação existente para o tribanco (ULTDIAPREJ), e caso ela esteja ativa, manter o funcionamento atual do código
 vQtdDiasPrejuizo := last_day(pidtData) - vDataIniPrejuizo;
  
  
  ",2022-10-31T18:06:57.000-0300,Fechado,dro,136,17,34
